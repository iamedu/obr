<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20120414122651.303' name='Untitled'>
  <resource id='antlr/2.7.7' presentationname='antlr' symbolicname='antlr' uri='antlr-2.7.7.jar' version='2.7.7'>
    <size>
      445786
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='antlr'/>
      <p n='symbolicname' v='antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.build'/>
      <p n='uses' v='antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.collections'/>
      <p n='uses' v='antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr'/>
      <p n='uses' v='antlr.collections.impl,antlr.collections,antlr.actions.csharp,antlr.actions.cpp,antlr.actions.java,antlr.debug,antlr.actions.python,antlr.ASdebug,antlr.preprocessor'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.actions.cpp'/>
      <p n='uses' v='antlr.collections.impl,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.actions.python'/>
      <p n='uses' v='antlr.collections.impl,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.preprocessor'/>
      <p n='uses' v='antlr.collections.impl,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.actions.java'/>
      <p n='uses' v='antlr.collections.impl,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.collections.impl'/>
      <p n='uses' v='antlr.collections,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.debug.misc'/>
      <p n='uses' v='javax.swing.tree,javax.swing.event,javax.swing,antlr.collections,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.debug'/>
      <p n='uses' v='antlr.collections.impl,antlr,antlr.collections'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.ASdebug'/>
      <p n='uses' v='antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='antlr.actions.csharp'/>
      <p n='uses' v='antlr.collections.impl,antlr'/>
      <p n='version' t='version' v='2.7.7'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.tree
    </require>
  </resource>
  <resource id='avro/1.5.1' presentationname='avro' symbolicname='avro' uri='avro-1.5.1.jar' version='1.5.1'>
    <size>
      263604
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='avro'/>
      <p n='symbolicname' v='avro'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro'/>
      <p n='uses' v='org.codehaus.jackson,org.codehaus.jackson.map'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.generic'/>
      <p n='uses' v='org.apache.avro,org.apache.avro.io,org.apache.avro.util'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.file'/>
      <p n='uses' v='org.apache.avro,org.apache.avro.io,org.apache.avro.util,org.apache.avro.generic,org.xerial.snappy'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.util'/>
      <p n='uses' v='org.apache.avro.io'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.specific'/>
      <p n='uses' v='org.apache.avro,org.apache.avro.generic,org.apache.avro.io'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.io.parsing'/>
      <p n='uses' v='org.apache.avro,org.codehaus.jackson,org.apache.avro.io'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.io'/>
      <p n='uses' v='org.apache.avro,org.apache.avro.generic,org.apache.avro.util,org.codehaus.jackson,org.apache.avro.io.parsing'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avro.reflect'/>
      <p n='uses' v='org.apache.avro,com.thoughtworks.paranamer,org.apache.avro.generic,org.codehaus.jackson,org.apache.avro.specific,org.apache.avro.io'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.paranamer)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.thoughtworks.paranamer ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.map ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xerial.snappy)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xerial.snappy
    </require>
  </resource>
  <resource id='ch.qos.logback.classic/1.0.1' presentationname='Logback Classic Module' symbolicname='ch.qos.logback.classic' uri='ch.qos.logback.classic-1.0.1.jar' version='1.0.1'>
    <description>
      Logback: the reliable, generic, fast and flexible logging library
       for Java.
    </description>
    <size>
      248207
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html, http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
    </license>
    <documentation>
      http://www.qos.ch
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Logback Classic Module'/>
      <p n='symbolicname' v='ch.qos.logback.classic'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.turbo'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.classic,org.slf4j,ch.qos.logback.core.status,ch.qos.logback.classic.util,ch.qos.logback.core,ch.qos.logback.classic.gaffer,ch.qos.logback.core.joran.spi,ch.qos.logback.classic.joran,ch.qos.logback.core.joran.event,ch.qos.logback.core.joran.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.db.names'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.util'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.classic,ch.qos.logback.core,ch.qos.logback.classic.gaffer,ch.qos.logback.core.joran.spi,ch.qos.logback.core.util,ch.qos.logback.classic.joran,ch.qos.logback.classic.selector,ch.qos.logback.core.filter,ch.qos.logback.classic.boolex,ch.qos.logback.classic.encoder,javax.naming,ch.qos.logback.classic.spi,org.slf4j.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.jmx'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.status,ch.qos.logback.classic.util,ch.qos.logback.classic,ch.qos.logback.core,javax.management,ch.qos.logback.core.joran.spi,ch.qos.logback.classic.joran,ch.qos.logback.core.util,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.jul'/>
      <p n='uses' v='ch.qos.logback.classic,ch.qos.logback.core.spi,ch.qos.logback.core,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.joran.action'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.classic.turbo,ch.qos.logback.classic,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.joran.action,ch.qos.logback.core.util,org.xml.sax,ch.qos.logback.classic.net,ch.qos.logback.classic.boolex,ch.qos.logback.classic.util,javax.naming,ch.qos.logback.classic.jmx,javax.management,ch.qos.logback.core.spi,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.html'/>
      <p n='uses' v='ch.qos.logback.core.html,ch.qos.logback.core,ch.qos.logback.core.helpers,ch.qos.logback.classic.spi,ch.qos.logback.classic,ch.qos.logback.core.pattern,ch.qos.logback.classic.pattern'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core,ch.qos.logback.core.encoder,ch.qos.logback.classic.encoder,org.slf4j,org.slf4j.spi,ch.qos.logback.core.spi,ch.qos.logback.classic.spi,ch.qos.logback.classic.turbo,ch.qos.logback.classic.joran.action,ch.qos.logback.core.pattern,ch.qos.logback.core.pattern.parser,ch.qos.logback.classic.pattern,javax.servlet.http'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.selector'/>
      <p n='uses' v='ch.qos.logback.core.status,javax.naming,ch.qos.logback.classic.util,ch.qos.logback.classic,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.util,ch.qos.logback.classic.joran'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.helpers'/>
      <p n='uses' v='javax.servlet,org.slf4j,javax.servlet.http'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.gaffer'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core.spi,groovy.lang,org.codehaus.groovy.reflection,org.codehaus.groovy.runtime,ch.qos.logback.core,org.codehaus.groovy.runtime.callsite,org.codehaus.groovy.runtime.typehandling,ch.qos.logback.classic,ch.qos.logback.classic.turbo,ch.qos.logback.core.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.boolex'/>
      <p n='uses' v='groovy.lang,org.codehaus.groovy.runtime.typehandling,org.codehaus.groovy.reflection,org.codehaus.groovy.runtime,ch.qos.logback.classic.spi,org.codehaus.groovy.runtime.callsite,ch.qos.logback.core.spi,ch.qos.logback.core.boolex,ch.qos.logback.core.util,org.codehaus.groovy.control,ch.qos.logback.classic,ch.qos.logback.core,org.slf4j'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.pattern'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core,ch.qos.logback.core.boolex,ch.qos.logback.classic.spi,ch.qos.logback.core.pattern,ch.qos.logback.core.util,ch.qos.logback.classic,org.slf4j,ch.qos.logback.classic.util,ch.qos.logback.core.net'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.filter'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.filter,ch.qos.logback.classic,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.encoder'/>
      <p n='uses' v='ch.qos.logback.classic,ch.qos.logback.core.pattern,ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.joran'/>
      <p n='uses' v='ch.qos.logback.core.joran.conditional,ch.qos.logback.classic.util,ch.qos.logback.classic.sift,ch.qos.logback.classic.joran.action,ch.qos.logback.core.joran,ch.qos.logback.core.joran.spi,ch.qos.logback.core.joran.action,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.net'/>
      <p n='uses' v='ch.qos.logback.core.spi,javax.naming,javax.jms,ch.qos.logback.core.net,ch.qos.logback.classic.spi,ch.qos.logback.classic.util,ch.qos.logback.classic,org.slf4j,ch.qos.logback.core.helpers,ch.qos.logback.core.pattern,ch.qos.logback.core,ch.qos.logback.core.boolex,ch.qos.logback.classic.boolex,ch.qos.logback.core.joran.spi,ch.qos.logback.classic.joran,ch.qos.logback.classic.pattern'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.db'/>
      <p n='uses' v='ch.qos.logback.classic.db.names,ch.qos.logback.core.db,ch.qos.logback.classic,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.log4j'/>
      <p n='uses' v='ch.qos.logback.core.helpers,ch.qos.logback.classic,ch.qos.logback.core,ch.qos.logback.classic.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.selector.servlet'/>
      <p n='uses' v='javax.servlet,javax.naming,ch.qos.logback.classic.util,ch.qos.logback.classic,ch.qos.logback.classic.selector,org.slf4j'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.sift'/>
      <p n='uses' v='ch.qos.logback.core.joran.event,ch.qos.logback.core.sift,ch.qos.logback.classic.spi,ch.qos.logback.core.spi,ch.qos.logback.core.status,org.codehaus.groovy.reflection,ch.qos.logback.core,ch.qos.logback.classic.gaffer,org.codehaus.groovy.runtime.callsite,ch.qos.logback.core.helpers,ch.qos.logback.core.filter,groovy.lang,org.codehaus.groovy.runtime.typehandling,org.codehaus.groovy.runtime,ch.qos.logback.classic.util,ch.qos.logback.classic,ch.qos.logback.classic.selector,ch.qos.logback.core.util,ch.qos.logback.core.joran.spi,ch.qos.logback.core.joran.action,org.xml.sax'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.classic.spi'/>
      <p n='uses' v='ch.qos.logback.core,ch.qos.logback.core.spi,ch.qos.logback.classic,org.slf4j,org.slf4j.spi,ch.qos.logback.classic.util,org.slf4j.helpers,sun.reflect,ch.qos.logback.classic.turbo'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.impl'/>
      <p n='uses' v='org.slf4j.spi,ch.qos.logback.classic.util,org.slf4j.helpers,ch.qos.logback.classic,ch.qos.logback.core,ch.qos.logback.classic.selector,ch.qos.logback.core.joran.spi,org.slf4j,ch.qos.logback.core.util'/>
      <p n='version' t='version' v='1.6.4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.boolex)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.boolex ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.db)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.db ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.db.names)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.db.names ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.encoder)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.encoder ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.filter)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.filter ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.gaffer)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.gaffer ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.helpers)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.helpers ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.html)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.html ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.jmx)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.jmx ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.joran)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.joran ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.joran.action)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.joran.action ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.jul)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.jul ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.log4j)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.log4j ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.net)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.net ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.pattern)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.pattern ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.selector)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.selector ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.selector.servlet)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.selector.servlet ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.sift)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.sift ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.spi)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.spi ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.turbo)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.turbo ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.classic.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.classic.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.boolex)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.boolex ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.db)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.db ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.encoder)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.encoder ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.filter)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.filter ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.helpers)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.helpers ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.html)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.html ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.action)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.action ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.conditional)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.conditional ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.event)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.event ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.spi)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.spi ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.net)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.net ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.pattern)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.pattern ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.pattern.parser)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.pattern.parser ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.read)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.read ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.rolling)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.rolling ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.rolling.helper)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.rolling.helper ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.sift)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.sift ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.spi)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.spi ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.status)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.status ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package groovy.lang ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.control)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.control ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.reflection)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.reflection ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime.callsite)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime.callsite ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime.typehandling)(version&gt;=1.7.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime.typehandling ;version=1.7.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.helpers)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.helpers ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='ch.qos.logback.core/1.0.1' presentationname='Logback Core Module' symbolicname='ch.qos.logback.core' uri='ch.qos.logback.core-1.0.1.jar' version='1.0.1'>
    <description>
      Logback: the generic, reliable, fast and flexible logging library
       for Java.
    </description>
    <size>
      329892
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html, http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
    </license>
    <documentation>
      http://www.qos.ch
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Logback Core Module'/>
      <p n='symbolicname' v='ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.spi'/>
      <p n='uses' v='ch.qos.logback.core,ch.qos.logback.core.status,ch.qos.logback.core.helpers,ch.qos.logback.core.filter'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.status'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core,ch.qos.logback.core.util,ch.qos.logback.core.helpers,javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.db.dialect'/>
      <p n='uses' v='ch.qos.logback.core.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.property'/>
      <p n='uses' v='ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.status,ch.qos.logback.core.filter,ch.qos.logback.core.helpers,ch.qos.logback.core.joran.spi,ch.qos.logback.core.recovery,ch.qos.logback.core.util,ch.qos.logback.core.encoder'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.encoder'/>
      <p n='uses' v='ch.qos.logback.core,ch.qos.logback.core.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran.action'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.boolex,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.util,org.xml.sax,ch.qos.logback.core.joran.util,ch.qos.logback.core.joran.event,ch.qos.logback.core.pattern.util,ch.qos.logback.core.status'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran.spi'/>
      <p n='uses' v='ch.qos.logback.core.spi,org.xml.sax,ch.qos.logback.core.joran.event,ch.qos.logback.core,ch.qos.logback.core.util,ch.qos.logback.core.joran.action,ch.qos.logback.core.status'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran.event'/>
      <p n='uses' v='org.xml.sax,org.xml.sax.helpers,ch.qos.logback.core.status,ch.qos.logback.core.spi,javax.xml.parsers,ch.qos.logback.core,ch.qos.logback.core.joran.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.net'/>
      <p n='uses' v='javax.naming,ch.qos.logback.core,javax.mail,ch.qos.logback.core.helpers,ch.qos.logback.core.spi,ch.qos.logback.core.sift,javax.mail.internet,ch.qos.logback.core.pattern,ch.qos.logback.core.boolex,ch.qos.logback.core.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core.spi,ch.qos.logback.core.joran.event,ch.qos.logback.core,ch.qos.logback.core.joran.util,ch.qos.logback.core.joran.spi,org.xml.sax,ch.qos.logback.core.joran.action'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.boolex'/>
      <p n='uses' v='ch.qos.logback.core.spi,org.codehaus.janino,ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.rolling'/>
      <p n='uses' v='ch.qos.logback.core,ch.qos.logback.core.rolling.helper,ch.qos.logback.core.spi,ch.qos.logback.core.joran.spi,ch.qos.logback.core.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.recovery'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core,ch.qos.logback.core.net'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.sift'/>
      <p n='uses' v='ch.qos.logback.core.joran.event,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.spi,ch.qos.logback.core.helpers,ch.qos.logback.core.joran,ch.qos.logback.core.joran.action'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.db'/>
      <p n='uses' v='javax.naming,javax.sql,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.joran.util,ch.qos.logback.core.joran.action,ch.qos.logback.core.util,org.xml.sax,ch.qos.logback.core.spi,ch.qos.logback.core.db.dialect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.read'/>
      <p n='uses' v='ch.qos.logback.core.helpers,ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.pattern'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core.spi,ch.qos.logback.core,ch.qos.logback.core.pattern.parser,ch.qos.logback.core.encoder'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.pattern.parser'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core.spi,ch.qos.logback.core.pattern,ch.qos.logback.core,ch.qos.logback.core.util,ch.qos.logback.core.pattern.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.html'/>
      <p n='uses' v='ch.qos.logback.core.pattern,ch.qos.logback.core,ch.qos.logback.core.pattern.parser'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran.conditional'/>
      <p n='uses' v='ch.qos.logback.core.joran.event,ch.qos.logback.core.spi,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.joran.action,ch.qos.logback.core.util,org.xml.sax,org.codehaus.janino'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.helpers'/>
      <p n='uses' v='ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.filter'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.boolex'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.layout'/>
      <p n='uses' v='ch.qos.logback.core'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.pattern.util'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.joran.util'/>
      <p n='uses' v='ch.qos.logback.core.status,ch.qos.logback.core,ch.qos.logback.core.joran.spi,ch.qos.logback.core.util,ch.qos.logback.core.spi'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.util'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core,ch.qos.logback.core.status,ch.qos.logback.core.helpers'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='ch.qos.logback.core.rolling.helper'/>
      <p n='uses' v='ch.qos.logback.core.spi,ch.qos.logback.core.status,ch.qos.logback.core.pattern,ch.qos.logback.core.util,ch.qos.logback.core.pattern.util,ch.qos.logback.core,ch.qos.logback.core.pattern.parser,ch.qos.logback.core.rolling'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.boolex)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.boolex ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.db)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.db ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.db.dialect)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.db.dialect ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.encoder)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.encoder ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.filter)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.filter ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.helpers)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.helpers ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.html)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.html ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.action)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.action ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.conditional)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.conditional ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.event)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.event ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.spi)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.spi ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.joran.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.joran.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.layout)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.layout ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.net)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.net ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.pattern)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.pattern ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.pattern.parser)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.pattern.parser ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.pattern.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.pattern.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.property)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.property ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.read)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.read ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.recovery)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.recovery ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.rolling)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.rolling ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.rolling.helper)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.rolling.helper ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.sift)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.sift ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.spi)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.spi ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.status)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.status ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=ch.qos.logback.core.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package ch.qos.logback.core.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.janino)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.janino
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='com.justcloud.model.api/0.1.0' presentationname='com.justcloud.model.api' symbolicname='com.justcloud.model.api' uri='com.justcloud.model.api-0.1.0.jar' version='0.1.0'>
    <size>
      1877
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.justcloud.model.api'/>
      <p n='symbolicname' v='com.justcloud.model.api'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.justcloud.model.domain'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.justcloud.model.dao'/>
      <p n='uses' v='com.justcloud.model.domain'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
  </resource>
  <resource id='com.justcloud.searchable.model.api/0.1.0' presentationname='com.justcloud.searchable.model.api' symbolicname='com.justcloud.searchable.model.api' uri='com.justcloud.searchable.model.api-0.1.0.jar' version='0.1.0'>
    <size>
      1654
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.justcloud.searchable.model.api'/>
      <p n='symbolicname' v='com.justcloud.searchable.model.api'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.justcloud.model.searchable.dao'/>
      <p n='uses' v='com.justcloud.model.dao,com.justcloud.model.domain'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.justcloud.model.dao)(version&gt;=0.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.justcloud.model.dao ;version=[0.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.justcloud.model.domain)(version&gt;=0.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.justcloud.model.domain ;version=[0.1.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.aopalliance/1.0.0' presentationname='AOP Alliance API' symbolicname='com.springsource.org.aopalliance' uri='com.springsource.org.aopalliance-1.0.0.jar' version='1.0.0'>
    <size>
      4615
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='AOP Alliance API'/>
      <p n='symbolicname' v='com.springsource.org.aopalliance'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.aopalliance.aop'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.aopalliance.intercept'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
  </resource>
  <resource id='derby/10.8.2000002.1181258' presentationname='Apache Derby 10.8' symbolicname='derby' uri='derby-10.8.2000002.1181258.jar' version='10.8.2000002.1181258'>
    <size>
      2671577
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Derby 10.8'/>
      <p n='symbolicname' v='derby'/>
      <p n='version' t='version' v='10.8.2000002.1181258'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.authentication'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.database'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.jdbc'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.vti'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='dom4j/1.6.1' presentationname='dom4j' symbolicname='dom4j' uri='dom4j-1.6.1.jar' version='1.6.1'>
    <size>
      314845
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='dom4j'/>
      <p n='symbolicname' v='dom4j'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.swing'/>
      <p n='uses' v='javax.swing.tree,org.dom4j,org.jaxen,javax.swing.table'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.tree'/>
      <p n='uses' v='org.dom4j,org.dom4j.io,org.xml.sax,org.dom4j.rule'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.rule.pattern'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j'/>
      <p n='uses' v='org.xml.sax,org.dom4j.tree,org.dom4j.util,org.jaxen,org.dom4j.xpath,org.dom4j.rule,org.dom4j.io'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.dom'/>
      <p n='uses' v='org.dom4j.tree,org.dom4j,org.w3c.dom,org.dom4j.util'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.xpp'/>
      <p n='uses' v='org.dom4j.tree,org.dom4j,org.gjt.xpp'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.datatype'/>
      <p n='uses' v='org.dom4j.tree,com.sun.msv.datatype.xsd,org.dom4j,com.sun.msv.datatype,org.relaxng.datatype,org.dom4j.io,org.xml.sax,org.dom4j.util'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.util'/>
      <p n='uses' v='org.dom4j,org.dom4j.tree,org.jaxen,org.dom4j.rule,org.xml.sax'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.io'/>
      <p n='uses' v='org.dom4j.tree,org.dom4j,org.w3c.dom,org.xml.sax,org.xml.sax.ext,javax.xml.transform.sax,javax.xml.parsers,org.dom4j.dtd,org.xml.sax.helpers,javax.xml.stream,javax.xml.stream.events,javax.xml.namespace,javax.xml.stream.util,org.xmlpull.v1,org.gjt.xpp,org.dom4j.xpp'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.jaxb'/>
      <p n='uses' v='org.dom4j,org.dom4j.io,javax.xml.bind,org.xml.sax,javax.xml.transform,org.dom4j.dom,javax.xml.transform.stream,org.w3c.dom'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.dtd'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.xpath'/>
      <p n='uses' v='org.dom4j,org.jaxen,org.jaxen.dom4j,org.jaxen.pattern,org.jaxen.saxpath,org.dom4j.rule'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.rule'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule.pattern,org.jaxen'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.bean'/>
      <p n='uses' v='org.dom4j.tree,org.dom4j,org.xml.sax'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.msv.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.datatype
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.datatype.xsd)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.datatype.xsd
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.gjt.xpp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.gjt.xpp
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jaxen
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.dom4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jaxen.dom4j
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.pattern)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jaxen.pattern
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.saxpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jaxen.saxpath
    </require>
    <require extend='false' filter='(&amp;(package=org.relaxng.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.relaxng.datatype
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xmlpull.v1
    </require>
  </resource>
  <resource id='ehcache-core/2.4.3' presentationname='ehcache-core' symbolicname='ehcache-core' uri='ehcache-core-2.4.3.jar' version='2.4.3'>
    <size>
      1021471
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ehcache-core'/>
      <p n='symbolicname' v='ehcache-core'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.search.aggregator'/>
      <p n='uses' v='net.sf.ehcache.search'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.nonstop.store'/>
      <p n='uses' v='net.sf.ehcache.constructs.nonstop,net.sf.ehcache.store,net.sf.ehcache.search.attribute,net.sf.ehcache.search,net.sf.ehcache,net.sf.ehcache.writer,net.sf.ehcache.config,net.sf.ehcache.cluster,net.sf.ehcache.constructs.nonstop.concurrency,net.sf.ehcache.concurrent,net.sf.ehcache.transaction.manager,org.slf4j,javax.transaction'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction.xa.processor'/>
      <p n='uses' v='javax.transaction.xa,net.sf.ehcache.transaction.xa'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.strategy'/>
      <p n='uses' v='org.hibernate.cache.access,org.hibernate.cfg,net.sf.ehcache.hibernate.regions,org.hibernate.cache,org.slf4j,net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.config.generator'/>
      <p n='uses' v='net.sf.ehcache.config,net.sf.ehcache,net.sf.ehcache.config.generator.model,net.sf.ehcache.config.generator.model.elements'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.regions'/>
      <p n='uses' v='org.hibernate.cache.access,net.sf.ehcache.hibernate.strategy,org.hibernate.cfg,org.hibernate.cache,net.sf.ehcache,org.slf4j,net.sf.ehcache.hibernate.nonstop,net.sf.ehcache.util,net.sf.ehcache.constructs.nonstop,net.sf.ehcache.concurrent'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.writer.writebehind'/>
      <p n='uses' v='net.sf.ehcache.writer.writebehind.operations,net.sf.ehcache,net.sf.ehcache.writer,net.sf.ehcache.config'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.concurrent'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.statistics'/>
      <p n='uses' v='net.sf.ehcache.event,net.sf.ehcache.writer.writebehind,net.sf.ehcache,net.sf.ehcache.writer,org.slf4j'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache'/>
      <p n='uses' v='net.sf.ehcache.loader,org.slf4j,net.sf.ehcache.constructs.nonstop.store,net.sf.ehcache.constructs.nonstop,net.sf.ehcache.concurrent,net.sf.ehcache.store,net.sf.ehcache.transaction.manager,net.sf.ehcache.cluster,net.sf.ehcache.config,net.sf.ehcache.transaction.local,net.sf.ehcache.terracotta,net.sf.ehcache.transaction,net.sf.ehcache.util,net.sf.ehcache.event,net.sf.ehcache.search,net.sf.ehcache.statistics,net.sf.ehcache.statistics.sampled,net.sf.ehcache.exceptionhandler,net.sf.ehcache.extension,net.sf.ehcache.transaction.xa,javax.transaction,net.sf.ehcache.store.compound.impl,net.sf.ehcache.search.attribute,net.sf.ehcache.bootstrap,net.sf.ehcache.store.compound,net.sf.ehcache.writer,net.sf.ehcache.transaction.xa.processor,net.sf.ehcache.management.provider,net.sf.ehcache.config.generator,net.sf.ehcache.distribution,net.sf.ehcache.writer.writebehind,net.sf.ehcache.search.expression,net.sf.ehcache.search.aggregator'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.exceptionhandler'/>
      <p n='uses' v='net.sf.ehcache,org.slf4j'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.util.counter'/>
      <p n='uses' v='net.sf.ehcache.util,net.sf.ehcache.util.counter.sampled'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.ccs'/>
      <p n='uses' v='net.sf.ehcache.hibernate,org.hibernate.cache,org.slf4j,org.hibernate.cache.access'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.nonstop.util'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.writer.writebehind.operations'/>
      <p n='uses' v='net.sf.ehcache.writer,net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.management.api'/>
      <p n='uses' v='javax.management,javax.management.openmbean'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.management.sampled'/>
      <p n='uses' v='net.sf.ehcache.util,net.sf.ehcache.store,net.sf.ehcache.hibernate.management.impl,javax.management,net.sf.ehcache.config,org.slf4j,net.sf.ehcache.writer.writebehind,net.sf.ehcache,net.sf.ehcache.statistics,net.sf.ehcache.statistics.sampled,net.sf.ehcache.writer,net.sf.ehcache.event,net.sf.ehcache.management.provider,net.sf.ehcache.terracotta,net.sf.ehcache.store.chm'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.management.impl'/>
      <p n='uses' v='javax.management,javax.management.openmbean,org.hibernate.stat,org.hibernate,net.sf.ehcache.hibernate.management.api,net.sf.ehcache,net.sf.ehcache.event,org.slf4j,net.sf.ehcache.management.sampled,net.sf.ehcache.statistics,net.sf.ehcache.statistics.sampled,net.sf.ehcache.config,org.hibernate.impl,org.hibernate.cache,net.sf.ehcache.util'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction.xa'/>
      <p n='uses' v='javax.transaction.xa,javax.transaction,net.sf.ehcache.transaction,net.sf.ehcache.transaction.xa.processor,net.sf.ehcache.store,net.sf.ehcache.config,org.slf4j,net.sf.ehcache.transaction.xa.commands,net.sf.ehcache.store.chm,net.sf.ehcache.transaction.manager,net.sf.ehcache,net.sf.ehcache.statistics,net.sf.ehcache.util,net.sf.ehcache.search.attribute,net.sf.ehcache.store.compound,net.sf.ehcache.writer'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.management'/>
      <p n='uses' v='net.sf.ehcache.util,net.sf.ehcache.hibernate.management.impl,javax.management,net.sf.ehcache,net.sf.ehcache.config,net.sf.ehcache.store,net.sf.ehcache.distribution,net.sf.ehcache.event,org.slf4j'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.blocking'/>
      <p n='uses' v='net.sf.ehcache.loader,net.sf.ehcache.concurrent,net.sf.ehcache,net.sf.ehcache.config,net.sf.ehcache.constructs,org.slf4j'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.config'/>
      <p n='uses' v='org.slf4j,org.xml.sax.helpers,org.xml.sax,net.sf.ehcache.event,net.sf.ehcache.util,net.sf.ehcache.store,net.sf.ehcache.store.compound,net.sf.ehcache,net.sf.ehcache.writer.writethrough,net.sf.ehcache.writer,net.sf.ehcache.writer.writebehind,net.sf.ehcache.config.generator,net.sf.ehcache.transaction.manager,javax.xml.parsers,net.sf.ehcache.exceptionhandler,net.sf.ehcache.distribution,net.sf.ehcache.bootstrap,net.sf.ehcache.constructs,net.sf.ehcache.search.attribute,net.sf.ehcache.config.generator.model,net.sf.ehcache.search,net.sf.ehcache.constructs.nonstop.store,net.sf.ehcache.constructs.nonstop'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.management.provider'/>
      <p n='uses' v='net.sf.ehcache.terracotta,net.sf.ehcache,net.sf.ehcache.config,net.sf.ehcache.management.sampled'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.distribution'/>
      <p n='uses' v='net.sf.ehcache.event,net.sf.ehcache,org.slf4j,net.sf.ehcache.util,net.sf.ehcache.bootstrap,net.sf.ehcache.config'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.store.compound.impl'/>
      <p n='uses' v='net.sf.ehcache.store,net.sf.ehcache.store.compound.factories,net.sf.ehcache,net.sf.ehcache.store.compound,net.sf.ehcache.config,net.sf.ehcache.search.expression,net.sf.ehcache.search.aggregator,net.sf.ehcache.transaction,net.sf.ehcache.event,net.sf.ehcache.search,net.sf.ehcache.search.impl,net.sf.ehcache.search.attribute'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.search.impl'/>
      <p n='uses' v='net.sf.ehcache.store,net.sf.ehcache.search'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.search.attribute'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.search,net.sf.ehcache.config'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.web'/>
      <p n='uses' v='javax.servlet,net.sf.ehcache,org.slf4j'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.bootstrap'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.store.compound'/>
      <p n='uses' v='net.sf.ehcache.concurrent,net.sf.ehcache,net.sf.ehcache.store,net.sf.ehcache.writer,net.sf.ehcache.util'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.writer'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.loader'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction.local'/>
      <p n='uses' v='javax.transaction,net.sf.ehcache,net.sf.ehcache.writer,net.sf.ehcache.transaction,org.slf4j,javax.transaction.xa,net.sf.ehcache.transaction.xa,net.sf.ehcache.store,net.sf.ehcache.transaction.manager,net.sf.ehcache.store.compound,net.sf.ehcache.util,net.sf.ehcache.config,net.sf.ehcache.search.attribute'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.terracotta'/>
      <p n='uses' v='net.sf.ehcache.transaction,net.sf.ehcache.writer.writebehind,net.sf.ehcache.store,net.sf.ehcache.event,net.sf.ehcache.cluster,net.sf.ehcache,org.slf4j,net.sf.ehcache.config,net.sf.ehcache.util'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction'/>
      <p n='uses' v='net.sf.ehcache.search,net.sf.ehcache,net.sf.ehcache.terracotta,net.sf.ehcache.search.attribute,net.sf.ehcache.store,net.sf.ehcache.store.compound,net.sf.ehcache.config,net.sf.ehcache.transaction.local,net.sf.ehcache.store.chm,javax.transaction.xa,net.sf.ehcache.transaction.xa'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.util'/>
      <p n='uses' v='net.sf.ehcache.config,net.sf.ehcache.transaction.local,javax.transaction,net.sf.ehcache.transaction.manager,net.sf.ehcache,org.slf4j,net.sf.ehcache.util.lang'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate'/>
      <p n='uses' v='net.sf.ehcache.util,org.hibernate.cache,net.sf.ehcache,org.slf4j,org.hibernate.cache.access,org.hibernate.cfg,net.sf.ehcache.hibernate.management.impl,net.sf.ehcache.hibernate.strategy,net.sf.ehcache.hibernate.nonstop,net.sf.ehcache.hibernate.regions,net.sf.ehcache.concurrent,net.sf.ehcache.config,org.hibernate,javax.transaction,org.hibernate.transaction,net.sf.ehcache.transaction.manager'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.search'/>
      <p n='uses' v='net.sf.ehcache.search.expression,net.sf.ehcache.search.aggregator,net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.cluster'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.event'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.distribution'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.exceptionhandler,net.sf.ehcache.loader,net.sf.ehcache.terracotta,net.sf.ehcache.extension,net.sf.ehcache.event,net.sf.ehcache.search,net.sf.ehcache.config,net.sf.ehcache.transaction.manager,net.sf.ehcache.bootstrap,net.sf.ehcache.statistics,net.sf.ehcache.statistics.sampled,net.sf.ehcache.writer'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.writer.writethrough'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.writer'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.nonstop.concurrency'/>
      <p n='uses' v='net.sf.ehcache.config,net.sf.ehcache.constructs.nonstop,net.sf.ehcache.constructs.nonstop.store,net.sf.ehcache.concurrent'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction.manager'/>
      <p n='uses' v='javax.naming,javax.transaction,org.slf4j,javax.transaction.xa,net.sf.ehcache.transaction.xa'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.config.generator.model.elements'/>
      <p n='uses' v='net.sf.ehcache.store,net.sf.ehcache.config.generator.model,net.sf.ehcache.event,net.sf.ehcache.config'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.config.generator.model'/>
      <p n='uses' v='net.sf.ehcache.config.generator.model.elements,net.sf.ehcache.config'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.statistics.sampled'/>
      <p n='uses' v='net.sf.ehcache.statistics,net.sf.ehcache.util.counter,net.sf.ehcache.util,net.sf.ehcache.util.counter.sampled,net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.search.expression'/>
      <p n='uses' v='net.sf.ehcache.search.attribute,net.sf.ehcache,net.sf.ehcache.search'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.extension'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.constructs.nonstop'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.config,net.sf.ehcache.concurrent,net.sf.ehcache.store,net.sf.ehcache.constructs.nonstop.concurrency,org.slf4j,net.sf.ehcache.constructs.nonstop.store'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.store'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.terracotta,net.sf.ehcache.search.attribute,net.sf.ehcache.search,net.sf.ehcache.config,net.sf.ehcache.util,net.sf.ehcache.event,org.slf4j,net.sf.ehcache.concurrent,net.sf.ehcache.writer,net.sf.ehcache.store.chm,net.sf.ehcache.search.expression,net.sf.ehcache.search.aggregator'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.store.compound.factories'/>
      <p n='uses' v='net.sf.ehcache.store.compound,net.sf.ehcache.store,net.sf.ehcache.event,net.sf.ehcache,net.sf.ehcache.config,org.slf4j,net.sf.ehcache.util,net.sf.ehcache.concurrent'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.hibernate.nonstop'/>
      <p n='uses' v='net.sf.ehcache.constructs.nonstop,org.slf4j,org.hibernate.cache.access,net.sf.ehcache.hibernate.strategy,net.sf.ehcache.hibernate.regions,org.hibernate.cache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.transaction.xa.commands'/>
      <p n='uses' v='net.sf.ehcache.transaction,net.sf.ehcache.store,net.sf.ehcache,net.sf.ehcache.transaction.xa'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.util.counter.sampled'/>
      <p n='uses' v='net.sf.ehcache.util.counter,net.sf.ehcache.util'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.store.chm'/>
      <p n='uses' v='net.sf.ehcache'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.ehcache.util.lang'/>
      <p n='version' t='version' v='2.4.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.openmbean
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.cache ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache.access)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.cache.access
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.cfg ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.stat)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.stat ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.transaction)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.transaction ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='guava/5.0.0' presentationname='guava' symbolicname='guava' uri='guava-5.0.0.jar' version='5.0.0'>
    <size>
      947055
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='guava'/>
      <p n='symbolicname' v='guava'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.net'/>
      <p n='uses' v='javax.annotation,com.google.common.base,com.google.common.io,com.google.common.primitives,com.google.common.collect'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.collect'/>
      <p n='uses' v='com.google.common.base,javax.annotation,com.google.common.primitives'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.util.concurrent'/>
      <p n='uses' v='com.google.common.base,javax.annotation,com.google.common.collect'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.io'/>
      <p n='uses' v='com.google.common.base,javax.annotation'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.primitives'/>
      <p n='uses' v='com.google.common.base,javax.annotation'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.base'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.base.internal'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.common.annotations'/>
      <p n='version' t='version' v='5.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation
    </require>
  </resource>
  <resource id='hibernate-commons-annotations/4.0.1' presentationname='hibernate-commons-annotations' symbolicname='hibernate-commons-annotations' uri='hibernate-commons-annotations-4.0.1.Final.jar' version='4.0.1'>
    <size>
      82902
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-commons-annotations'/>
      <p n='symbolicname' v='hibernate-commons-annotations'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.annotationfactory'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common'/>
      <p n='uses' v='org.hibernate.annotations.common.util.impl'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.reflection'/>
      <p n='uses' v='org.hibernate.annotations.common.reflection.java.generics'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.reflection.java'/>
      <p n='uses' v='org.hibernate.annotations.common.reflection,org.hibernate.annotations.common.reflection.java.generics,org.hibernate.annotations.common,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.util'/>
      <p n='uses' v='org.hibernate.annotations.common'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.util.impl'/>
      <p n='uses' v='org.jboss.logging'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations.common.reflection.java.generics'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jboss.logging ;version=[3.1.0,4.0.0)
    </require>
  </resource>
  <resource id='hibernate-core/4.1.2' presentationname='hibernate-core' symbolicname='hibernate-core' uri='hibernate-core-4.1.2.jar' version='4.1.2'>
    <size>
      4457655
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-core'/>
      <p n='symbolicname' v='hibernate-core'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.collection'/>
      <p n='uses' v='org.hibernate.loader,org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.sql,org.hibernate.type,org.hibernate.dialect,org.hibernate,org.hibernate.persister.collection,org.hibernate.internal,org.jboss.logging,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.domain'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.service.classloading.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.cfg,org.jboss.logging,org.hibernate.bytecode.instrumentation.spi,org.hibernate.persister.entity,org.hibernate.type,org.hibernate.property,org.hibernate.dialect,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.exception.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.exception,org.hibernate.dialect,org.hibernate.internal.util,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.dialect.function'/>
      <p n='uses' v='org.hibernate,org.hibernate.type,org.hibernate.dialect,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tool.instrument'/>
      <p n='uses' v='org.hibernate.bytecode.buildtime.spi,org.apache.tools.ant.types,org.apache.tools.ant'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.criteria'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate.persister.collection,org.hibernate.type,org.hibernate.loader,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.internal,org.hibernate.sql,org.hibernate.transform,org.hibernate.dialect,org.hibernate.hql.internal,org.hibernate.internal.util,org.hibernate.hql.internal.ast.util,org.hibernate.criterion'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.uuid'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.id'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.collection.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.pretty,org.hibernate.persister.entity,org.hibernate.type,org.hibernate.collection.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.persister.collection,org.hibernate.engine.internal,org.hibernate.loader,org.hibernate.internal,org.jboss.logging,org.dom4j,org.hibernate.id'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.hbm'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate,org.hibernate.metamodel.source,org.hibernate.internal.jaxb.mapping.hbm,org.hibernate.metamodel.source.binder,org.hibernate.internal.jaxb,org.hibernate.metamodel.binding,org.hibernate.engine,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.metamodel.relational,org.hibernate.mapping,org.hibernate.metamodel,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate.type,org.hibernate.metamodel.domain,org.hibernate.metamodel.source.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jdbc.dialect.spi'/>
      <p n='uses' v='org.hibernate.dialect,org.hibernate,org.hibernate.service,org.hibernate.exception'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.type.descriptor.sql'/>
      <p n='uses' v='org.hibernate.type.descriptor.java,org.hibernate.internal,org.hibernate.type.descriptor,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate.transform,org.hibernate.type,org.hibernate.proxy,org.hibernate.engine.query.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.property,org.hibernate.loader,org.hibernate.engine.jdbc.spi,org.hibernate.hql.internal,org.hibernate.engine.loading.internal,org.jboss.logging,org.hibernate.jdbc,org.hibernate.engine.jdbc,org.hibernate.service.jdbc.connections.spi,org.hibernate.loader.custom.sql,org.hibernate.engine.query.spi.sql,org.hibernate.cfg,org.hibernate.service,org.hibernate.loader.custom,org.hibernate.engine.transaction.spi,org.hibernate.service.spi,org.hibernate.cache.spi,org.hibernate.stat.spi,org.hibernate.stat,javax.naming,org.hibernate.id,org.hibernate.service.jdbc.dialect.internal,org.hibernate.service.jndi,org.hibernate.dialect,javax.transaction,org.hibernate.cache,org.hibernate.criterion,org.hibernate.sql,org.hibernate.dialect.function,org.hibernate.engine,org.hibernate.event.spi,org.hibernate.engine.internal,org.hibernate.integrator.spi,org.hibernate.metamodel.source,org.hibernate.pretty,org.hibernate.cache.spi.access,org.hibernate.persister.collection,org.hibernate.engine.transaction.internal,org.hibernate.metamodel.domain,org.hibernate.exception.spi,org.hibernate.persister.spi,org.hibernate.metamodel.binding,org.hibernate.id.factory.spi,org.hibernate.metadata,org.hibernate.context.spi,org.hibernate.service.config.spi,org.hibernate.cache.internal,org.hibernate.service.jta.platform.spi,org.hibernate.tuple.entity,org.hibernate.engine.profile,org.hibernate.service.classloading.spi,org.hibernate.service.jndi.spi,org.hibernate.context.internal,org.hibernate.mapping,org.hibernate.service.internal,org.hibernate.id.factory,org.hibernate.tool.hbm2ddl,javax.naming.event,javax.naming.spi,org.hibernate.loader.criteria,org.hibernate.collection.spi,org.hibernate.event.service.spi,org.hibernate.stat.internal,org.hibernate.usertype'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.config'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal.util,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.buildtime.internal'/>
      <p n='uses' v='org.hibernate.bytecode.internal.javassist,javassist.bytecode,org.hibernate.bytecode.buildtime.spi,org.hibernate.bytecode.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.transaction'/>
      <p n='uses' v='org.hibernate,javax.transaction'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.compare'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.instrumentation.internal.javassist'/>
      <p n='uses' v='org.hibernate.proxy,org.hibernate.bytecode.instrumentation.spi,org.hibernate.bytecode.internal.javassist'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.jaxb'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.binding'/>
      <p n='uses' v='org.hibernate.metamodel.domain,org.hibernate.metamodel.source,org.hibernate.metamodel.relational,org.hibernate.engine,org.hibernate,org.hibernate.persister.collection,org.hibernate.mapping,org.hibernate.dialect,org.hibernate.id,org.hibernate.id.factory,org.hibernate.type,org.hibernate.cache.spi.access,javax.persistence,org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate.tuple.entity,org.hibernate.internal.util.collections,org.hibernate.metamodel.source.binder,org.dom4j'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.jndi'/>
      <p n='uses' v='javax.naming'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.factory.spi'/>
      <p n='uses' v='org.hibernate.id.factory,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.internal.jta'/>
      <p n='uses' v='org.hibernate,org.hibernate.service.jta.platform.spi,javax.transaction,org.hibernate.engine.transaction.spi,org.hibernate.internal,org.hibernate.jdbc,org.hibernate.service.jdbc.connections.spi,org.jboss.logging,org.hibernate.engine.jdbc.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.antlr'/>
      <p n='uses' v='antlr.collections.impl,antlr,org.hibernate.hql.internal.ast.util,antlr.collections,org.hibernate.internal,org.jboss.logging,org.hibernate.hql.internal.ast'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.spi.access'/>
      <p n='uses' v='org.hibernate.cache.spi,org.hibernate.cache,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.classloading.internal'/>
      <p n='uses' v='org.hibernate.service.classloading.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jndi'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.internal.jdbc'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.jdbc,org.hibernate.service.jdbc.connections.spi,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.transform'/>
      <p n='uses' v='org.hibernate,org.hibernate.property,org.hibernate.internal.util.collections,org.hibernate.type,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tuple.component'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.tuple,org.hibernate,org.hibernate.property,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.bytecode.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc.spi'/>
      <p n='uses' v='org.hibernate.engine.jdbc.internal,org.hibernate.engine.jdbc.batch.spi,org.hibernate.jdbc,org.hibernate.engine.transaction.spi,org.hibernate.dialect,org.hibernate.service.jdbc.connections.spi,org.hibernate.service,org.hibernate.engine.jdbc,org.hibernate,org.hibernate.exception.spi,org.hibernate.internal,org.jboss.logging,org.hibernate.internal.util,org.hibernate.exception.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.ast.exec'/>
      <p n='uses' v='org.hibernate.internal,org.hibernate.engine.jdbc.spi,org.hibernate.persister.entity,org.hibernate.service.spi,org.hibernate.jdbc,org.hibernate.service,org.hibernate.dialect,org.hibernate.internal.util,org.hibernate.hql.internal.ast.util,org.hibernate.cfg,antlr.collections,antlr,org.hibernate.event.spi,org.hibernate.sql,org.hibernate.engine.transaction.spi,org.hibernate.action.internal,org.hibernate,org.jboss.logging,org.hibernate.action.spi,org.hibernate.hql.internal.ast,org.hibernate.param,org.hibernate.hql.internal.ast.tree'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.hql'/>
      <p n='uses' v='org.hibernate.loader,org.hibernate.persister.entity,org.hibernate.stat.spi,org.hibernate.event.spi,org.hibernate.transform,org.hibernate.engine.jdbc.spi,org.hibernate.type,org.hibernate.dialect,org.hibernate.hql.spi,org.hibernate.internal.util.collections,org.hibernate.hql.internal,org.hibernate.param,org.hibernate,org.hibernate.internal,org.hibernate.persister.collection,org.hibernate.stat,org.hibernate.hql.internal.ast.tree,org.hibernate.hql.internal.ast'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.collection.spi'/>
      <p n='uses' v='org.hibernate.loader,org.hibernate,org.hibernate.persister.collection,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.internal'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,javax.transaction,org.jboss.logging,org.hibernate.engine.transaction.spi,org.hibernate.engine.transaction.synchronization.internal,org.hibernate.engine.transaction.internal.jta,org.hibernate.service.jta.platform.spi,org.hibernate.stat.spi,org.hibernate.engine.jdbc.spi,org.hibernate.internal.util.collections,org.hibernate.stat,org.hibernate.engine.transaction.synchronization.spi,org.hibernate.engine.jdbc.internal,org.hibernate.service.spi,org.hibernate.service.classloading.spi,org.hibernate.engine.transaction.internal.jdbc,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.entity'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.internal.util,org.hibernate.metamodel.source.annotations.attribute,org.hibernate.metamodel.source,org.hibernate.metamodel.source.binder,javax.persistence,org.hibernate.cfg,org.hibernate,com.fasterxml.classmate.members,org.hibernate.metamodel.source.annotations,org.jboss.logging,org.jboss.jandex,org.hibernate.internal.jaxb,com.fasterxml.classmate,org.hibernate.metamodel.domain,org.hibernate.service,org.hibernate.engine,org.hibernate.cache.spi.access,org.hibernate.metamodel,org.hibernate.annotations,org.hibernate.metamodel.source.annotations.xml,org.hibernate.metamodel.binding'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metadata'/>
      <p n='uses' v='org.hibernate,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.spi'/>
      <p n='uses' v='org.hibernate.service,org.jboss.logging,org.hibernate,org.hibernate.metamodel.source,org.hibernate.cfg,org.hibernate.service.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.spi'/>
      <p n='uses' v='org.hibernate.internal.util.compare,org.hibernate.type,org.hibernate.cache.spi.access,org.hibernate.cache,org.hibernate,org.hibernate.internal,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.internal.util.collections,org.hibernate.transform,org.hibernate.service,org.hibernate.stat.spi,org.jboss.logging,org.hibernate.stat'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.context.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal.util.compare,org.hibernate.context'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.property'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.internal.util,org.jboss.logging,org.hibernate.mapping,org.hibernate.metamodel.binding'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.config.spi'/>
      <p n='uses' v='org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.action.spi'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.instrumentation.internal'/>
      <p n='uses' v='org.hibernate.bytecode.instrumentation.spi,org.hibernate.bytecode.instrumentation.internal.javassist'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.dialect.lock'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate,org.hibernate.action.internal,org.hibernate.event.spi,org.hibernate.action.spi,org.hibernate.pretty,org.hibernate.cfg,org.hibernate.stat.spi,org.hibernate.sql,org.hibernate.engine.jdbc.spi,org.hibernate.type,org.hibernate.engine.transaction.spi,org.hibernate.dialect,org.hibernate.stat,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.proxy.dom4j'/>
      <p n='uses' v='org.hibernate.proxy,org.dom4j,org.hibernate,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.pretty'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate.persister.collection,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.jdbc'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.engine.jdbc.spi,org.hibernate.exception,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel'/>
      <p n='uses' v='org.hibernate.cfg,org.hibernate.cache.spi.access,javax.persistence,org.hibernate.engine,org.hibernate,org.hibernate.metamodel.binding,org.hibernate.metamodel.source,org.hibernate.service.classloading.spi,org.hibernate.service,org.w3c.dom,org.xml.sax,org.hibernate.metamodel.source.internal,org.jboss.logging,org.hibernate.internal.jaxb,org.hibernate.proxy'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service'/>
      <p n='uses' v='org.hibernate.service.internal,org.hibernate.integrator.internal,org.hibernate.service.classloading.internal,org.hibernate.service.classloading.spi,org.hibernate.integrator.spi,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.service.spi,org.hibernate.internal.jaxb.cfg,org.hibernate.internal.util.config,org.jboss.logging,org.hibernate.internal.jaxb,org.hibernate.engine.jdbc.batch.internal,org.hibernate.cache.internal,org.hibernate.service.jdbc.dialect.internal,org.hibernate.service.config.internal,org.hibernate.service.jta.platform.internal,org.hibernate.persister.internal,org.hibernate.service.jdbc.connections.internal,org.hibernate.engine.transaction.internal,org.hibernate.service.jndi.internal,org.hibernate.tool.hbm2ddl,org.hibernate.id.factory.internal,org.hibernate.service.jmx.internal,org.hibernate.engine.jdbc.internal,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.sql'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal.util,org.hibernate.internal.util.collections,org.hibernate.dialect,org.hibernate.type,org.hibernate.sql.ordering.antlr,org.hibernate.dialect.function'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.exception'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.type'/>
      <p n='uses' v='org.hibernate,org.hibernate.cfg,org.hibernate.dialect,org.hibernate.metamodel.relational,org.hibernate.type.descriptor.java,org.hibernate.type.descriptor.sql,org.hibernate.type.descriptor,org.hibernate.engine.jdbc,org.hibernate.internal.util,org.dom4j,org.hibernate.internal.util.collections,org.hibernate.internal.util.compare,org.hibernate.persister.entity,org.hibernate.proxy,org.hibernate.engine.internal,org.hibernate.collection.spi,org.hibernate.persister.collection,org.hibernate.collection.internal,org.hibernate.internal,org.jboss.logging,org.hibernate.usertype,org.hibernate.engine.loading.internal,org.hibernate.tuple.component,org.hibernate.tuple,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.classic,org.hibernate.bytecode.instrumentation.spi,org.hibernate.property'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.secure.internal'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,javax.security.jacc,org.jboss.logging,javax.security.auth,org.hibernate.persister.entity,org.hibernate.event.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.custom'/>
      <p n='uses' v='org.hibernate.loader,org.hibernate,org.hibernate.internal.util,org.hibernate.persister.collection,org.hibernate.dialect,org.hibernate.type,org.hibernate.persister.entity,org.hibernate.transform,org.hibernate.internal.util.collections,org.hibernate.hql.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.service.jta.platform.spi,org.hibernate.internal,javax.transaction,org.jboss.logging,org.hibernate.jdbc,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.synchronization.spi,org.hibernate.stat.spi,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jndi.internal'/>
      <p n='uses' v='javax.naming.event,javax.naming,org.hibernate.internal,org.hibernate.service.jndi,org.jboss.logging,org.hibernate.service.jndi.spi,org.hibernate.internal.util.jndi,org.hibernate.service.spi,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.attribute'/>
      <p n='uses' v='org.hibernate.metamodel.source,org.hibernate.metamodel.source.annotations.attribute.type,org.hibernate.metamodel.source.annotations.entity,org.hibernate.mapping,org.hibernate.annotations,org.hibernate,org.hibernate.metamodel.source.annotations,org.jboss.jandex,javax.persistence,org.hibernate.internal.jaxb,org.hibernate.internal.util,org.hibernate.metamodel,org.hibernate.metamodel.binding,org.hibernate.cfg,org.hibernate.metamodel.relational,org.hibernate.metamodel.source.binder,org.hibernate.engine'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.param'/>
      <p n='uses' v='org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.persister.collection'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.sql.ordering.antlr,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.loader.collection,org.hibernate.exception.spi,org.hibernate.dialect.function,org.hibernate.pretty,org.hibernate.internal.util,org.hibernate.jdbc,org.hibernate.engine.jdbc.batch.spi,org.hibernate.sql,org.hibernate.type,org.hibernate.cache.spi.entry,org.hibernate.engine.transaction.spi,org.hibernate.internal.util.collections,org.hibernate.internal,org.hibernate.engine.jdbc.batch.internal,org.hibernate.id.factory.spi,org.hibernate.id,org.hibernate.engine.jdbc.spi,org.hibernate.collection.spi,org.hibernate.dialect,org.hibernate.id.factory,org.hibernate.metadata,org.hibernate,org.hibernate.cache,org.jboss.logging,org.hibernate.loader.entity'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.lob'/>
      <p n='uses' v='org.hibernate.engine.jdbc'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jmx.internal'/>
      <p n='uses' v='org.hibernate.service.spi,javax.management,org.hibernate.service.jmx.spi,org.hibernate,org.hibernate.internal,org.hibernate.internal.util.config,org.jboss.logging,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.synchronization.spi'/>
      <p n='uses' v='org.hibernate.engine.transaction.spi,javax.transaction'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.type.descriptor.java'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal.util.compare,org.hibernate.type.descriptor,org.hibernate.engine.jdbc,org.hibernate.cfg,org.hibernate.internal.util,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader'/>
      <p n='uses' v='org.hibernate.engine.profile,org.hibernate.dialect,org.hibernate.persister.entity,org.hibernate,org.hibernate.cfg,org.hibernate.sql,org.hibernate.type,org.hibernate.persister.collection,org.hibernate.internal.util,org.hibernate.internal.util.collections,org.hibernate.engine.internal,org.hibernate.pretty,org.hibernate.stat.spi,org.hibernate.tuple.entity,org.hibernate.engine.transaction.spi,org.hibernate.hql.internal,org.hibernate.internal,org.hibernate.engine.loading.internal,org.hibernate.engine.jdbc,org.hibernate.event.spi,org.hibernate.transform,org.hibernate.engine.jdbc.spi,org.hibernate.proxy,org.hibernate.collection.spi,org.hibernate.cache.spi,org.jboss.logging,org.hibernate.stat'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine'/>
      <p n='uses' v='org.hibernate,org.hibernate.engine.query.spi.sql'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.ast.util'/>
      <p n='uses' v='antlr.collections,antlr,org.hibernate.internal.util,org.hibernate.hql.internal.ast.tree,antlr.collections.impl,org.hibernate.hql.internal,org.hibernate.internal,org.hibernate.engine.internal,org.hibernate.hql.internal.ast,org.hibernate.hql.internal.antlr,org.hibernate.sql,org.hibernate.type,org.hibernate.dialect,org.hibernate.internal.util.collections,org.hibernate.param,org.hibernate,org.jboss.logging,org.hibernate.persister.entity,org.hibernate.dialect.function,org.hibernate.cfg,org.hibernate.persister.collection'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.persister.entity'/>
      <p n='uses' v='org.hibernate.type,org.hibernate.id.insert,org.hibernate.metamodel.domain,org.hibernate.dialect.function,org.hibernate.internal.util,org.hibernate.pretty,org.hibernate.engine.jdbc.batch.spi,org.hibernate.jdbc,org.hibernate.stat.spi,org.hibernate.tuple.entity,org.hibernate.sql,org.hibernate.cache.spi.entry,org.hibernate.engine.transaction.spi,org.hibernate.bytecode.instrumentation.spi,org.hibernate.tuple,org.hibernate.internal.util.collections,org.hibernate.internal,org.hibernate.metamodel.binding,org.hibernate.engine,org.hibernate.engine.jdbc.batch.internal,org.hibernate.id,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.engine.jdbc.spi,org.hibernate.loader.entity,org.hibernate.mapping,org.hibernate.dialect,org.hibernate.metamodel.relational,org.hibernate.metadata,org.hibernate,org.hibernate.cache.spi,org.hibernate.bytecode.spi,org.jboss.logging,org.hibernate.engine.internal,org.hibernate.property,org.hibernate.stat,org.hibernate.dialect.lock,org.dom4j,org.hibernate.internal.util.compare'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.query.spi.sql'/>
      <p n='uses' v='org.hibernate,org.hibernate.type,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.integrator.internal'/>
      <p n='uses' v='org.hibernate.service.classloading.spi,org.jboss.logging,org.hibernate.integrator.spi,org.hibernate.cfg.beanvalidation'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cfg'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.annotations.common.reflection,org.hibernate,javax.persistence,org.hibernate.annotations,org.hibernate.id,org.hibernate.cache.spi.access,org.hibernate.type,org.hibernate.id.enhanced,org.hibernate.mapping,org.hibernate.cfg.annotations,org.hibernate.internal,org.hibernate.cache.spi,org.jboss.logging,org.dom4j,org.w3c.dom,org.hibernate.annotations.common,org.hibernate.service.internal,org.hibernate.service,org.hibernate.id.factory.spi,org.hibernate.id.factory,org.hibernate.engine,org.hibernate.internal.util.collections,org.hibernate.internal.util.xml,org.hibernate.dialect.function,org.hibernate.tuple.entity,org.hibernate.secure.internal,org.xml.sax,org.hibernate.internal.util.config,org.hibernate.id.factory.internal,org.hibernate.cfg.annotations.reflection,org.hibernate.proxy,org.hibernate.dialect,org.dom4j.io,org.hibernate.tool.hbm2ddl,org.hibernate.context.spi,org.hibernate.annotations.common.reflection.java,org.hibernate.usertype,org.hibernate.bytecode.internal.javassist,org.hibernate.bytecode.spi,org.hibernate.engine.query.spi.sql,org.hibernate.hql.spi,org.hibernate.service.jta.platform.spi,org.hibernate.cache.internal,org.hibernate.service.classloading.spi,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.service.jdbc.connections.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.relational.state'/>
      <p n='uses' v='org.hibernate.metamodel.relational,org.hibernate.cfg'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.type.descriptor'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.jboss.logging,org.hibernate.type.descriptor.sql,org.hibernate.engine.jdbc'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jndi.spi'/>
      <p n='uses' v='javax.naming.event,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.io'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.context.internal'/>
      <p n='uses' v='javax.transaction,org.hibernate.engine.transaction.internal.jta,org.hibernate.service.jta.platform.spi,org.hibernate.service,org.hibernate,org.hibernate.service.spi,org.hibernate.internal,org.hibernate.context.spi,org.jboss.logging,org.hibernate.cfg,org.hibernate.event.spi,org.hibernate.engine.transaction.spi,org.hibernate.engine.jdbc'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.attribute.type'/>
      <p n='uses' v='org.hibernate.internal.util,org.jboss.jandex,org.hibernate.metamodel.source.annotations.attribute,org.hibernate.metamodel.source.annotations,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.type,javax.persistence,org.hibernate.cfg'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.proxy'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.query.spi'/>
      <p n='uses' v='org.hibernate.cfg,org.hibernate.event.spi,org.hibernate.type,org.hibernate.hql.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.hql.internal,org.hibernate.internal,org.jboss.logging,org.hibernate.loader.custom.sql,org.hibernate.engine.query.spi.sql,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.action.internal,org.hibernate.action.spi,org.hibernate.internal.util,org.hibernate.internal.util.config'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.mapping'/>
      <p n='uses' v='org.hibernate.dialect,org.hibernate,org.hibernate.cfg,org.hibernate.type,org.hibernate.internal.util,org.hibernate.property,org.hibernate.internal.util.collections,org.hibernate.dialect.function,org.hibernate.sql,org.hibernate.id,org.hibernate.persister.entity,org.hibernate.tuple.component,org.hibernate.id.factory,org.hibernate.internal,org.jboss.logging,org.hibernate.tool.hbm2ddl'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.relational'/>
      <p n='uses' v='org.hibernate.dialect,org.hibernate,org.hibernate.internal,org.hibernate.metamodel,org.jboss.logging,org.hibernate.internal.util,org.hibernate.metamodel.relational.state,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tool.instrument.javassist'/>
      <p n='uses' v='org.hibernate.tool.instrument,org.hibernate.bytecode.buildtime.spi,org.hibernate.bytecode.buildtime.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.internal'/>
      <p n='uses' v='org.hibernate.internal.util.collections,org.hibernate.service.spi,org.hibernate.internal,org.jboss.logging,org.hibernate.service,org.hibernate.service.jmx.spi,org.hibernate.integrator.internal,org.hibernate.service.classloading.internal,org.hibernate.service.classloading.spi,org.hibernate.integrator.spi,javax.xml.bind,org.hibernate.metamodel.source,org.xml.sax,javax.xml.stream,org.hibernate.internal.jaxb.cfg,javax.xml.transform,org.hibernate.internal.util.config,javax.xml.transform.stream,javax.xml.validation,org.hibernate.internal.jaxb,org.hibernate,org.hibernate.cfg,org.hibernate.event.service.internal,org.hibernate.stat.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.event.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate.event.spi,org.hibernate.service,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.action.internal,org.hibernate.collection.spi,org.hibernate.event.service.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.service.spi,org.hibernate.persister.collection,org.hibernate.internal,org.jboss.logging,org.hibernate.engine.internal,org.hibernate.pretty,org.hibernate.cache.spi.access,org.hibernate.type,org.hibernate.cache.spi,org.hibernate.id,org.hibernate.bytecode.instrumentation.spi,org.hibernate.classic,org.hibernate.bytecode.spi,org.hibernate.stat.spi,org.hibernate.stat,org.hibernate.cfg,org.hibernate.proxy,org.hibernate.tuple.entity,org.hibernate.cache.spi.entry,org.hibernate.tuple,org.hibernate.action.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.jaxb.cfg'/>
      <p n='uses' v='javax.xml.bind.annotation,javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.xml'/>
      <p n='uses' v='org.jboss.jandex'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tool.hbm2ddl'/>
      <p n='uses' v='org.hibernate.internal,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.mapping,org.hibernate.exception.spi,org.hibernate.dialect,org.hibernate.internal.util,org.hibernate,org.hibernate.service,org.hibernate.service.spi,org.hibernate.service.classloading.spi,org.hibernate.service.internal,org.hibernate.cfg,org.hibernate.internal.util.config,org.hibernate.service.jdbc.connections.spi,org.hibernate.hql.internal.antlr,antlr,org.hibernate.metamodel.source,org.hibernate.metamodel.relational,org.hibernate.service.config.spi,org.hibernate.engine.jdbc.internal,org.hibernate.internal.util.collections,org.apache.tools.ant.types,org.apache.tools.ant.taskdefs,org.apache.tools.ant'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.beans'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache'/>
      <p n='uses' v='org.hibernate,org.hibernate.cache.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.proxy.pojo.javassist'/>
      <p n='uses' v='javassist.util.proxy,org.hibernate.internal.util,org.hibernate.type,org.hibernate.proxy,org.hibernate,org.hibernate.internal,org.hibernate.proxy.pojo,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.usertype'/>
      <p n='uses' v='org.hibernate,org.hibernate.type,org.hibernate.metamodel.relational,org.hibernate.collection.spi,org.hibernate.persister.collection'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.binder'/>
      <p n='uses' v='org.hibernate.engine,org.hibernate,org.hibernate.metamodel.source,org.hibernate.metamodel.binding,org.hibernate.internal.util.beans,org.hibernate.metamodel.domain,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.metamodel,org.hibernate.mapping,org.hibernate.metamodel.source.hbm,org.hibernate.metamodel.relational,org.hibernate.internal.jaxb'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.custom.sql'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate.persister.collection,org.hibernate,org.hibernate.engine.query.spi.sql,org.hibernate.internal,org.jboss.logging,org.hibernate.loader.custom,org.hibernate.engine.query.spi,org.hibernate.cfg,org.hibernate.loader,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.internal.javassist'/>
      <p n='uses' v='org.hibernate,org.hibernate.bytecode.spi,javassist.bytecode,javassist,javassist.util.proxy,org.hibernate.bytecode.instrumentation.spi,org.hibernate.bytecode.instrumentation.internal.javassist,org.hibernate.internal.util,org.hibernate.bytecode.buildtime.spi,org.hibernate.internal,org.jboss.logging,org.hibernate.proxy,org.hibernate.proxy.pojo.javassist'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source'/>
      <p n='uses' v='org.hibernate.metamodel.domain,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.service,org.hibernate.internal.jaxb,org.hibernate.cache.spi.access,org.hibernate,org.hibernate.metamodel.binding,org.hibernate.metamodel.relational,org.hibernate.engine,org.hibernate.metamodel,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.config.internal'/>
      <p n='uses' v='org.hibernate.service.config.spi,org.hibernate.service.spi,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.persister.internal'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate.persister.spi,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.metamodel.source,org.hibernate.cache.spi.access,org.hibernate.mapping,org.hibernate,org.hibernate.persister.collection,org.hibernate.metamodel.binding,org.hibernate.metamodel.domain'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jta.platform.internal'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.service.jta.platform.spi,org.hibernate.internal.util.config,javax.transaction,org.hibernate.service,org.hibernate.service.jndi.spi,org.hibernate.service.classloading.spi,org.hibernate.service.jndi,org.hibernate,org.hibernate.internal,org.hibernate.transaction,org.jboss.logging,org.hibernate.internal.util.jndi,org.hibernate.engine.transaction.internal.jta,javax.transaction.xa'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc.batch.spi'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.service,org.hibernate.engine.jdbc.spi,org.hibernate.jdbc'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.stat.spi'/>
      <p n='uses' v='org.hibernate.service,org.hibernate.stat'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.spi.entry'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate.event.spi,org.hibernate.service,org.hibernate.type,org.hibernate.event.service.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.service.spi,org.hibernate.collection.spi,org.hibernate.persister.collection'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.insert'/>
      <p n='uses' v='org.hibernate.pretty,org.hibernate.id,org.hibernate.persister.entity,org.hibernate,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.dialect,org.hibernate.sql'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cfg.beanvalidation'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate,org.hibernate.internal,org.hibernate.cfg,javax.validation,org.hibernate.event.spi,org.jboss.logging,org.hibernate.metamodel.source,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate.engine.jdbc.spi,org.hibernate.dialect,org.hibernate.event.service.spi,org.hibernate.service.spi,org.hibernate.internal.util.config,org.hibernate.integrator.spi,javax.validation.groups,org.hibernate.internal.util,org.hibernate.annotations.common,org.hibernate.type,javax.validation.metadata,javax.validation.constraints,org.hibernate.mapping'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.jaxb.mapping.orm'/>
      <p n='uses' v='javax.xml.bind.annotation,javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.instrumentation.spi'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tuple'/>
      <p n='uses' v='org.hibernate.internal.util.xml,org.hibernate.mapping,org.dom4j,org.hibernate.metamodel.domain,org.hibernate.metamodel.binding,org.hibernate.id,org.hibernate.type,org.hibernate.internal.util,org.hibernate,org.hibernate.internal,org.hibernate.bytecode.spi,org.jboss.logging,org.hibernate.metamodel.relational,org.hibernate.property,org.hibernate.engine.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.annotations'/>
      <p n='uses' v='javax.persistence,org.hibernate.cache.spi.access,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.classic'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.collections'/>
      <p n='uses' v='org.hibernate,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.buildtime.spi'/>
      <p n='uses' v='org.hibernate.bytecode.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.factory.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.id,org.hibernate.id.factory.spi,org.hibernate.service,org.hibernate.engine.jdbc.spi,org.hibernate.type,org.hibernate.id.enhanced,org.hibernate.dialect,org.hibernate,org.hibernate.service.spi,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations'/>
      <p n='uses' v='org.hibernate.metamodel.source,org.jboss.jandex,com.fasterxml.classmate,org.hibernate.internal.util,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate.metamodel.domain,org.hibernate.cfg,org.hibernate.metamodel,org.hibernate.internal.jaxb.mapping.orm,org.hibernate,org.hibernate.metamodel.source.annotations.xml.mocker,org.hibernate.metamodel.source.internal,org.hibernate.metamodel.source.annotations.xml,org.jboss.logging,org.hibernate.metamodel.source.annotations.global,org.hibernate.metamodel.source.binder,org.hibernate.internal.jaxb,org.hibernate.metamodel.source.annotations.entity,org.hibernate.internal.util.collections,org.hibernate.metamodel.binding,javax.persistence,org.hibernate.annotations,org.hibernate.id'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jdbc.connections.spi'/>
      <p n='uses' v='javax.sql,org.hibernate.service,org.hibernate.service.spi,javax.naming,org.hibernate,org.hibernate.service.jndi.spi,org.hibernate.service.config.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.jmx'/>
      <p n='uses' v='javax.naming,org.hibernate,org.hibernate.internal,org.hibernate.cfg,org.hibernate.tool.hbm2ddl,org.hibernate.service,org.jboss.logging,org.hibernate.internal.util.jndi,org.hibernate.id,org.hibernate.service.jndi.spi,org.hibernate.service.jndi.internal,org.hibernate.metadata,org.hibernate.internal.util.config,org.hibernate.stat,org.hibernate.stat.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.context'/>
      <p n='uses' v='org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.persister.spi'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.persister.entity,org.hibernate.persister.collection,org.hibernate.service,org.hibernate.metamodel.binding,org.hibernate,org.hibernate.metamodel.source,org.hibernate.cfg,org.hibernate.cache.spi.access'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.global'/>
      <p n='uses' v='org.hibernate.annotations,org.hibernate,org.hibernate.metamodel.source,org.hibernate.metamodel.source.annotations,org.jboss.jandex,org.hibernate.metamodel.binding,org.hibernate.internal,org.jboss.logging,org.hibernate.type,org.hibernate.internal.util,org.hibernate.metamodel,javax.persistence,org.hibernate.engine.query.spi.sql,org.hibernate.cfg,org.hibernate.metamodel.relational'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc.batch.internal'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.engine.jdbc.batch.spi,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.jdbc,org.hibernate.service.spi,org.hibernate.internal.util.config,org.hibernate.service.classloading.spi,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.classic'/>
      <p n='uses' v='org.hibernate.hql.spi,org.hibernate,org.hibernate.persister.entity,org.hibernate.sql,org.hibernate.type,org.hibernate.internal.util,org.hibernate.engine.internal,org.hibernate.hql.internal,org.hibernate.persister.collection,org.hibernate.stat.spi,org.hibernate.internal.util.collections,org.hibernate.internal,org.hibernate.loader,org.hibernate.event.spi,org.hibernate.transform,org.hibernate.engine.jdbc.spi,org.hibernate.dialect,org.jboss.logging,org.hibernate.stat,org.hibernate.dialect.function'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.event.spi'/>
      <p n='uses' v='org.hibernate.collection.spi,org.hibernate.persister.entity,org.hibernate.persister.collection,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.jaxb.mapping.hbm'/>
      <p n='uses' v='javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.namespace'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.enhanced'/>
      <p n='uses' v='org.hibernate.id,org.hibernate.dialect,org.hibernate,org.hibernate.internal,org.hibernate.internal.util,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.cfg,org.hibernate.type,org.hibernate.mapping,org.hibernate.internal.util.config,org.hibernate.jdbc,org.hibernate.engine.jdbc.internal,org.hibernate.service,org.hibernate.service.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.loader.entity'/>
      <p n='uses' v='org.hibernate.loader,org.hibernate.persister.entity,org.hibernate,org.hibernate.transform,org.hibernate.type,org.hibernate.internal.util.collections,org.hibernate.internal,org.hibernate.persister.collection,org.jboss.logging,org.hibernate.tuple,org.hibernate.tuple.entity,org.hibernate.sql'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.action.internal'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate,org.hibernate.engine.internal,org.hibernate.type,org.hibernate.action.spi,org.hibernate.cache.spi.access,org.hibernate.persister.collection,org.hibernate.cache.spi,org.hibernate.internal.util,org.hibernate.pretty,org.hibernate.event.spi,org.hibernate.service,org.hibernate.collection.spi,org.hibernate.event.service.spi,org.hibernate.service.spi,org.hibernate.cache,org.hibernate.stat.spi,org.hibernate.stat,org.hibernate.cache.spi.entry,org.hibernate.internal.util.collections,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.internal.util.xml'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.internal,org.jboss.logging,org.xml.sax,org.dom4j,org.hibernate,org.dom4j.io'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.dialect.resolver'/>
      <p n='uses' v='org.hibernate.exception.spi,org.hibernate,org.hibernate.internal,org.hibernate.exception.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.sql.ordering.antlr'/>
      <p n='uses' v='org.hibernate,antlr,antlr.collections.impl,antlr.collections,org.hibernate.dialect.function,org.hibernate.internal.util,org.hibernate.dialect,org.hibernate.internal,org.jboss.logging,org.hibernate.type,org.hibernate.hql.internal.ast.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.event.service.spi'/>
      <p n='uses' v='org.hibernate.event.spi,org.hibernate,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.dialect'/>
      <p n='uses' v='org.hibernate.dialect.function,org.hibernate,org.hibernate.type,org.hibernate.exception.spi,org.hibernate.internal.util,org.hibernate.id,org.hibernate.persister.entity,org.hibernate.exception.internal,org.hibernate.sql,org.hibernate.dialect.lock,org.hibernate.internal,org.jboss.logging,org.hibernate.internal.util.io,org.hibernate.engine.jdbc.spi,org.hibernate.internal.util.collections,org.hibernate.engine.jdbc,org.hibernate.cfg,org.hibernate.type.descriptor.sql'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.proxy.map'/>
      <p n='uses' v='org.hibernate.proxy,org.hibernate,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate'/>
      <p n='uses' v='org.hibernate.internal,org.jboss.logging,org.hibernate.criterion,org.hibernate.transform,org.hibernate.sql,org.hibernate.persister.entity,org.hibernate.type,org.hibernate.bytecode.instrumentation.spi,org.hibernate.proxy,org.hibernate.collection.spi,org.hibernate.engine,org.hibernate.engine.jdbc.spi,org.hibernate.engine.jdbc,org.hibernate.bytecode.instrumentation.internal,org.hibernate.internal.util.xml,org.hibernate.internal.jaxb,org.hibernate.pretty,org.hibernate.dialect.lock,org.hibernate.internal.util,org.hibernate.engine.query.spi.sql,org.hibernate.jdbc,org.hibernate.stat,javax.naming,org.hibernate.metadata,javax.transaction,org.hibernate.engine.transaction.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.xml.mocker'/>
      <p n='uses' v='org.jboss.jandex,org.hibernate.internal.jaxb.mapping.orm,org.hibernate,org.hibernate.service,org.hibernate.metamodel.source.annotations,org.hibernate.internal,org.hibernate.metamodel.source.annotations.xml,org.jboss.logging,org.hibernate.metamodel.source.annotations.xml.filter,org.hibernate.internal.util,javax.persistence,org.hibernate.metamodel.source,org.hibernate.internal.jaxb,org.hibernate.service.classloading.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.internal'/>
      <p n='uses' v='org.hibernate.pretty,org.hibernate.persister.entity,org.hibernate.event.spi,org.hibernate.type,org.hibernate.collection.spi,org.hibernate.internal.util.collections,org.hibernate,org.hibernate.persister.collection,org.hibernate.internal,org.jboss.logging,org.hibernate.cfg,org.hibernate.bytecode.instrumentation.spi,org.hibernate.proxy,org.hibernate.dialect,org.hibernate.internal.util,org.hibernate.sql,org.hibernate.cache.spi.access,org.hibernate.stat.spi,org.hibernate.cache.spi,org.hibernate.stat,org.hibernate.action.spi,org.dom4j,org.hibernate.tuple.entity,org.hibernate.tuple,org.hibernate.engine.loading.internal,org.hibernate.service,org.hibernate.cache.spi.entry,org.hibernate.event.service.spi,org.hibernate.service.spi,org.hibernate.property'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.stat.internal'/>
      <p n='uses' v='org.hibernate.stat,org.hibernate.cache.spi,org.hibernate.stat.spi,org.hibernate.service,org.hibernate.internal.util.collections,org.hibernate.internal,org.jboss.logging,org.hibernate.cfg,org.hibernate.metamodel.source,org.hibernate.service.classloading.spi,org.hibernate.service.spi,org.hibernate,org.hibernate.service.config.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.transaction.synchronization.internal'/>
      <p n='uses' v='org.hibernate.internal,javax.transaction,org.jboss.logging,org.hibernate.engine.transaction.synchronization.spi,org.hibernate.engine.transaction.internal.jta,org.hibernate.engine.transaction.spi,org.hibernate,org.hibernate.service.jta.platform.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.internal'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.persister.entity,org.hibernate.cache.spi,org.hibernate.tuple.entity,org.hibernate.type,org.hibernate.metamodel.binding,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.cache,org.hibernate.service.spi,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate,org.hibernate.internal,org.jboss.logging,javax.persistence'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jdbc.dialect.internal'/>
      <p n='uses' v='org.hibernate.dialect.resolver,org.hibernate.dialect,org.hibernate.service.jdbc.dialect.spi,org.hibernate,org.hibernate.internal,org.jboss.logging,org.hibernate.exception,org.hibernate.service.spi,org.hibernate.service.classloading.spi,org.hibernate.service,org.hibernate.internal.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jta.platform.spi'/>
      <p n='uses' v='javax.transaction,org.hibernate.service,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jdbc.connections.internal'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.internal.util.beans,org.hibernate.service.jdbc.connections.spi,org.hibernate,org.hibernate.internal,org.hibernate.service.classloading.spi,org.hibernate.service,org.jboss.logging,javax.sql,org.hibernate.service.jndi.spi,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.internal.util.config'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.tuple.entity'/>
      <p n='uses' v='org.hibernate.proxy,org.hibernate.persister.entity,org.hibernate,org.hibernate.internal,org.hibernate.event.spi,org.hibernate.type,org.hibernate.id,org.hibernate.service,org.hibernate.bytecode.instrumentation.spi,org.hibernate.mapping,org.hibernate.tuple,org.hibernate.event.service.spi,org.hibernate.service.spi,org.hibernate.property,org.jboss.logging,org.hibernate.metamodel.binding,org.hibernate.metamodel.domain,org.hibernate.proxy.map,org.hibernate.engine,org.hibernate.internal.util,org.hibernate.cfg,org.hibernate.internal.util.collections,org.hibernate.bytecode.spi,org.hibernate.classic,org.hibernate.bytecode.instrumentation.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.event.service.internal'/>
      <p n='uses' v='org.hibernate.event.service.spi,org.hibernate.event.spi,org.hibernate.event.internal,org.hibernate,org.hibernate.service.spi,org.hibernate.cfg,org.hibernate.metamodel.source,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.annotations.xml.filter'/>
      <p n='uses' v='org.hibernate.metamodel.source.annotations.xml.mocker,org.jboss.jandex,org.hibernate.metamodel.source.annotations'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.hibernate.cfg,org.hibernate.cache.spi,org.hibernate.cache,org.hibernate.action.spi,org.hibernate.action.internal,org.hibernate.persister.entity,org.hibernate.metadata,org.hibernate.type,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.jboss.logging,org.hibernate.engine.internal,org.hibernate.internal.util,org.hibernate.cache.spi.access,org.hibernate.collection.spi,org.hibernate.internal.util.collections,org.hibernate.persister.collection,org.hibernate.event.spi,org.hibernate.proxy,org.hibernate.pretty,org.hibernate.tuple.entity,org.hibernate.bytecode.instrumentation.spi,org.hibernate.bytecode.spi,org.hibernate.internal.util.compare,org.hibernate.id.factory,org.hibernate.engine.query.spi.sql,org.hibernate.engine.loading.internal,org.hibernate.dialect,org.hibernate.transform,org.hibernate.engine.profile,org.hibernate.exception.spi,org.hibernate.engine,org.hibernate.dialect.function,org.hibernate.id,org.hibernate.stat.spi,org.hibernate.engine.query.spi,org.hibernate.service.spi,org.hibernate.context.spi,org.hibernate.service.jdbc.connections.spi,org.hibernate.loader.custom,org.hibernate.engine.jdbc'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cfg.annotations'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.cfg,org.hibernate.annotations.common.reflection,org.hibernate,org.hibernate.internal.util,org.hibernate.annotations.common,org.hibernate.annotations,org.hibernate.internal,org.jboss.logging,javax.persistence,org.hibernate.cache.spi.access,org.hibernate.type,org.hibernate.sql,org.hibernate.dialect,org.hibernate.engine.query.spi.sql,org.hibernate.engine,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate,org.hibernate.sql,org.hibernate.engine.internal,org.hibernate.transform,org.hibernate.type,org.hibernate.hql.internal.classic,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.proxy.pojo'/>
      <p n='uses' v='org.hibernate.proxy,org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.loading.internal'/>
      <p n='uses' v='org.hibernate.pretty,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.stat.spi,org.hibernate.tuple.entity,org.hibernate.type,org.hibernate.cache.spi.entry,org.hibernate.collection.spi,org.hibernate,org.hibernate.internal,org.hibernate.persister.collection,org.hibernate.cache.spi,org.jboss.logging,org.hibernate.stat'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.integrator.spi'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.metamodel.source,org.hibernate.cfg,org.hibernate.service'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.ast'/>
      <p n='uses' v='org.hibernate.hql.spi,org.hibernate.internal,org.jboss.logging,antlr,org.hibernate,org.hibernate.hql.internal.ast.tree,org.hibernate.hql.internal.antlr,org.hibernate.internal.util,org.hibernate.hql.internal.ast.util,antlr.collections,org.hibernate.param,org.hibernate.id,org.hibernate.persister.entity,org.hibernate.sql,org.hibernate.type,org.hibernate.dialect,org.hibernate.internal.util.collections,org.hibernate.persister.collection,org.hibernate.engine.internal,org.hibernate.usertype,org.hibernate.event.spi,org.hibernate.hql.internal.ast.exec,org.hibernate.loader.hql,org.hibernate.hql.internal,org.hibernate.dialect.function'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc'/>
      <p n='uses' v='org.hibernate.type.descriptor.java,org.hibernate,org.hibernate.internal,org.jboss.logging,org.hibernate.engine.jdbc.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.engine.jdbc.batch.spi,org.hibernate.jdbc,org.hibernate.service,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.engine.transaction.internal,org.hibernate,org.hibernate.service.spi,org.hibernate.internal,org.jboss.logging,org.hibernate.service.jdbc.connections.spi,org.hibernate.exception.spi,org.hibernate.exception.internal,org.hibernate.dialect,org.hibernate.service.jdbc.dialect.spi,org.hibernate.internal.util.config,org.hibernate.engine.jdbc,org.hibernate.engine.jdbc.internal.proxy,org.hibernate.internal.util.collections,org.hibernate.cfg'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.profile'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate.internal,org.jboss.logging,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.jdbc.internal.proxy'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.dialect,org.hibernate.internal.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cfg.annotations.reflection'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.annotations.common.reflection,org.dom4j,org.hibernate.annotations.common.reflection.java,javax.persistence,org.hibernate.annotations.common.annotationfactory,org.hibernate.annotations,org.hibernate,org.hibernate.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id'/>
      <p n='uses' v='org.hibernate.dialect,org.hibernate.internal.util,org.hibernate.persister.entity,org.hibernate,org.hibernate.type,org.hibernate.engine.internal,org.hibernate.internal,org.jboss.logging,org.hibernate.engine.jdbc.spi,org.hibernate.engine.transaction.spi,org.hibernate.usertype,org.hibernate.sql,org.hibernate.id.insert,org.hibernate.cfg,org.hibernate.mapping,org.hibernate.service.spi,org.hibernate.jdbc,org.hibernate.service,org.hibernate.engine.jdbc.internal,org.hibernate.id.enhanced,org.hibernate.internal.util.config,org.hibernate.type.descriptor.java,org.hibernate.id.uuid'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.exception.internal'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.exception.spi,org.hibernate,org.hibernate.exception'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.classloading.spi'/>
      <p n='uses' v='org.hibernate.service,org.hibernate'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.type,org.hibernate.event.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.id.factory'/>
      <p n='uses' v='org.hibernate.dialect,org.hibernate.id,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.criterion'/>
      <p n='uses' v='org.hibernate.persister.entity,org.hibernate,org.hibernate.persister.collection,org.hibernate.sql,org.hibernate.type,org.hibernate.dialect.function,org.hibernate.internal.util,org.hibernate.transform,org.hibernate.internal,org.hibernate.tuple.entity,org.hibernate.internal.util.collections,org.hibernate.dialect,org.hibernate.loader.criteria'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.metamodel.source.internal'/>
      <p n='uses' v='org.hibernate.metamodel.domain,org.hibernate,org.hibernate.metamodel.source,org.hibernate.metamodel.binding,org.hibernate.metamodel.relational,org.hibernate.type,org.hibernate.cfg,org.hibernate.id,org.hibernate.id.factory,org.hibernate.service,org.hibernate.service.config.spi,javax.xml.bind,org.hibernate.service.classloading.spi,org.hibernate.metamodel,org.hibernate.internal.jaxb.mapping.hbm,javax.xml.transform.dom,javax.xml.stream.events,org.w3c.dom,org.xml.sax,javax.xml.namespace,org.hibernate.internal.jaxb.mapping.orm,javax.xml.stream,javax.xml.transform,javax.xml.transform.stream,org.jboss.logging,javax.xml.validation,org.hibernate.internal.jaxb,org.hibernate.cache.spi.access,javax.persistence,org.hibernate.internal.util,org.hibernate.persister.spi,org.hibernate.cache.spi,org.hibernate.engine,org.hibernate.id.factory.spi,org.hibernate.metamodel.source.hbm,org.hibernate.internal,org.hibernate.metamodel.source.annotations,org.hibernate.proxy'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.bytecode.spi'/>
      <p n='uses' v='org.hibernate.bytecode.buildtime.spi,org.hibernate.bytecode.instrumentation.spi,org.hibernate,org.hibernate.proxy'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.stat'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.hql.internal.ast.tree'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.hql.internal.ast.util,org.hibernate.hql.internal.antlr,org.hibernate.persister.collection,antlr.collections,antlr,org.hibernate.type,org.hibernate.hql.internal.ast,org.hibernate,org.hibernate.internal,org.hibernate.dialect.function,org.jboss.logging,org.hibernate.transform,org.hibernate.persister.entity,org.hibernate.param,org.hibernate.dialect,org.hibernate.hql.internal,org.hibernate.engine.internal,org.hibernate.tuple.entity,org.hibernate.sql,org.hibernate.internal.util.collections'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.service.jmx.spi'/>
      <p n='uses' v='org.hibernate.service.spi,org.hibernate.service,javax.management'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <require extend='false' filter='(&amp;(package=antlr)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package antlr ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=antlr.collections)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package antlr.collections ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=antlr.collections.impl)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package antlr.collections.impl ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.classmate)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.classmate
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.classmate.members)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.classmate.members
    </require>
    <require extend='false' filter='(&amp;(package=javassist)(version&gt;=3.15.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javassist ;version=[3.15.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javassist.bytecode)(version&gt;=3.15.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javassist.bytecode ;version=[3.15.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javassist.util.proxy)(version&gt;=3.15.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javassist.util.proxy ;version=[3.15.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.jacc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.jacc
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.constraints)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.constraints ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.groups)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.groups ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.taskdefs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.io)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.io ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.annotationfactory)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.annotationfactory
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection.java)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection.java
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.jandex)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jboss.jandex
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.logging ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='hibernate-ehcache/4.1.2' presentationname='hibernate-ehcache' symbolicname='hibernate-ehcache' uri='hibernate-ehcache-4.1.2.jar' version='4.1.2'>
    <size>
      138403
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-ehcache'/>
      <p n='symbolicname' v='hibernate-ehcache'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache.management.impl'/>
      <p n='uses' v='javax.management,javax.management.openmbean,org.hibernate.stat,org.hibernate,net.sf.ehcache.hibernate.management.api,net.sf.ehcache,org.hibernate.cache.ehcache,org.jboss.logging,net.sf.ehcache.event,net.sf.ehcache.management.sampled,net.sf.ehcache.statistics,net.sf.ehcache.statistics.sampled,net.sf.ehcache.config,org.hibernate.internal,org.hibernate.cache,net.sf.ehcache.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache.internal.regions'/>
      <p n='uses' v='org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.cache.ehcache.internal.strategy,org.hibernate.cache.spi,org.hibernate.cache,net.sf.ehcache,net.sf.ehcache.util,net.sf.ehcache.constructs.nonstop,org.hibernate.cache.ehcache,org.jboss.logging,org.hibernate.cache.ehcache.internal.nonstop,net.sf.ehcache.concurrent'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache'/>
      <p n='uses' v='net.sf.ehcache.util,org.hibernate.cfg,org.hibernate.cache.ehcache.internal.regions,org.hibernate.cache.spi.access,org.hibernate.service.classloading.spi,org.hibernate.cache.ehcache.internal.strategy,org.hibernate.cache.ehcache.internal.util,org.hibernate.cache.ehcache.internal.nonstop,org.hibernate.cache.ehcache.management.impl,org.hibernate.service.spi,org.hibernate.cache.spi,org.hibernate.cache,org.jboss.logging,net.sf.ehcache,org.hibernate.internal,javax.naming,org.hibernate.id,org.hibernate.service.jdbc.dialect.internal,org.hibernate.service.jndi,org.hibernate.type,org.hibernate.engine.spi,org.hibernate.dialect,org.hibernate,javax.transaction,org.hibernate.engine.loading.internal,net.sf.ehcache.config'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache.internal.strategy'/>
      <p n='uses' v='org.hibernate.cache.ehcache.internal.regions,org.hibernate.cfg,org.hibernate.cache.spi.access,org.hibernate.cache,org.hibernate.cache.ehcache,org.hibernate.cache.spi,org.jboss.logging,net.sf.ehcache'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache.internal.util'/>
      <p n='uses' v='net.sf.ehcache.config,org.hibernate.cache.ehcache,org.hibernate.cache,org.jboss.logging,net.sf.ehcache'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.cache.ehcache.internal.nonstop'/>
      <p n='uses' v='net.sf.ehcache.constructs.nonstop,org.hibernate.cache.ehcache,org.jboss.logging,org.hibernate.cache.ehcache.internal.regions,org.hibernate.cache.spi.access,org.hibernate.cache.ehcache.internal.strategy,org.hibernate.cache.spi,org.hibernate.cache'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.openmbean
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.concurrent)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.concurrent ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.config)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.config ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.constructs.nonstop)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.constructs.nonstop ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.event)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.event ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.hibernate.management.api)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.hibernate.management.api ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.management.sampled)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.management.sampled ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.statistics)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.statistics ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.statistics.sampled)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.statistics.sampled ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.util)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.sf.ehcache.util ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cache ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cache.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache.spi.access)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cache.spi.access ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cfg ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.dialect)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.dialect ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.loading.internal)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.loading.internal ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.id)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.id ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.classloading.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.classloading.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jdbc.dialect.internal)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jdbc.dialect.internal
       ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jndi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jndi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.stat)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.stat ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.type)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.type ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jboss.logging ;version=[3.1.0,4.0.0)
    </require>
  </resource>
  <resource id='hibernate-entitymanager/4.1.2' presentationname='hibernate-entitymanager' symbolicname='hibernate-entitymanager' uri='hibernate-entitymanager-4.1.2.jar' version='4.1.2'>
    <size>
      485112
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-entitymanager'/>
      <p n='symbolicname' v='hibernate-entitymanager'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.metamodel'/>
      <p n='uses' v='org.hibernate.internal.util,javax.persistence.metamodel,org.hibernate.annotations.common,org.hibernate.mapping,org.hibernate.property,org.hibernate.tuple.component,org.hibernate.type,org.hibernate.tuple,org.hibernate.tuple.entity,org.hibernate.persister.entity,org.hibernate.engine.spi,org.hibernate.ejb.internal,org.jboss.logging,javax.persistence'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.criteria'/>
      <p n='uses' v='javax.persistence.metamodel,javax.persistence.criteria,org.hibernate.ejb.criteria.path,org.hibernate.ejb.criteria.expression,org.hibernate.ejb.criteria.predicate,org.hibernate.ejb.criteria.expression.function,javax.persistence,org.hibernate.ejb,org.hibernate.engine.spi,org.hibernate.internal.util,org.hibernate,org.hibernate.type,org.hibernate.ejb.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.criteria.path'/>
      <p n='uses' v='javax.persistence.criteria,org.hibernate.ejb.criteria,javax.persistence.metamodel,org.hibernate.ejb.criteria.expression,org.hibernate.engine.spi,org.hibernate,org.hibernate.persister.collection,org.hibernate.type,org.hibernate.ejb'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.event'/>
      <p n='uses' v='org.hibernate.internal.util,org.hibernate.annotations.common.reflection,org.hibernate.ejb.internal,org.hibernate.service.classloading.spi,org.jboss.logging,org.hibernate.metamodel.source.binder,javax.persistence,org.hibernate.metamodel.binding,org.hibernate.engine.spi,org.hibernate.event.internal,org.hibernate.event.spi,org.hibernate.persister.entity,org.hibernate,org.hibernate.metadata,org.hibernate.type,org.hibernate.collection.spi,org.hibernate.event.service.spi,org.hibernate.secure.internal,org.hibernate.metamodel.domain,org.hibernate.metamodel.source,org.hibernate.cfg,org.hibernate.service,org.hibernate.mapping,org.hibernate.service.spi,org.hibernate.integrator.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.cfg.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.engine.spi'/>
      <p n='uses' v='org.hibernate,org.hibernate.ejb.internal,org.hibernate.event.spi,org.hibernate.type,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.criteria.expression'/>
      <p n='uses' v='org.hibernate.ejb.criteria,org.hibernate.ejb.criteria.predicate,javax.persistence.criteria,javax.persistence,org.hibernate.ejb.criteria.expression.function,javax.persistence.metamodel,org.hibernate.ejb.criteria.path'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.criteria.predicate'/>
      <p n='uses' v='org.hibernate.ejb.criteria.expression,org.hibernate.ejb.criteria,javax.persistence.criteria,org.hibernate.ejb.criteria.path'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.criteria.expression.function'/>
      <p n='uses' v='org.hibernate.ejb.criteria,javax.persistence.criteria,javax.persistence.metamodel,org.hibernate.ejb.criteria.expression'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.connection'/>
      <p n='uses' v='org.hibernate,javax.sql,org.hibernate.ejb.internal,org.hibernate.service.jdbc.connections.internal,org.jboss.logging'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.packaging'/>
      <p n='uses' v='javassist.bytecode,org.hibernate.ejb.internal,javassist.bytecode.annotation,org.jboss.logging,org.hibernate.annotations.common,org.hibernate.internal.util,org.hibernate,javax.persistence,javax.persistence.spi,org.xml.sax,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,org.hibernate.ejb.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.instrument'/>
      <p n='uses' v='org.hibernate.bytecode.buildtime.spi,org.hibernate.cfg,org.hibernate.bytecode.spi,javax.persistence.spi'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.internal'/>
      <p n='uses' v='org.hibernate,org.hibernate.internal,org.jboss.logging,javax.persistence,javax.naming,org.hibernate.id,org.hibernate.service.jdbc.dialect.internal,org.hibernate.service.jndi,org.hibernate.type,org.hibernate.engine.spi,org.hibernate.dialect,javax.transaction,org.hibernate.cache,org.hibernate.engine.loading.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb.util'/>
      <p n='uses' v='javax.persistence,org.hibernate,javax.sql,javax.persistence.spi,javax.naming.event,javax.naming,org.hibernate.ejb.internal,org.hibernate.service.jndi.internal,org.hibernate.cfg,org.hibernate.service.jndi,org.jboss.logging,org.hibernate.ejb,org.hibernate.bytecode.instrumentation.spi,org.hibernate.proxy,org.hibernate.collection.spi,org.hibernate.bytecode.instrumentation.internal'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.ejb'/>
      <p n='uses' v='org.hibernate.engine.spi,org.hibernate.engine.transaction.internal.jta,org.hibernate,org.hibernate.ejb.internal,javax.persistence.spi,org.hibernate.engine.transaction.synchronization.spi,org.hibernate.engine.transaction.spi,javax.transaction,javax.persistence,org.hibernate.ejb.criteria,org.hibernate.transform,org.hibernate.type,org.hibernate.internal.util.collections,org.hibernate.internal.util,org.hibernate.service.jta.platform.spi,org.hibernate.service,javax.persistence.metamodel,org.hibernate.engine,org.hibernate.engine.query.spi.sql,javax.persistence.criteria,org.hibernate.proxy,org.hibernate.engine.query.spi,org.hibernate.ejb.criteria.expression,org.hibernate.hql.spi,org.hibernate.metadata,org.hibernate.service.spi,org.jboss.logging,org.hibernate.ejb.util,org.hibernate.dialect.lock,org.hibernate.hql.internal,org.hibernate.service.internal,org.hibernate.ejb.packaging,org.hibernate.service.jdbc.connections.internal,org.hibernate.ejb.event,org.hibernate.secure.internal,org.hibernate.cfg.beanvalidation,org.xml.sax,org.hibernate.ejb.cfg.spi,org.hibernate.ejb.connection,org.hibernate.ejb.instrument,org.hibernate.internal,org.hibernate.integrator.spi,org.hibernate.cfg.annotations.reflection,javax.naming,org.hibernate.id.factory.spi,org.dom4j,org.hibernate.cfg,org.hibernate.engine.transaction.internal.jdbc,org.hibernate.mapping,org.hibernate.internal.util.xml,javax.sql,javax.naming.spi,org.hibernate.ejb.metamodel,org.hibernate.id,org.hibernate.internal.util.config,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.1.2'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javassist.bytecode)(version&gt;=3.15.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javassist.bytecode ;version=[3.15.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javassist.bytecode.annotation)(version&gt;=3.15.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javassist.bytecode.annotation ;version=[3.15.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.criteria ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.metamodel ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.util)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.util ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.bytecode.buildtime.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.bytecode.buildtime.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.bytecode.instrumentation.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.bytecode.instrumentation.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.bytecode.instrumentation.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.bytecode.instrumentation.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.bytecode.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.bytecode.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cache
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cfg
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg.annotations.reflection)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cfg.annotations.reflection
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg.beanvalidation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cfg.beanvalidation
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.collection.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.collection.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.dialect)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.dialect
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.dialect.lock)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.dialect.lock
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.loading.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.loading.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.query.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.query.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.query.spi.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.query.spi.sql
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.transaction.internal.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.transaction.internal.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.transaction.internal.jta)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.transaction.internal.jta
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.transaction.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.transaction.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.transaction.synchronization.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.transaction.synchronization.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.event.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.service.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.event.service.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.event.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.hql.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.hql.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.hql.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.hql.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.id)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.id
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.id.factory.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.id.factory.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.integrator.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.integrator.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal.util
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal.util.collections)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal.util.collections
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal.util.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal.util.config
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal.util.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal.util.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.mapping)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.mapping
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metadata
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metamodel.binding)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metamodel.binding
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metamodel.domain)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metamodel.domain
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metamodel.source)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metamodel.source
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metamodel.source.binder)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metamodel.source.binder
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.persister.collection)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.persister.collection
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.persister.entity)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.persister.entity
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.property)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.property
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.proxy)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.proxy
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.secure.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.secure.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.classloading.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.classloading.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jdbc.connections.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jdbc.connections.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jdbc.dialect.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jdbc.dialect.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jndi.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jndi.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jta.platform.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jta.platform.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.transform
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.tuple)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.tuple
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.tuple.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.tuple.component
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.tuple.entity)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.tuple.entity
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.type)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.type
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jboss.logging ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='hibernate-jpa-api/2.0.0' presentationname='hibernate-jpa-api' symbolicname='hibernate-jpa-api' uri='hibernate-jpa-2.0-api-1.0.1.Final.jar' version='2.0.0'>
    <size>
      105938
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-jpa-api'/>
      <p n='symbolicname' v='hibernate-jpa-api'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.spi'/>
      <p n='uses' v='javax.persistence,javax.sql'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence'/>
      <p n='uses' v='javax.persistence.criteria,javax.persistence.metamodel,javax.persistence.spi'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.criteria'/>
      <p n='uses' v='javax.persistence.metamodel,javax.persistence'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.metamodel'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
  </resource>
  <resource id='hibernate-search/4.1.0' presentationname='hibernate-search' symbolicname='hibernate-search' uri='hibernate-search-4.1.0.Final.jar' version='4.1.0'>
    <size>
      2564
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-search'/>
      <p n='symbolicname' v='hibernate-search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=lucene-core)(version&gt;=3.5.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle lucene-core; 3.5.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=lucene-analyzers)(version&gt;=3.5.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle lucene-analyzers; 3.5.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=solr-analysis-extras)(version&gt;=3.5.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle solr-analysis-extras; 3.5.0
    </require>
  </resource>
  <resource id='hibernate-search-engine/4.1.0' presentationname='hibernate-search-engine' symbolicname='hibernate-search-engine' uri='hibernate-search-engine-4.1.0.Final.jar' version='4.1.0'>
    <size>
      782963
    </size>
    <capability name='fragment'>
      <p n='host' v='hibernate-search'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='hibernate-search'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-search-engine'/>
      <p n='symbolicname' v='hibernate-search-engine'/>
      <p n='version' t='version' v='4.1.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.engine.spi'/>
      <p n='uses' v='org.apache.lucene.search,org.hibernate.search.query.facet,org.hibernate.search,org.hibernate.search.engine.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.engine.impl'/>
      <p n='uses' v='org.hibernate.search.query.engine.spi,org.hibernate.search.util.logging.impl,org.hibernate.search.query.collector.impl,org.hibernate.search.engine.spi,org.hibernate.search.engine.impl,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.util.impl,org.apache.lucene.document,org.apache.lucene.search,org.hibernate.search.query.facet,org.hibernate.search.util.impl,org.hibernate.search.query.dsl.impl,org.hibernate.search.filter,org.hibernate.search,org.hibernate.search.stat,org.hibernate.search.reader.impl,org.hibernate.search.store,org.apache.lucene.index,org.hibernate.search.annotations,org.hibernate.search.indexes.spi,org.hibernate.annotations.common,org.hibernate.search.filter.impl,org.hibernate.search.stat.spi,org.apache.lucene.util'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.cfg.spi'/>
      <p n='uses' v='org.hibernate.annotations.common.reflection,org.hibernate.search.cfg,org.hibernate.search.spi,org.hibernate.search.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.serialization.impl'/>
      <p n='uses' v='org.hibernate.search,org.apache.lucene.util,org.hibernate.search.util.logging.impl,org.hibernate.search.indexes.serialization.spi,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.hibernate.search.util.impl,org.hibernate.search.backend,org.apache.solr.handler,org.hibernate.search.engine.spi,org.apache.lucene.index,org.hibernate.search.bridge.spi,org.apache.lucene.document'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search'/>
      <p n='uses' v='org.apache.lucene.util,org.hibernate.search.indexes,org.hibernate.search.stat,org.hibernate.search.query.dsl,org.apache.lucene.analysis,org.hibernate.search.util.logging.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.filter'/>
      <p n='uses' v='org.apache.lucene.search,org.hibernate.search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.lucene.works'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl,org.hibernate.search.backend,org.hibernate.search.engine.spi,org.hibernate.search.store,org.apache.lucene.index,org.apache.lucene.document,org.apache.lucene.analysis,org.hibernate.annotations.common,org.hibernate.search.bridge.util.impl,org.apache.lucene.search,org.hibernate.search.bridge,org.hibernate.search.bridge.builtin,org.hibernate.search.backend.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.facet'/>
      <p n='uses' v='org.apache.lucene.search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.sandbox.standalone'/>
      <p n='uses' v='org.hibernate.search,org.apache.lucene.search,javax.transaction,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.search.engine.spi,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.jms'/>
      <p n='uses' v='javax.naming,org.hibernate.search,org.hibernate.search.util.logging.impl,javax.jms,org.hibernate.search.util.impl,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.search.engine.spi,org.hibernate.search.indexes.spi,org.hibernate.search.spi,org.hibernate.search.indexes.impl,org.hibernate.search.indexes.serialization.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge'/>
      <p n='uses' v='org.hibernate.search,org.apache.lucene.document'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.remote.codex.avro.v1_0.operation'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend'/>
      <p n='uses' v='org.hibernate.search.backend.impl,org.apache.lucene.document,org.hibernate.search,org.hibernate.search.indexes.serialization.impl,org.hibernate.search.util.logging.impl,org.hibernate.search.backend.impl.blackhole,org.hibernate.search.backend.impl.jms,org.hibernate.search.util.impl,org.hibernate.search.backend.impl.jgroups,org.hibernate.search.backend.spi,org.hibernate.search.indexes.serialization.avro.impl,org.hibernate.search.engine.spi,org.hibernate.search.backend.impl.lucene,org.hibernate.search.indexes.serialization.spi,org.hibernate.search.util.configuration.impl,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.hibernate.search.batchindexing.impl,org.hibernate.annotations.common.util,javax.transaction'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.spi'/>
      <p n='uses' v='org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.hibernate.search.backend,org.hibernate.search,org.hibernate.search.util.logging.impl,org.hibernate.search.backend.configuration.impl,org.apache.lucene.index,org.hibernate.search.util.configuration.impl,org.hibernate.search.backend.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.reader.impl'/>
      <p n='uses' v='org.hibernate.search.indexes.spi,org.hibernate.search,org.apache.lucene.index,org.hibernate.annotations.common,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl,org.apache.lucene.search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.spi.internals'/>
      <p n='uses' v='org.hibernate.search.util.logging.impl,org.hibernate.search.engine.spi,org.hibernate.search.query.engine.spi,org.hibernate.search.cfg,org.hibernate.search.filter,org.hibernate.search.engine,org.hibernate.search.backend.spi,org.hibernate.search.engine.impl,org.hibernate.search.exception,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.store.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.util.impl,org.hibernate.search.spi,org.hibernate.search.store,org.apache.lucene.store,org.hibernate.annotations.common.util,org.apache.lucene.util,org.hibernate.search.util.logging.impl,org.apache.lucene.index,org.hibernate.search.util.configuration.impl,org.apache.lucene.analysis,org.hibernate.search.indexes.impl,org.hibernate.annotations.common,org.hibernate.search.indexes.spi,org.hibernate.search.filter,org.apache.lucene.document'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.annotations'/>
      <p n='uses' v='org.hibernate.search.analyzer,org.apache.solr.analysis,org.hibernate.search.engine,org.hibernate.search.indexes.interceptor'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.store.optimization.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.indexes.spi,org.hibernate.search.util.logging.impl,org.hibernate.search.store.optimization,org.hibernate.search.store,org.apache.lucene.index,org.hibernate.search.util.configuration.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.exception.impl'/>
      <p n='uses' v='org.hibernate.search.exception,org.hibernate.search.backend,org.hibernate.search.util.logging.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.store.optimization'/>
      <p n='uses' v='org.hibernate.search.indexes.spi,org.hibernate.search.store,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.filter.impl'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.search,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl,org.apache.lucene.index,org.hibernate.annotations.common,org.hibernate.search,org.hibernate.search.filter,org.hibernate.search.util.configuration.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.dsl'/>
      <p n='uses' v='org.apache.lucene.search,org.hibernate.search.query.facet'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.serialization.javaserialization.impl'/>
      <p n='uses' v='org.hibernate.search.indexes.serialization.impl,org.hibernate.search,org.apache.lucene.util,org.hibernate.search.indexes.serialization.spi,org.hibernate.search.util.logging.impl,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.util.impl,org.hibernate.search.indexes.serialization.avro.impl,org.hibernate.search.backend,org.apache.lucene.document'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.remote.codex.avro.v1_0.attribute'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.spi'/>
      <p n='uses' v='org.hibernate.search.exception,org.hibernate.search.indexes.impl,org.hibernate.search.engine.spi,org.hibernate.search.backend.spi,org.hibernate.search.cfg.spi,org.hibernate.search.engine,org.hibernate.search.impl,org.hibernate.search.spi.internals,org.hibernate.search,org.hibernate.search.filter,org.hibernate.search.util.impl,org.hibernate.search.annotations,org.hibernate.annotations.common.reflection,org.hibernate.search.exception.impl,org.hibernate.search.filter.impl,org.hibernate.search.backend.impl,org.hibernate.search.util.logging.impl,org.hibernate.search.cfg,org.hibernate.search.store,org.hibernate.search.indexes.spi,org.hibernate.search.engine.impl,org.hibernate.search.util.configuration.impl,org.hibernate.annotations.common.reflection.java,org.apache.lucene.search,org.hibernate.annotations.common.util,org.hibernate.search.indexes.interceptor,org.hibernate.search.query.engine.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.fieldcache.impl'/>
      <p n='uses' v='org.hibernate.search.bridge.builtin.impl,org.hibernate.search.bridge,org.hibernate.search.bridge.builtin,org.apache.lucene.search,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes'/>
      <p n='uses' v='org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.impl'/>
      <p n='uses' v='org.hibernate.annotations.common.annotationfactory,org.hibernate.search.cfg.spi,org.hibernate.search,org.apache.lucene.util,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl,org.hibernate.search.annotations,org.apache.lucene.analysis.standard,org.hibernate.annotations.common.reflection,org.apache.lucene.search,org.hibernate.annotations.common.util,org.apache.lucene.analysis,org.hibernate.search.query.engine.spi,org.hibernate.search.query.engine.impl,org.hibernate.search.filter,org.hibernate.search.engine,org.hibernate.search.stat,org.hibernate.search.backend.spi,org.hibernate.search.engine.spi,org.hibernate.search.spi.internals,org.hibernate.search.backend.impl.batch,org.hibernate.search.jmx,org.hibernate.annotations.common,org.hibernate.search.query.dsl,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.hibernate.search.cfg,org.hibernate.search.indexes,org.hibernate.search.batchindexing,org.hibernate.search.indexes.spi,org.hibernate.search.exception,org.hibernate.search.engine.impl,org.hibernate.search.jmx.impl,org.hibernate.search.stat.impl,org.hibernate.search.stat.spi,org.hibernate.search.util.configuration.impl,org.hibernate.search.query.dsl.impl,org.hibernate.annotations.common.reflection.java,org.apache.solr.analysis,org.apache.solr.util.plugin,org.apache.solr.common'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.serialization.avro.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.util.logging.impl,org.apache.avro.util,org.apache.avro.io,org.apache.avro.generic,org.hibernate.search.indexes.serialization.spi,org.apache.avro,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.util.impl,org.hibernate.search.util.impl,org.apache.lucene.analysis.tokenattributes,org.hibernate.search.indexes.serialization.impl,org.apache.lucene.util,org.hibernate.search.backend,org.apache.solr.handler,org.apache.lucene.index,org.apache.lucene.document'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.lucene.overrides'/>
      <p n='uses' v='org.hibernate.search.exception,org.apache.lucene.util,org.hibernate.search.util.logging.impl,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.store'/>
      <p n='uses' v='org.apache.lucene.store,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.hibernate.search.indexes.spi,org.hibernate.search.filter,org.apache.lucene.document,org.hibernate.search.engine.spi,org.apache.lucene.index,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.lucene'/>
      <p n='uses' v='org.hibernate.search.util.logging.impl,org.hibernate.search.engine.spi,org.hibernate.search.store,org.apache.lucene.index,org.hibernate.search.exception,org.hibernate.search.exception.impl,org.hibernate.search.store.optimization,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.apache.lucene.analysis,org.hibernate.search,org.apache.lucene.util,org.hibernate.search.backend.impl.lucene.overrides,org.hibernate.search.backend.spi,org.apache.lucene.store,org.apache.lucene.search,org.hibernate.search.backend,org.hibernate.search.backend.impl.lucene.works,org.hibernate.search.batchindexing.impl,org.hibernate.search.backend.impl,org.hibernate.search.indexes.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.engine'/>
      <p n='uses' v='org.hibernate.search.query.engine.spi,org.apache.lucene.search,org.hibernate.search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.exception'/>
      <p n='uses' v='org.hibernate.search.backend'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.jmx.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.util.logging.impl,javax.management'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.stat.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.indexes,org.hibernate.search.stat,org.hibernate.search.engine.spi,org.apache.lucene.index,org.hibernate.search.stat.spi,org.apache.lucene.search,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.dsl.impl'/>
      <p n='uses' v='org.hibernate.search.query.facet,org.apache.lucene.search,org.hibernate.annotations.common,org.hibernate.search.query.dsl,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.index,org.hibernate.search.bridge,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.builtin,org.hibernate.search.bridge.util.impl,org.hibernate.search.engine.spi,org.hibernate.search,org.hibernate.search.util.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge.spi'/>
      <p n='uses' v='org.hibernate.search.bridge'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.util.configuration.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.annotations.common.util,org.hibernate.search.util.logging.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge.util.impl'/>
      <p n='uses' v='org.hibernate.search.bridge,org.apache.lucene.document,org.hibernate.search.bridge.spi,org.hibernate.search,org.apache.lucene.search'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.interceptor'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.collector.impl'/>
      <p n='uses' v='org.hibernate.search.query.fieldcache.impl,org.apache.lucene.search,org.apache.lucene.index,org.hibernate.search.util.impl,org.hibernate.search.query.facet,org.hibernate.search.query.dsl.impl,org.hibernate.search.bridge,org.hibernate.search.bridge.builtin,org.hibernate.search.util.logging.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.blackhole'/>
      <p n='uses' v='org.hibernate.search.util.logging.impl,org.hibernate.search.indexes.impl,org.hibernate.search.spi,org.hibernate.search.backend,org.hibernate.search.backend.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.engine'/>
      <p n='uses' v='org.hibernate.search.spi,org.hibernate.search.cfg.spi,org.hibernate.search,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.util.impl'/>
      <p n='uses' v='org.hibernate.search,org.apache.lucene.util,org.hibernate.annotations.common.util,org.apache.lucene.analysis,org.apache.lucene.document,org.hibernate.search.util.logging.impl,org.hibernate.search.annotations,org.hibernate.annotations.common,org.apache.solr.common,org.apache.solr.util.plugin,javax.naming,org.hibernate.annotations.common.reflection'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.jgroups'/>
      <p n='uses' v='org.jgroups,org.hibernate.search,org.hibernate.search.util.logging.impl,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.search.backend.impl.lucene,org.hibernate.search.indexes.spi,org.hibernate.search.util.configuration.impl,org.hibernate.search.spi,org.hibernate.search.indexes.impl,org.hibernate.search.indexes.serialization.spi,org.hibernate.annotations.common'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.stat'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.engine.spi'/>
      <p n='uses' v='org.hibernate.search.annotations,org.hibernate.annotations.common.reflection,org.hibernate.search.engine.impl,org.hibernate.search.engine,org.hibernate.search.bridge,org.hibernate.search.analyzer,org.apache.lucene.document,org.apache.lucene.analysis,org.hibernate.search,org.hibernate.search.util.impl,org.hibernate.search.backend,org.hibernate.annotations.common,org.hibernate.search.spi,org.hibernate.search.util.logging.impl,org.hibernate.search.impl,org.hibernate.search.bridge.builtin.impl,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.impl,org.apache.lucene.search,org.hibernate.annotations.common.util,org.hibernate.search.query.collector.impl,org.apache.lucene.index,org.hibernate.search.query.fieldcache.impl,org.hibernate.search.bridge.util.impl,org.hibernate.search.bridge.builtin,org.hibernate.search.indexes.spi,org.hibernate.search.store,org.hibernate.search.indexes.interceptor,org.hibernate.search.batchindexing,org.hibernate.search.filter,org.hibernate.search.stat.spi,org.hibernate.search.indexes.impl,org.hibernate.search.backend.impl.batch'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.batch'/>
      <p n='uses' v='org.hibernate.search.backend,org.hibernate.search.batchindexing,org.hibernate.search.indexes.spi,org.hibernate.search.backend.impl,org.hibernate.search.spi,org.hibernate.search.engine.spi,org.hibernate.search.store'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.jmx'/>
      <p n='uses' v='org.hibernate.search.batchindexing,org.hibernate.search.util.logging.impl,org.hibernate.search.jmx.impl,org.hibernate.search.stat'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.util'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.hibernate.search.util.logging.impl,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.serialization.spi'/>
      <p n='uses' v='org.apache.lucene.document,org.hibernate.annotations.common,org.hibernate.search,org.hibernate.search.indexes.serialization.impl,org.apache.lucene.analysis,org.hibernate.search.backend,org.apache.lucene.util,org.hibernate.search.bridge.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl'/>
      <p n='uses' v='org.hibernate.search.util.logging.impl,org.hibernate.search.util.configuration.impl,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.search.engine.spi,org.hibernate.search.store,org.hibernate.search.util.impl,javax.transaction,org.hibernate.search.indexes.spi,org.apache.lucene.document,org.hibernate.search.indexes.interceptor,org.hibernate.search,org.hibernate.annotations.common,org.hibernate.search.spi,org.hibernate.search.engine.impl,org.hibernate.search.cfg.spi,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.impl'/>
      <p n='uses' v='org.hibernate.search.store.optimization.impl,org.hibernate.search,org.hibernate.search.indexes.spi,org.hibernate.search.util.impl,org.hibernate.search.store.optimization,org.hibernate.search.util.configuration.impl,org.hibernate.search.spi,org.hibernate.search.backend.spi,org.hibernate.annotations.common.util,org.hibernate.search.util.logging.impl,org.hibernate.search.impl,org.hibernate.search.indexes,org.hibernate.search.reader.impl,org.hibernate.search.engine.spi,org.hibernate.search.store,org.apache.lucene.index,org.hibernate.search.backend,org.hibernate.search.store.impl,org.hibernate.search.indexes.serialization.spi,org.apache.lucene.search,org.apache.lucene.analysis,org.hibernate.search.cfg.spi,org.hibernate.search.spi.internals,org.hibernate.search.annotations,org.hibernate.annotations.common.reflection,org.hibernate.search.engine.impl,org.hibernate.annotations.common.reflection.java,org.hibernate.search.indexes.interceptor,org.hibernate.search.backend.impl.lucene,org.apache.lucene.store,org.hibernate.annotations.common'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.configuration.impl'/>
      <p n='uses' v='org.apache.lucene.index,org.hibernate.search.util.logging.impl,org.hibernate.search.util.configuration.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.remote.codex.avro.v1_0'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.cfg'/>
      <p n='uses' v='org.apache.solr.analysis,org.hibernate.search.annotations,org.hibernate.search,org.hibernate.search.bridge,org.hibernate.search.engine,org.hibernate.search.analyzer,org.hibernate.search.indexes.interceptor'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.util.logging.impl'/>
      <p n='uses' v='org.hibernate.search,org.jboss.logging,org.hibernate.search.backend.spi,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.remote.codex.avro.v1_0.field'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.analyzer'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.batchindexing'/>
      <p n='uses' v='org.hibernate.search.backend'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge.builtin.impl'/>
      <p n='uses' v='org.hibernate.search.bridge,org.hibernate.search.bridge.builtin,org.apache.lucene.document,org.hibernate.search.engine.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.indexes.spi'/>
      <p n='uses' v='org.hibernate.search.indexes.impl,org.hibernate.search.indexes.serialization.spi,org.hibernate.search.spi,org.hibernate.search.backend,org.hibernate.search.engine.spi,org.apache.lucene.search,org.apache.lucene.analysis,org.apache.lucene.index'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.engine.impl'/>
      <p n='uses' v='org.hibernate.search.annotations,org.hibernate.search,org.apache.lucene.util,org.hibernate.search.engine,org.hibernate.search.impl,org.hibernate.search.util.impl,org.hibernate.annotations.common.reflection,org.hibernate.annotations.common,org.apache.lucene.document,org.hibernate.annotations.common.util,org.apache.lucene.analysis,org.hibernate.search.engine.spi,org.hibernate.search.util.logging.impl,org.hibernate.search.bridge,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.builtin.impl,org.hibernate.search.bridge.impl,org.hibernate.search.bridge.util.impl,org.hibernate.search.indexes.spi,org.hibernate.search.query.collector.impl,org.apache.lucene.search,org.hibernate.search.indexes.interceptor,org.hibernate.search.store,org.hibernate.search.backend.spi,org.hibernate.search.backend,org.hibernate.search.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.stat.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge.builtin'/>
      <p n='uses' v='org.hibernate.search.bridge,org.apache.lucene.document,org.hibernate.annotations.common.util,org.hibernate.search.annotations,org.hibernate.search,org.hibernate.annotations.common'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.batchindexing.impl'/>
      <p n='uses' v='org.hibernate.search.util.logging.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.bridge.impl'/>
      <p n='uses' v='org.hibernate.search.annotations,org.hibernate.search,org.hibernate.search.bridge,org.hibernate.search.bridge.builtin.impl,org.hibernate.annotations.common,org.hibernate.annotations.common.reflection,org.hibernate.search.bridge.builtin'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=hibernate-search)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host hibernate-search
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avro)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.avro ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avro.generic)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.avro.generic ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avro.io)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.avro.io ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avro.util)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.avro.util ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.standard)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.standard ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.store)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.store ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.handler)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.handler ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.util.plugin)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.util.plugin ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.annotationfactory)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.annotationfactory
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection.java)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection.java
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.util)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.util ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jboss.logging ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jgroups)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.jgroups
    </require>
  </resource>
  <resource id='hibernate-search-orm/4.1.0' presentationname='hibernate-search-orm' symbolicname='hibernate-search-orm' uri='hibernate-search-orm-4.1.0.Final.jar' version='4.1.0'>
    <size>
      123372
    </size>
    <capability name='fragment'>
      <p n='host' v='hibernate-search'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='hibernate-search'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hibernate-search-orm'/>
      <p n='symbolicname' v='hibernate-search-orm'/>
      <p n='version' t='version' v='4.1.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search'/>
      <p n='uses' v='org.hibernate.search.query.engine.spi,org.hibernate.search.query,org.hibernate,org.hibernate.transform,org.apache.lucene.search,org.hibernate.search.batchindexing,org.hibernate.search.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.jpa'/>
      <p n='uses' v='org.hibernate.search,org.apache.lucene.search,javax.persistence,org.hibernate.search.query.engine.spi,org.hibernate.search.query,org.hibernate,org.hibernate.transform,org.hibernate.search.jpa.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl.jms'/>
      <p n='uses' v='javax.jms,org.hibernate.search.util.logging.impl,org.hibernate.search.util.impl,org.hibernate.search.backend,org.hibernate.search.engine.spi,org.hibernate.search.indexes.spi,org.hibernate.search.indexes.serialization.spi,org.hibernate,org.hibernate.search.indexes.impl'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.util.impl,org.hibernate.jdbc,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.type,org.hibernate.search.engine.spi,org.hibernate.engine.transaction.spi,org.hibernate.loader.custom,org.hibernate.search.query.hibernate.impl,org.hibernate.engine.spi,org.hibernate.internal,org.hibernate.search.backend.impl,org.hibernate.engine.jdbc,org.hibernate.persister.entity,org.hibernate.engine.query.spi.sql,org.hibernate.event.spi,org.hibernate.engine.jdbc.spi,org.hibernate.engine.query.spi,org.hibernate.collection.spi,org.hibernate,org.hibernate.cache.spi,org.hibernate.stat,org.apache.lucene.search,org.hibernate.search.batchindexing,org.hibernate.search.util.logging.impl,org.hibernate.search.batchindexing.impl,org.hibernate.search.jmx'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.cfg.impl'/>
      <p n='uses' v='org.hibernate.mapping,org.hibernate.search.cfg.spi,org.hibernate.annotations.common.reflection,org.hibernate.search.engine.impl,org.hibernate.search.cfg,org.hibernate.cfg,org.hibernate.annotations.common.reflection.java,org.hibernate.search.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.util.impl'/>
      <p n='uses' v='org.hibernate.engine.spi,org.hibernate.event.service.spi,org.hibernate,org.hibernate.service.spi,org.hibernate.search.event.impl,org.hibernate.event.spi,org.hibernate.service,org.hibernate.search.engine.spi,org.hibernate.proxy,org.hibernate.search.backend.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.event.impl'/>
      <p n='uses' v='org.hibernate.search.cfg.spi,org.hibernate.search,org.hibernate.search.util.impl,org.hibernate.search.cfg.impl,org.hibernate.search.backend,org.hibernate.search.backend.spi,org.hibernate.search.engine.spi,org.hibernate.search.jmx,org.hibernate.engine.spi,org.hibernate.search.backend.impl,org.hibernate.search.spi,org.hibernate.search.util.logging.impl,org.hibernate.persister.entity,org.hibernate.cfg,org.hibernate.event.spi,org.hibernate.collection.spi,org.hibernate,org.hibernate.search.jmx.impl,javax.transaction,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.jmx'/>
      <p n='uses' v='javax.naming,org.hibernate.search,org.hibernate,org.hibernate.search.util.impl,org.hibernate.annotations.common.util'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.query.hibernate.impl'/>
      <p n='uses' v='org.hibernate.search.query.engine.spi,org.hibernate,org.hibernate.search.stat,org.hibernate.search.stat.spi,org.hibernate.search.engine.spi,org.hibernate.search.util.logging.impl,org.hibernate.criterion,org.apache.lucene.search,org.hibernate.search,org.hibernate.search.util.impl,org.hibernate.transform,org.hibernate.engine.spi,org.hibernate.engine.query.spi,org.hibernate.search.query,org.hibernate.internal,org.hibernate.annotations.common.util,org.hibernate.annotations.common,org.hibernate.metadata,org.hibernate.persister.entity,org.hibernate.type'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.jpa.impl'/>
      <p n='uses' v='org.hibernate.search,org.hibernate.search.jpa,org.hibernate,org.apache.lucene.search,javax.persistence.criteria,javax.persistence,javax.persistence.metamodel,org.hibernate.search.query.engine.spi,org.hibernate.transform,org.hibernate.exception,org.hibernate.hql.internal,org.hibernate.search.query,org.hibernate.dialect.lock'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.engine.impl'/>
      <p n='uses' v='org.hibernate.collection.spi,org.hibernate.engine.spi,org.hibernate.persister.collection,org.hibernate.search.spi,org.hibernate.search.util.impl,org.hibernate.search.backend.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.backend.impl'/>
      <p n='uses' v='javax.transaction,org.hibernate.engine.spi,org.hibernate,org.hibernate.action.spi,org.hibernate.search,org.hibernate.search.util.logging.impl,org.hibernate.service.jta.platform.spi,org.hibernate.search.event.impl,org.hibernate.event.spi,org.hibernate.service,org.hibernate.search.backend,org.hibernate.event.service.spi,org.hibernate.service.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.batchindexing.impl'/>
      <p n='uses' v='org.hibernate.search.batchindexing,org.hibernate.search.exception,org.hibernate.search.util.logging.impl,org.hibernate,org.hibernate.search.backend,org.hibernate.search.engine.spi,org.hibernate.search.backend.impl.batch,org.hibernate.search,org.hibernate.search.bridge,org.hibernate.search.util.impl,org.hibernate.engine.spi,org.hibernate.search.engine.impl,org.hibernate.search.bridge.spi,org.hibernate.search.bridge.util.impl,org.hibernate.search.spi,org.hibernate.annotations.common.util,org.hibernate.criterion,org.hibernate.transform,org.hibernate.service.spi,org.hibernate.service.jta.platform.spi,javax.transaction,org.hibernate.service,org.hibernate.engine.transaction.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.search.hcore.impl'/>
      <p n='uses' v='org.hibernate.event.service.spi,org.hibernate.search.util.logging.impl,org.hibernate.metamodel.source,org.hibernate.cfg,org.hibernate.search.event.impl,org.hibernate.event.spi,org.hibernate.service,org.hibernate.engine.spi,org.hibernate.service.spi,org.hibernate.internal.util.config,org.hibernate.integrator.spi'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=hibernate-search)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host hibernate-search
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.criteria ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.metamodel ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.action.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.action.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.reflection.java)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.reflection.java
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.annotations.common.util)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.annotations.common.util ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cache.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cache.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.cfg ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.collection.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.collection.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.criterion)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.criterion ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.dialect.lock)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.dialect.lock ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.jdbc)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.jdbc ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.jdbc.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.jdbc.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.query.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.query.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.query.spi.sql)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.query.spi.sql ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine.transaction.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.engine.transaction.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.service.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.event.service.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.event.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.exception)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.exception ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.hql.internal)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.hql.internal ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.integrator.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.integrator.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.internal.util.config)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.internal.util.config ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.jdbc)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.jdbc ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.loader.custom)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.loader.custom ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.mapping)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.mapping ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metadata)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metadata ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.metamodel.source)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.metamodel.source ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.persister.collection)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.persister.collection ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.persister.entity)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.persister.entity ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.proxy)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.proxy ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.backend)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.backend ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.backend.impl.batch)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.backend.impl.batch ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.backend.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.backend.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.batchindexing)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.batchindexing ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.bridge)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.bridge ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.bridge.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.bridge.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.bridge.util.impl)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.bridge.util.impl ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.cfg)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.cfg ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.cfg.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.cfg.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.engine.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.engine.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.exception)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.exception ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.indexes.impl)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.indexes.impl ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.indexes.serialization.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.indexes.serialization.spi
       ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.indexes.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.indexes.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.jmx.impl)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.jmx.impl ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.query)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.query ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.query.engine.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.query.engine.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.stat)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.stat ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.stat.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.stat.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.search.util.logging.impl)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.search.util.logging.impl ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.jta.platform.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.jta.platform.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.service.spi)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.service.spi ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.stat)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.stat ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.transform)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.transform ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.type)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hibernate.type ;version=[4.1.0,5.0.0)
    </require>
  </resource>
  <resource id='jackson-core-asl/1.7.3' presentationname='Jackson JSON processor' symbolicname='jackson-core-asl' uri='jackson-core-asl-1.7.3.jar' version='1.7.3'>
    <size>
      207430
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jackson JSON processor'/>
      <p n='symbolicname' v='jackson-core-asl'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.io'/>
      <p n='uses' v='org.codehaus.jackson.util,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.sym'/>
      <p n='uses' v='org.codehaus.jackson.util'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.util'/>
      <p n='uses' v='org.codehaus.jackson.io,org.codehaus.jackson.impl,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.annotate'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.impl'/>
      <p n='uses' v='org.codehaus.jackson.io,org.codehaus.jackson.sym,org.codehaus.jackson.util,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson'/>
      <p n='uses' v='org.codehaus.jackson.sym,org.codehaus.jackson.annotate,org.codehaus.jackson.impl,org.codehaus.jackson.type,org.codehaus.jackson.io,org.codehaus.jackson.util'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.annotate ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.impl)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.impl ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.io)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.io ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.sym)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.sym ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.type)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.type ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.util)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.util ;version=1.7.3
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5)(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5)(ee=JavaSE-1.6))
    </require>
  </resource>
  <resource id='jackson-mapper-asl/1.7.3' presentationname='Data mapper for Jackson JSON processor' symbolicname='jackson-mapper-asl' uri='jackson-mapper-asl-1.7.3.jar' version='1.7.3'>
    <size>
      625229
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Data mapper for Jackson JSON processor'/>
      <p n='symbolicname' v='jackson-mapper-asl'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.schema'/>
      <p n='uses' v='org.codehaus.jackson.node,org.codehaus.jackson.map,org.codehaus.jackson.annotate,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.deser.impl'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson.map.annotate,org.codehaus.jackson.map.deser,org.codehaus.jackson,org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.exc'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.annotate'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson.annotate'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.ser.impl'/>
      <p n='uses' v='org.codehaus.jackson.schema,org.codehaus.jackson.map.annotate,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.node,org.codehaus.jackson.map,org.codehaus.jackson,org.codehaus.jackson.map.ser'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.type'/>
      <p n='uses' v='org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.module'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson.map.type,org.codehaus.jackson,org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.node'/>
      <p n='uses' v='org.codehaus.jackson.io,org.codehaus.jackson.map,org.codehaus.jackson.util,org.codehaus.jackson.impl,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map'/>
      <p n='uses' v='org.codehaus.jackson.schema,org.codehaus.jackson.map.annotate,org.codehaus.jackson.annotate,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.io,org.codehaus.jackson.node,org.codehaus.jackson.map.deser,org.codehaus.jackson.util,org.codehaus.jackson.map.introspect,org.codehaus.jackson.map.jsontype,org.codehaus.jackson.map.util,org.codehaus.jackson,org.codehaus.jackson.map.ser,org.codehaus.jackson.map.jsontype.impl'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.deser'/>
      <p n='uses' v='org.codehaus.jackson.map.exc,org.codehaus.jackson.map.annotate,org.codehaus.jackson.annotate,org.codehaus.jackson.node,org.codehaus.jackson.map,org.codehaus.jackson.map.introspect,org.codehaus.jackson.map.jsontype,org.codehaus.jackson.map.util,org.codehaus.jackson.map.deser.impl,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.io,org.codehaus.jackson.util,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.introspect'/>
      <p n='uses' v='org.codehaus.jackson.map.annotate,org.codehaus.jackson.map.ser.impl,org.codehaus.jackson.annotate,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.map,org.codehaus.jackson.map.jsontype,org.codehaus.jackson.map.util,org.codehaus.jackson.map.jsontype.impl'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.jsontype'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson.annotate,org.codehaus.jackson.map.introspect,org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.util'/>
      <p n='uses' v='org.codehaus.jackson.io,org.codehaus.jackson.map,org.codehaus.jackson.map.type,org.codehaus.jackson.map.introspect,org.codehaus.jackson,org.codehaus.jackson.type'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.jsontype.impl'/>
      <p n='uses' v='org.codehaus.jackson.annotate,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.map,org.codehaus.jackson.util,org.codehaus.jackson.map.introspect,org.codehaus.jackson.map.jsontype,org.codehaus.jackson,org.codehaus.jackson.map.util'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.jackson.map.ser'/>
      <p n='uses' v='org.codehaus.jackson.map.annotate,org.codehaus.jackson.annotate,org.codehaus.jackson.node,org.codehaus.jackson.map,org.codehaus.jackson.map.introspect,org.codehaus.jackson.map.jsontype,org.codehaus.jackson.map.util,org.codehaus.jackson.schema,org.codehaus.jackson.map.ser.impl,org.codehaus.jackson.map.type,org.codehaus.jackson.type,org.codehaus.jackson.io,org.codehaus.jackson.util,org.codehaus.jackson'/>
      <p n='version' t='version' v='1.7.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.annotate ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.impl)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.impl ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.io)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.io ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.type)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.type ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.util)(version&gt;=1.7.3))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.jackson.util ;version=1.7.3
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5)(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5)(ee=JavaSE-1.6))
    </require>
  </resource>
  <resource id='javassist/3.15.0' presentationname='javassist' symbolicname='javassist' uri='javassist-3.15.0-GA.jar' version='3.15.0'>
    <size>
      655020
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javassist'/>
      <p n='symbolicname' v='javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.tools.rmi'/>
      <p n='uses' v='javassist,javassist.tools.web'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.convert'/>
      <p n='uses' v='javassist.bytecode,javassist,javassist.bytecode.analysis'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.bytecode'/>
      <p n='uses' v='javassist.bytecode.annotation,javassist,javassist.bytecode.stackmap'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist'/>
      <p n='uses' v='javassist.compiler,javassist.bytecode,javassist.convert,javassist.expr,javassist.bytecode.annotation,javassist.compiler.ast'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.util.proxy'/>
      <p n='uses' v='javassist.bytecode,javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.expr'/>
      <p n='uses' v='javassist.bytecode,javassist,javassist.compiler,javassist.compiler.ast'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.bytecode.annotation'/>
      <p n='uses' v='javassist.bytecode,javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.scopedpool'/>
      <p n='uses' v='javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.tools.web'/>
      <p n='uses' v='javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.tools'/>
      <p n='uses' v='javassist.bytecode,javassist,javassist.bytecode.analysis'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.bytecode.stackmap'/>
      <p n='uses' v='javassist.bytecode,javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.tools.reflect'/>
      <p n='uses' v='javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.compiler'/>
      <p n='uses' v='javassist.bytecode,javassist,javassist.compiler.ast'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.runtime'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.util'/>
      <p n='uses' v='com.sun.jdi.event,com.sun.jdi.request,com.sun.jdi.connect,com.sun.jdi'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.compiler.ast'/>
      <p n='uses' v='javassist.compiler,javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javassist.bytecode.analysis'/>
      <p n='uses' v='javassist.bytecode,javassist'/>
      <p n='version' t='version' v='3.15.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.jdi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.jdi
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.jdi.connect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.jdi.connect
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.jdi.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.jdi.event
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.jdi.request)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.jdi.request
    </require>
  </resource>
  <resource id='jcl.over.slf4j/1.6.4' presentationname='jcl-over-slf4j' symbolicname='jcl.over.slf4j' uri='jcl-over-slf4j-1.6.4.jar' version='1.6.4'>
    <description>
      JCL 1.1.1 implementation over SLF4J
    </description>
    <size>
      17308
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='jcl-over-slf4j'/>
      <p n='symbolicname' v='jcl.over.slf4j'/>
      <p n='version' t='version' v='1.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.4))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.4
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.4))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=1.6.4
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='log4j.over.slf4j/1.6.4' presentationname='log4j-over-slf4j' symbolicname='log4j.over.slf4j' uri='log4j-over-slf4j-1.6.4.jar' version='1.6.4'>
    <description>
      Log4j implemented over SLF4J
    </description>
    <size>
      20639
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='1'/>
      <p n='presentationname' v='log4j-over-slf4j'/>
      <p n='symbolicname' v='log4j.over.slf4j'/>
      <p n='version' t='version' v='1.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j'/>
      <p n='version' t='version' v='1.2.16'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.helpers)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.helpers ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=1.6.0
    </require>
  </resource>
  <resource id='lucene-core/3.5.0' presentationname='lucene-core' symbolicname='lucene-core' uri='lucene-analyzers-3.5.0.jar' version='3.5.0'>
    <size>
      882538
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-core'/>
      <p n='symbolicname' v='lucene-core'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.ca'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.ru'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.ro'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.wikipedia'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.it'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.fr,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.in'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.br'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.no'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.bg'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.fr'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.nl'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.analysis.miscellaneous,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.sv'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.fa'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.ar,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.tartarus.snowball'/>
      <p n='uses' v='org.apache.lucene.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.fi'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.el'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.compound'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.compound.hyphenation,org.xml.sax'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.en'/>
      <p n='uses' v='org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.ar'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.path'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.es'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.eu'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.th'/>
      <p n='uses' v='org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.snowball'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.en,org.apache.lucene.analysis.tr,org.apache.lucene.analysis.tokenattributes,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.position'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.tr'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.gl'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.pt'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.sinks'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.compound.hyphenation'/>
      <p n='uses' v='org.xml.sax,javax.xml.parsers,org.xml.sax.helpers'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.ngram'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.hi'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.util,org.apache.lucene.analysis.in,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.synonym'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.store,org.apache.lucene.util.fst'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.payloads'/>
      <p n='uses' v='org.apache.lucene.index,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.cjk'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.hu'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.miscellaneous'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.index'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.hy'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.snowball,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.shingle'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.payloads,org.apache.lucene.index,org.apache.lucene.analysis.miscellaneous'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.reverse'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.lv'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.cz'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.de'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.da'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.query'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.util,org.apache.lucene.index'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.cn'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.tartarus.snowball.ext'/>
      <p n='uses' v='org.tartarus.snowball'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.hunspell'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.pt'/>
      <p n='uses' v='org.apache.lucene.analysis.snowball,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.id'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.analysis.standard,org.apache.lucene.util,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.standard)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.standard ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.store)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.store ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util.fst)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util.fst ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='lucene-grouping/3.5.0' presentationname='lucene-grouping' symbolicname='lucene-grouping' uri='lucene-grouping-3.5.0.jar' version='3.5.0'>
    <size>
      63248
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-grouping'/>
      <p n='symbolicname' v='lucene-grouping'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.grouping'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.search,org.apache.lucene.index'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-highlighter/3.5.0' presentationname='lucene-highlighter' symbolicname='lucene-highlighter' uri='lucene-highlighter-3.5.0.jar' version='3.5.0'>
    <size>
      89513
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-highlighter'/>
      <p n='symbolicname' v='lucene-highlighter'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.vectorhighlight'/>
      <p n='uses' v='org.apache.lucene.document,org.apache.lucene.search.highlight,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.regex,org.apache.lucene.util,org.apache.lucene.store,org.apache.lucene.queryParser,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.highlight'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.document,org.apache.lucene.index.memory,org.apache.lucene.search.spans'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index.memory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index.memory
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.queryParser)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.queryParser ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.regex)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search.regex
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.spans)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search.spans ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.store)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.store ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-memory/3.5.0' presentationname='lucene-memory' symbolicname='lucene-memory' uri='lucene-memory-3.5.0.jar' version='3.5.0'>
    <size>
      30776
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-memory'/>
      <p n='symbolicname' v='lucene-memory'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.index.memory'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.document'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-misc/3.5.0' presentationname='lucene-misc' symbolicname='lucene-misc' uri='lucene-misc-3.5.0.jar' version='3.5.0'>
    <size>
      60742
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-misc'/>
      <p n='symbolicname' v='lucene-misc'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.store'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.misc'/>
      <p n='uses' v='org.apache.lucene.store,org.apache.lucene.index,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.search'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.index'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.store,org.apache.lucene.search,org.apache.lucene.document,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-smartcn/3.5.0' presentationname='lucene-smartcn' symbolicname='lucene-smartcn' uri='lucene-smartcn-3.5.0.jar' version='3.5.0'>
    <size>
      3593791
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-smartcn'/>
      <p n='symbolicname' v='lucene-smartcn'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.cn.smart.hhmm'/>
      <p n='uses' v='org.apache.lucene.analysis.cn.smart'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.cn.smart'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.apache.lucene.analysis.cn.smart.hhmm'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-spatial/3.5.0' presentationname='lucene-spatial' symbolicname='lucene-spatial' uri='lucene-spatial-3.5.0.jar' version='3.5.0'>
    <size>
      58970
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-spatial'/>
      <p n='symbolicname' v='lucene-spatial'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial.geometry'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial.tier'/>
      <p n='uses' v='org.apache.lucene.spatial.geometry,org.apache.lucene.spatial.tier.projections,org.apache.lucene.search,org.apache.lucene.spatial.geometry.shape,org.apache.lucene.util,org.apache.lucene.index,org.apache.lucene.spatial,org.apache.lucene.spatial.geohash'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial.tier.projections'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial'/>
      <p n='uses' v='org.apache.lucene.spatial.geometry,org.apache.lucene.spatial.tier,org.apache.lucene.spatial.geometry.shape'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial.geometry.shape'/>
      <p n='uses' v='org.apache.lucene.spatial.geometry'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.spatial.geohash'/>
      <p n='uses' v='org.apache.lucene.spatial,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.spatial.tier'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-spellchecker/3.5.0' presentationname='lucene-spellchecker' symbolicname='lucene-spellchecker' uri='lucene-spellchecker-3.5.0.jar' version='3.5.0'>
    <size>
      64353
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-spellchecker'/>
      <p n='symbolicname' v='lucene-spellchecker'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.suggest.fst'/>
      <p n='uses' v='org.apache.lucene.search.suggest,org.apache.lucene.util.fst,org.apache.lucene.util,org.apache.lucene.store,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.suggest.jaspell'/>
      <p n='uses' v='org.apache.lucene.search.suggest,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.suggest'/>
      <p n='uses' v='org.apache.lucene.search.spell,org.apache.lucene.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.spell'/>
      <p n='uses' v='org.apache.lucene.index,org.apache.lucene.util,org.apache.lucene.store,org.apache.lucene.document,org.apache.lucene.search,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.search.suggest.tst'/>
      <p n='uses' v='org.apache.lucene.search.suggest,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.store)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.store ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util.fst)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util.fst ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='lucene-stempel/3.5.0' presentationname='lucene-stempel' symbolicname='lucene-stempel' uri='lucene-stempel-3.5.0.jar' version='3.5.0'>
    <size>
      511325
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='lucene-stempel'/>
      <p n='symbolicname' v='lucene-stempel'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.pl'/>
      <p n='uses' v='org.apache.lucene.util,org.egothor.stemmer,org.apache.lucene.analysis,org.apache.lucene.analysis.stempel,org.apache.lucene.analysis.standard'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.egothor.stemmer'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.lucene.analysis.stempel'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.analysis,org.egothor.stemmer'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.standard)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.standard ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint/0.3.0' presentationname='Apache Aries Blueprint Bundle' symbolicname='org.apache.aries.blueprint' uri='org.apache.aries.blueprint-0.3.0.jar' version='0.3.0'>
    <description>
      This bundle contains the standalone implementation along with
       the API.        It's composed of the blueprint-api, blueprint-core
       and blueprint-cm modules.
    </description>
    <size>
      370426
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Bundle'/>
      <p n='symbolicname' v='org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.compendium.cm'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.slf4j,org.w3c.dom'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.compendium.cm'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.cm,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.container,org.apache.aries.blueprint.ext,org.w3c.dom,org.apache.aries.blueprint.mutable'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.namespace'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.reflect,org.apache.aries.blueprint.container,org.osgi.framework,javax.xml.validation,org.slf4j,org.xml.sax,javax.xml.transform,org.osgi.util.tracker,javax.xml.transform.stream'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.blueprint,org.apache.aries.blueprint.container,org.apache.aries.blueprint.di,org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.nls'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.container'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.di,org.apache.aries.proxy,org.apache.aries.blueprint.proxy,org.apache.aries.blueprint.namespace,org.apache.aries.blueprint.reflect,javax.xml.validation,org.osgi.util.tracker,org.osgi.service.event,org.apache.aries.util,org.apache.aries.util.tracker,org.apache.aries.blueprint.annotation.service,org.apache.aries.quiesce.manager,org.apache.aries.quiesce.participant,org.xml.sax,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom,javax.xml.transform,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.di,org.osgi.framework,org.osgi.service.blueprint.container,org.w3c.dom'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.di'/>
      <p n='uses' v='org.apache.aries.blueprint.container,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.apache.aries.blueprint.ext,org.apache.aries.blueprint,org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.reflect'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.proxy'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.proxy,org.slf4j'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' multiple='true' name='service' optional='false'>
      Import Service org.osgi.service.cm.ConfigurationAdmin
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.internal.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.internal.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.apache.aries.jndi/0.3.0' presentationname='Apache Aries JNDI Bundle' symbolicname='org.apache.aries.jndi' uri='org.apache.aries.jndi-0.3.0.jar' version='0.3.0'>
    <description>
      This bundle contains the core JNDI along with the OSGi url
       handler.        It's composed of the jndi-api, jndi-core and
       jndi-url modules.
    </description>
    <size>
      102538
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries JNDI Bundle'/>
      <p n='symbolicname' v='org.apache.aries.jndi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.jndi'/>
      <p n='uses' v='javax.naming.directory,javax.naming'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jndi.urls'/>
      <p n='uses' v='javax.naming,javax.naming.spi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jndi.spi'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.ldap
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jndi.spi)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jndi.spi ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jndi.urls)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jndi.urls ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.jndi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.jndi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.blueprint.aries/0.3.0' presentationname='Aries JPA Container blueprint integration for Aries blueprint' symbolicname='org.apache.aries.jpa.blueprint.aries' uri='org.apache.aries.jpa.blueprint.aries-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      20745
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container blueprint integration for Aries blueprint'/>
      <p n='symbolicname' v='org.apache.aries.jpa.blueprint.aries'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.jpa.container.context.PersistenceContextProvider)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.jpa.container.context.PersistenceContextProvider
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.mutable ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.context)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.context ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.container/0.3.0' presentationname='Aries JPA Container' symbolicname='org.apache.aries.jpa.container' uri='org.apache.aries.jpa.container-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      86889
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container'/>
      <p n='symbolicname' v='org.apache.aries.jpa.container'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.context'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.parsing'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container'/>
      <p n='uses' v='javax.persistence.spi,org.apache.aries.jpa.container.parsing,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.criteria ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.metamodel ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.parsing)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.parsing ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.apache.aries.jpa.container.context/0.3.0' presentationname='Aries JPA Container Managed Contexts' symbolicname='org.apache.aries.jpa.container.context' uri='org.apache.aries.jpa.container.context-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      39647
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Aries JPA Container Managed Contexts'/>
      <p n='symbolicname' v='org.apache.aries.jpa.container.context'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jpa.container.context'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.criteria)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.criteria ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.metamodel)(version&gt;=1.1.0)(!(version&gt;=2.1.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.metamodel ;version=[1.1.0,2.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.jpa.container.context)(version&gt;=0.1.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.jpa.container.context ;version=[0.1.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[0.2.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.proxy/0.3.0' presentationname='Apache Aries Proxy Bundle' symbolicname='org.apache.aries.proxy' uri='org.apache.aries.proxy-0.3.0.jar' version='0.3.0'>
    <description>
      This bundle contains the Apache Aries Proxy Service.
    </description>
    <size>
      40726
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Proxy Bundle'/>
      <p n='symbolicname' v='org.apache.aries.proxy'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy'/>
      <p n='uses' v='org.apache.aries.util.nls,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.nls)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.nls ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.objectweb.asm
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm.commons)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.objectweb.asm.commons
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.quiesce.api/0.3.0' presentationname='Apache Aries Quiesce API' symbolicname='org.apache.aries.quiesce.api' uri='org.apache.aries.quiesce.api-0.3.0.jar' version='0.3.0'>
    <description>
      Quiesce API.
    </description>
    <size>
      9276
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Quiesce API'/>
      <p n='symbolicname' v='org.apache.aries.quiesce.api'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.quiesce.manager'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.quiesce.participant'/>
      <p n='uses' v='org.apache.aries.quiesce.manager,org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.quiesce.manager/0.3.0' presentationname='Apache Aries Quiesce Manager' symbolicname='org.apache.aries.quiesce.manager' uri='org.apache.aries.quiesce.manager-0.3.0.jar' version='0.3.0'>
    <description>
      Quiesce Manager.
    </description>
    <size>
      19900
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.quiesce.manager.QuiesceManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Quiesce Manager'/>
      <p n='symbolicname' v='org.apache.aries.quiesce.manager'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.quiesce.manager ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.3.0)(!(version&gt;=0.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.quiesce.participant ;version=[0.3.0,0.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.blueprint/0.3.0' presentationname='Apache Aries Transaction Blueprint' symbolicname='org.apache.aries.transaction.blueprint' uri='org.apache.aries.transaction.blueprint-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      37357
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Blueprint'/>
      <p n='symbolicname' v='org.apache.aries.transaction.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.transaction.exception'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(service=javax.transaction.TransactionManager)' multiple='true' name='service' optional='false'>
      Import Service javax.transaction.TransactionManager
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[0.3.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.manager/0.3.0' presentationname='Apache Aries Transaction Manager' symbolicname='org.apache.aries.transaction.manager' uri='org.apache.aries.transaction.manager-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      175684
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='javax.transaction.TransactionManager'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.transaction.TransactionSynchronizationRegistry'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.transaction.UserTransaction'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.geronimo.transaction.manager.RecoverableTransactionManager'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Manager'/>
      <p n='symbolicname' v='org.apache.aries.transaction.manager'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.log'/>
      <p n='uses' v='javax.transaction.xa,org.apache.geronimo.transaction.manager,org.slf4j'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.manager'/>
      <p n='uses' v='javax.transaction,javax.transaction.xa,org.slf4j,javax.resource.spi,org.apache.geronimo.transaction.log'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction'/>
      <p n='uses' v='javax.transaction'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.jta)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.jta ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support ;version=[2.5.0,4.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.transaction.wrappers/0.3.0' presentationname='Apache Aries Transaction Enlisting JDBC Datasource' symbolicname='org.apache.aries.transaction.wrappers' uri='org.apache.aries.transaction.wrappers-0.3.0.jar' version='0.3.0'>
    <description>
      Aries top-level parent pom
    </description>
    <size>
      18015
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Transaction Enlisting JDBC Datasource'/>
      <p n='symbolicname' v='org.apache.aries.transaction.wrappers'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.util/0.3.0' presentationname='Apache Aries Util' symbolicname='org.apache.aries.util' uri='org.apache.aries.util-0.3.0.jar' version='0.3.0'>
    <description>
      This bundle contains the OSGi common util for Apache Aries
    </description>
    <size>
      44407
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Util'/>
      <p n='symbolicname' v='org.apache.aries.util'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.tracker'/>
      <p n='uses' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.framework.launch,org.osgi.service.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.nls'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.internal.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.internal.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.launch)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.launch ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.commons.codec/1.5.0' presentationname='Commons Codec' symbolicname='org.apache.commons.codec' uri='commons-codec-1.5.jar' version='1.5.0'>
    <description>
      The codec package contains simple encoder and decoders for
           various formats such as Base64 and Hexadecimal.  In addition
       to these     widely used encoders and decoders, the codec
       package also maintains a     collection of phonetic encoding
       utilities.
    </description>
    <size>
      73098
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/codec/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Codec'/>
      <p n='symbolicname' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.net'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.digest'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.binary'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.csv/1.0.0.SNAPSHOT' presentationname='Commons CSV (Sandbox)' symbolicname='org.apache.commons.csv' uri='org.apache.commons.csv-1.0.0.SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>
      The Apache Software Foundation provides support for the Apache
       community of open-source software projects.    The Apache
       projects are characterized by a collaborative, consensus based
       development process, an open and    pragmatic software license,
       and a desire to create high quality software that leads the
       way in its field.    We consider ourselves not simply a group
       of projects sharing a server, but rather a community of developers
          and users.
    </description>
    <size>
      27361
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/sandbox/csv/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons CSV (Sandbox)'/>
      <p n='symbolicname' v='org.apache.commons.csv'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.csv.writer'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.csv'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.io/1.4.0' presentationname='Apache Commons IO Bundle' symbolicname='org.apache.commons.io' uri='commons-io-1.4.jar' version='1.4.0'>
    <size>
      109043
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons IO Bundle'/>
      <p n='symbolicname' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.comparator)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.comparator ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.filefilter)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.filefilter ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.input)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.input ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=1.4.0
    </require>
  </resource>
  <resource id='org.apache.commons.lang/2.4.0' presentationname='Commons Lang' symbolicname='org.apache.commons.lang' uri='commons-lang-2.4.jar' version='2.4.0'>
    <description>
      Commons Lang, a package of Java utility classes for the   
           classes that are in java.lang's hierarchy, or are considered
       to be so        standard as to justify existence in java.lang.
    </description>
    <size>
      261809
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/lang/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Lang'/>
      <p n='symbolicname' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.math'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enums'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.builder'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.exception'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enum'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.mutable'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.text'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.time'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.builder)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.builder ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.enum)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.enum ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.enums)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.enums ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.exception)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.exception ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.math)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.math ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.mutable)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.mutable ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.text)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.text ;version=2.4.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.time)(version&gt;=2.4.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.time ;version=2.4.0
    </require>
  </resource>
  <resource id='org.apache.servicemix.specs.jsr303-api-1.0.0/1.6.0' presentationname='Apache ServiceMix :: Specs :: JSR-303 API 1.0.0' symbolicname='org.apache.servicemix.specs.jsr303-api-1.0.0' uri='org.apache.servicemix.specs.jsr303-api-1.0.0-1.6.0.jar' version='1.6.0'>
    <description>
      This pom provides project information that is common to all
       ServiceMix branches.
    </description>
    <size>
      65539
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache ServiceMix :: Specs :: JSR-303 API 1.0.0'/>
      <p n='symbolicname' v='org.apache.servicemix.specs.jsr303-api-1.0.0'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation.spi'/>
      <p n='uses' v='javax.validation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation.constraints'/>
      <p n='uses' v='javax.validation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation'/>
      <p n='uses' v='javax.validation.metadata,javax.validation.spi,javax.validation.bootstrap'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation.bootstrap'/>
      <p n='uses' v='javax.validation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation.groups'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.validation.metadata'/>
      <p n='uses' v='javax.validation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id='org.hibernate.validator/4.2.0.Final' presentationname='Hibernate Validator' symbolicname='org.hibernate.validator' uri='hibernate-validator-4.2.0.Final.jar' version='4.2.0.Final'>
    <description>
      Hibernate's Bean Validation (JSR-303) reference implementation.
    </description>
    <size>
      366592
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Hibernate Validator'/>
      <p n='symbolicname' v='org.hibernate.validator'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator'/>
      <p n='uses' v='javax.validation,javax.validation.spi,org.hibernate.validator.cfg,org.hibernate.validator.resourceloading'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.constraints'/>
      <p n='uses' v='javax.validation,javax.validation.constraints'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.cfg'/>
      <p n='uses' v='javax.validation,org.hibernate.validator.cfg.context'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.cfg.context'/>
      <p n='uses' v='org.hibernate.validator.cfg'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.cfg.defs'/>
      <p n='uses' v='org.hibernate.validator.cfg,javax.validation.constraints,org.hibernate.validator.constraints'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.group'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.messageinterpolation'/>
      <p n='uses' v='javax.validation.metadata,javax.validation,org.hibernate.validator.resourceloading'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.method'/>
      <p n='uses' v='javax.validation,org.hibernate.validator.method.metadata'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.method.metadata'/>
      <p n='uses' v='javax.validation.metadata'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hibernate.validator.resourceloading'/>
      <p n='uses' v='org.slf4j'/>
      <p n='version' t='version' v='4.2.0.Final'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.bootstrap)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.bootstrap ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.constraints)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.constraints ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.groups)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.groups ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.spi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.validation.spi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup)(version&gt;=1.5.2)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jsoup ;version=[1.5.2,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup.safety)(version&gt;=1.5.2)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jsoup.safety ;version=[1.5.2,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.6)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.6,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.jboss.logging.jboss-logging/3.1.0.GA' presentationname='JBoss Logging 3' symbolicname='org.jboss.logging.jboss-logging' uri='jboss-logging-3.1.0.GA.jar' version='3.1.0.GA'>
    <description>
      The JBoss Logging Framework
    </description>
    <size>
      60768
    </size>
    <license>
      http://www.gnu.org/licenses/lgpl-2.1.txt
    </license>
    <documentation>
      http://www.jboss.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JBoss Logging 3'/>
      <p n='symbolicname' v='org.jboss.logging.jboss-logging'/>
      <p n='version' t='version' v='3.1.0.GA'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jboss.logging'/>
      <p n='uses' v='org.jboss.logmanager,org.apache.log4j,org.slf4j.spi,org.slf4j'/>
      <p n='version' t='version' v='3.1.0.GA'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logging)(version&gt;=3.1.0))' multiple='false' name='package' optional='false'>
      Import package org.jboss.logging ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.logmanager)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jboss.logmanager
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' multiple='false' name='package' optional='true'>
      Import package org.slf4j ;version=1.6.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.0))' multiple='false' name='package' optional='true'>
      Import package org.slf4j.spi ;version=1.6.0
    </require>
  </resource>
  <resource id='org.objectweb.asm.all/3.2.0' presentationname='ASM all classes' symbolicname='org.objectweb.asm.all' uri='asm-all-3.2.jar' version='3.2.0'>
    <size>
      203417
    </size>
    <documentation>
      http://asm.objectweb.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ASM all classes'/>
      <p n='symbolicname' v='org.objectweb.asm.all'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.signature'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.commons'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree.analysis'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.util'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.xml'/>
      <p n='version' t='version' v='3.2.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.springframework.aop/3.0.6.RELEASE' presentationname='Spring AOP' symbolicname='org.springframework.aop' uri='org.springframework.aop-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      321428
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring AOP'/>
      <p n='symbolicname' v='org.springframework.aop'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.aspectj.bridge,org.aspectj.lang,org.aspectj.lang.reflect,org.aspectj.runtime.internal,org.aspectj.weaver.ast,org.aspectj.weaver.internal.tools,org.aspectj.weaver.reflect,org.aspectj.weaver.tools,org.springframework.aop,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.aspectj.lang.reflect,org.springframework.aop,org.springframework.aop.aspectj,org.springframework.aop.aspectj.autoproxy,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj.autoproxy'/>
      <p n='uses' v='org.aspectj.util,org.springframework.aop,org.springframework.aop.framework.autoproxy'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.config'/>
      <p n='uses' v='org.springframework.aop.aspectj,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework'/>
      <p n='uses' v='net.sf.cglib.proxy,org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.framework.adapter,org.springframework.beans,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.adapter'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.autoproxy'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.framework.adapter,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.autoproxy.target'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework.autoproxy,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.interceptor'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.apache.commons.logging,org.springframework.aop,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.core,org.springframework.core.task,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.scope'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.support'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.support.annotation'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.target'/>
      <p n='uses' v='org.apache.commons.pool,org.springframework.aop,org.springframework.aop.support,org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.target.dynamic'/>
      <p n='uses' v='org.springframework.aop,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.jamonapi)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.jamonapi ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.transform.impl)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.transform.impl ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool.impl ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang.annotation)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang.annotation ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang.reflect)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang.reflect ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.runtime.internal)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.runtime.internal ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.util)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.util ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.ast)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.ast ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.internal.tools)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.internal.tools ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.reflect)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.reflect ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.tools)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.tools ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.asm/3.0.6.RELEASE' presentationname='Spring ASM' symbolicname='org.springframework.asm' uri='spring-asm-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      53082
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring ASM'/>
      <p n='symbolicname' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.commons'/>
      <p n='uses' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.signature'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
  </resource>
  <resource id='org.springframework.asm/3.1.1.RELEASE' presentationname='Spring ASM' symbolicname='org.springframework.asm' uri='org.springframework.asm-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      53081
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring ASM'/>
      <p n='symbolicname' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.commons'/>
      <p n='uses' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.signature'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
  </resource>
  <resource id='org.springframework.beans/3.0.6.RELEASE' presentationname='Spring Beans' symbolicname='org.springframework.beans' uri='spring-beans-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      556590
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Beans'/>
      <p n='symbolicname' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.annotation'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory'/>
      <p n='uses' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.annotation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.wiring,org.springframework.core,org.springframework.core.type'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.config'/>
      <p n='uses' v='javax.inject,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.core,org.springframework.core.convert,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.parsing'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.serviceloader'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.support'/>
      <p n='uses' v='javax.inject,net.sf.cglib.proxy,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.core.convert,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.wiring'/>
      <p n='uses' v='org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.xml'/>
      <p n='uses' v='javax.xml.parsers,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.core.io,org.springframework.core.io.support,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.propertyeditors'/>
      <p n='uses' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.inject ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.beans/3.1.1.RELEASE' presentationname='Spring Beans' symbolicname='org.springframework.beans' uri='org.springframework.beans-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      589824
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Beans'/>
      <p n='symbolicname' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.annotation'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory'/>
      <p n='uses' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.annotation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.wiring,org.springframework.core,org.springframework.core.type'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.config'/>
      <p n='uses' v='javax.inject,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.core,org.springframework.core.convert,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.parsing'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.serviceloader'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.support'/>
      <p n='uses' v='javax.inject,net.sf.cglib.proxy,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.core.convert,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.wiring'/>
      <p n='uses' v='org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.xml'/>
      <p n='uses' v='javax.xml.parsers,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.propertyeditors'/>
      <p n='uses' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core.env,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.inject ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.context/3.0.6.RELEASE' presentationname='Spring Context' symbolicname='org.springframework.context' uri='spring-context-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      670258
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context'/>
      <p n='symbolicname' v='org.springframework.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.context,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.annotation'/>
      <p n='uses' v='net.sf.cglib.proxy,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.support,org.springframework.core.io,org.springframework.core.type,org.springframework.core.type.classreading,org.springframework.core.type.filter,org.springframework.stereotype,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.event'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.expression'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.i18n'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.support'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.weaving'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.access'/>
      <p n='uses' v='javax.ejb,javax.naming,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.config'/>
      <p n='uses' v='org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.interceptor'/>
      <p n='uses' v='javax.annotation,javax.ejb,javax.interceptor,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.beans.factory.annotation'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.support'/>
      <p n='uses' v='javax.ejb,javax.jms,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format'/>
      <p n='uses' v='org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.annotation'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime'/>
      <p n='uses' v='org.springframework.format'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime.joda'/>
      <p n='uses' v='org.joda.time,org.joda.time.format,org.springframework.context,org.springframework.core.convert.converter,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.number'/>
      <p n='uses' v='org.springframework.context,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.core.convert,org.springframework.core.convert.converter,org.springframework.core.convert.support,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.glassfish'/>
      <p n='uses' v='javax.persistence.spi,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.jboss'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.oc4j'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.weblogic'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.access'/>
      <p n='uses' v='javax.management,javax.management.remote,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx,org.springframework.jmx.export.assembler,org.springframework.jmx.export.naming,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.annotation'/>
      <p n='uses' v='org.springframework.jmx.export,org.springframework.jmx.export.metadata,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.assembler'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.metadata'/>
      <p n='uses' v='javax.management.modelmbean,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.naming'/>
      <p n='uses' v='javax.management,org.springframework.beans.factory,org.springframework.core.io,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.notification'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.jmx'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.support'/>
      <p n='uses' v='javax.management,javax.management.remote,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.rmi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.omg.CORBA,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi,org.springframework.remoting,org.springframework.remoting.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.soap'/>
      <p n='uses' v='javax.xml.namespace,org.springframework.remoting'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.support'/>
      <p n='uses' v='com.sun.net.httpserver,org.aopalliance.intercept,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.task'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.context.event,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.backportconcurrent'/>
      <p n='uses' v='edu.emory.mathcs.backport.java.util.concurrent,org.springframework.beans.factory,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.config'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.core.task,org.springframework.scheduling,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.support,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.timer'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.bsh'/>
      <p n='uses' v='bsh,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.groovy'/>
      <p n='uses' v='groovy.lang,org.springframework.beans,org.springframework.beans.factory,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.jruby'/>
      <p n='uses' v='org.jruby,org.jruby.ast,org.jruby.exceptions,org.jruby.runtime.builtin,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.support'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.target.dynamic,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.stereotype'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context'/>
      <p n='uses' v='org.springframework.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context.support'/>
      <p n='uses' v='org.springframework.context,org.springframework.ui.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.context.support,org.springframework.core,org.springframework.core.convert'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.beanvalidation'/>
      <p n='uses' v='javax.validation,javax.validation.metadata,org.hibernate.validator.resourceloading,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core.io,org.springframework.validation'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.support'/>
      <p n='uses' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bsh)(version&gt;=2.0.0.b4)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package bsh ;version=[2.0.0.b4,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package edu.emory.mathcs.backport.java.util.concurrent
       ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package groovy.lang ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=2.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ejb ;version=[2.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.interceptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.openmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.remote ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.spi ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.rmi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.bootstrap)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.bootstrap ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.asm)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.asm ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.loadtime ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.control)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.control ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.messageinterpolation)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.messageinterpolation
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.resourceloading)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.resourceloading ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time.format)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time.format ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.ast)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.ast ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.exceptions)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.exceptions ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.javasupport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.javasupport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime.builtin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime.builtin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.omg.CORBA ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework.adapter ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.interceptor)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.interceptor ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target.dynamic ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.converter)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.converter ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.classreading)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.classreading ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.filter)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.filter ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.context/3.1.1.RELEASE' presentationname='Spring Context' symbolicname='org.springframework.context' uri='org.springframework.context-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      831068
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context'/>
      <p n='symbolicname' v='org.springframework.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.annotation'/>
      <p n='uses' v='javax.annotation,org.springframework.beans.factory.annotation,org.springframework.cache,org.springframework.cache.interceptor,org.springframework.context.annotation,org.springframework.core.type'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.cache'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.cache.interceptor,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.ehcache'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.bootstrap,net.sf.ehcache.constructs.blocking,net.sf.ehcache.store,org.springframework.beans.factory,org.springframework.cache,org.springframework.cache.support,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.interceptor'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.cache,org.springframework.core,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.cache'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.context,org.springframework.jndi'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.annotation'/>
      <p n='uses' v='net.sf.cglib.proxy,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.support,org.springframework.core,org.springframework.core.annotation,org.springframework.core.env,org.springframework.core.io,org.springframework.core.type,org.springframework.core.type.classreading,org.springframework.core.type.filter,org.springframework.instrument.classloading,org.springframework.stereotype,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.event'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.expression'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.i18n'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.support'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.weaving'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.access'/>
      <p n='uses' v='javax.ejb,javax.naming,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.config'/>
      <p n='uses' v='org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.interceptor'/>
      <p n='uses' v='javax.annotation,javax.ejb,javax.interceptor,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.beans.factory.annotation'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.support'/>
      <p n='uses' v='javax.ejb,javax.jms,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format'/>
      <p n='uses' v='org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.annotation'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime'/>
      <p n='uses' v='org.springframework.format'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime.joda'/>
      <p n='uses' v='org.joda.time,org.joda.time.format,org.springframework.context,org.springframework.core.convert.converter,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.number'/>
      <p n='uses' v='org.springframework.context,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.core.convert,org.springframework.core.convert.converter,org.springframework.core.convert.support,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.glassfish'/>
      <p n='uses' v='javax.persistence.spi,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.jboss'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.oc4j'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.weblogic'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.websphere'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.access'/>
      <p n='uses' v='javax.management,javax.management.remote,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx,org.springframework.jmx.export.assembler,org.springframework.jmx.export.naming,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.annotation'/>
      <p n='uses' v='org.springframework.jmx.export,org.springframework.jmx.export.metadata,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.assembler'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.metadata'/>
      <p n='uses' v='javax.management.modelmbean,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.naming'/>
      <p n='uses' v='javax.management,org.springframework.beans.factory,org.springframework.core.io,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.notification'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.support'/>
      <p n='uses' v='javax.management,javax.management.remote,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core,org.springframework.core.env'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.jndi'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.rmi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.omg.CORBA,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi,org.springframework.remoting,org.springframework.remoting.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.soap'/>
      <p n='uses' v='javax.xml.namespace,org.springframework.remoting'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.support'/>
      <p n='uses' v='com.sun.net.httpserver,org.aopalliance.intercept,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.task'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.context,org.springframework.context.annotation,org.springframework.context.event,org.springframework.core,org.springframework.core.type,org.springframework.scheduling.config,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.backportconcurrent'/>
      <p n='uses' v='edu.emory.mathcs.backport.java.util.concurrent,org.springframework.beans.factory,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.config'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.core.task,org.springframework.scheduling,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.support,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.timer'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.bsh'/>
      <p n='uses' v='bsh,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.groovy'/>
      <p n='uses' v='groovy.lang,org.springframework.beans,org.springframework.beans.factory,org.springframework.scripting'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.jruby'/>
      <p n='uses' v='org.jruby,org.jruby.ast,org.jruby.exceptions,org.jruby.runtime.builtin,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.support'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.target.dynamic,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scripting'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.stereotype'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context'/>
      <p n='uses' v='org.springframework.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context.support'/>
      <p n='uses' v='org.springframework.context,org.springframework.ui.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.context.support,org.springframework.core,org.springframework.core.convert'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.annotation'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.beanvalidation'/>
      <p n='uses' v='javax.validation,javax.validation.metadata,org.aopalliance.intercept,org.hibernate.validator.resourceloading,org.springframework.aop.framework,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.validation'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.support'/>
      <p n='uses' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bsh)(version&gt;=2.0.0.b4)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package bsh ;version=[2.0.0.b4,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package edu.emory.mathcs.backport.java.util.concurrent
       ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package groovy.lang ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=2.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ejb ;version=[2.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.interceptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.openmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.remote ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.spi ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.rmi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.bootstrap)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.bootstrap ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.asm)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.asm ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.bootstrap)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.bootstrap ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.constructs.blocking)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.constructs.blocking ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.event)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.event ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.store)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.store ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=1.6.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.loadtime ;version=[1.6.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.control)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.control ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.messageinterpolation)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.messageinterpolation
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.method)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.method ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.resourceloading)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.resourceloading ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time.format)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time.format ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.ast)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.ast ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.exceptions)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.exceptions ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.javasupport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.javasupport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime.builtin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime.builtin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.omg.CORBA ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.config)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.config ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework.adapter ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.interceptor)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.interceptor ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target.dynamic ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.converter)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.converter ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.classreading)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.classreading ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.filter)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.filter ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.context.support/3.0.6.RELEASE' presentationname='Spring Context Support' symbolicname='org.springframework.context.support' uri='spring-context-support-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      101450
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context Support'/>
      <p n='symbolicname' v='org.springframework.context.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.ehcache'/>
      <p n='uses' v='net.sf.ehcache,net.sf.ehcache.bootstrap,net.sf.ehcache.constructs.blocking,net.sf.ehcache.store,org.springframework.beans.factory,org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail.javamail'/>
      <p n='uses' v='javax.activation,javax.mail,javax.mail.internet,org.springframework.beans.factory,org.springframework.core.io,org.springframework.mail'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.commonj'/>
      <p n='uses' v='commonj.timers,commonj.work,javax.naming,org.springframework.beans.factory,org.springframework.context,org.springframework.jndi,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.quartz'/>
      <p n='uses' v='javax.sql,org.quartz,org.quartz.impl.jdbcjobstore,org.quartz.simpl,org.quartz.spi,org.quartz.utils,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scheduling,org.springframework.transaction,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.freemarker'/>
      <p n='uses' v='freemarker.cache,freemarker.template,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.jasperreports'/>
      <p n='uses' v='net.sf.jasperreports.engine'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.velocity'/>
      <p n='uses' v='org.apache.commons.collections,org.apache.velocity.app,org.apache.velocity.exception,org.apache.velocity.runtime,org.apache.velocity.runtime.log,org.apache.velocity.runtime.resource,org.apache.velocity.runtime.resource.loader,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=commonj.timers)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package commonj.timers ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=commonj.work)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package commonj.work ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.cache)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.cache ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.template)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.template ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.bootstrap)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.bootstrap ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.constructs.blocking)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.constructs.blocking ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.event)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.event ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.store)(version&gt;=1.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.store ;version=[1.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.data)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.data ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.export)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.export ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.collections ;version=[3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.app)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.app ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.context)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.context ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.exception)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.exception ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource.loader
       ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl.jdbcjobstore)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl.jdbcjobstore ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.simpl)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.simpl ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.spi)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.spi ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.utils)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.utils ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
  </resource>
  <resource id='org.springframework.context.support/3.1.1.RELEASE' presentationname='Spring Context Support' symbolicname='org.springframework.context.support' uri='org.springframework.context.support-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      107225
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context Support'/>
      <p n='symbolicname' v='org.springframework.context.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail.javamail'/>
      <p n='uses' v='javax.activation,javax.mail,javax.mail.internet,org.springframework.beans.factory,org.springframework.core.io,org.springframework.mail'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.commonj'/>
      <p n='uses' v='commonj.timers,commonj.work,javax.naming,org.springframework.beans.factory,org.springframework.context,org.springframework.jndi,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.quartz'/>
      <p n='uses' v='javax.sql,org.quartz,org.quartz.impl.jdbcjobstore,org.quartz.simpl,org.quartz.spi,org.quartz.utils,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scheduling,org.springframework.transaction,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.freemarker'/>
      <p n='uses' v='freemarker.cache,freemarker.template,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.jasperreports'/>
      <p n='uses' v='net.sf.jasperreports.engine'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.velocity'/>
      <p n='uses' v='org.apache.commons.collections,org.apache.velocity.app,org.apache.velocity.exception,org.apache.velocity.runtime,org.apache.velocity.runtime.log,org.apache.velocity.runtime.resource,org.apache.velocity.runtime.resource.loader,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=commonj.timers)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package commonj.timers ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=commonj.work)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package commonj.work ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.cache)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.cache ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.template)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.template ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.data)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.data ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.export)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.export ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.collections ;version=[3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.app)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.app ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.context)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.context ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.exception)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.exception ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource.loader
       ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl.jdbcjobstore)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl.jdbcjobstore ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.simpl)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.simpl ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.spi)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.spi ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.utils)(version&gt;=1.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.quartz.utils ;version=[1.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
  </resource>
  <resource id='org.springframework.core/3.0.6.RELEASE' presentationname='Spring Core' symbolicname='org.springframework.core' uri='spring-core-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      382184
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Core'/>
      <p n='symbolicname' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core'/>
      <p n='uses' v='org.springframework.asm,org.springframework.asm.commons,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.annotation'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.converter'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.enums'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io.support'/>
      <p n='uses' v='org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert.converter,org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.style'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task.support'/>
      <p n='uses' v='org.springframework.core.task'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.classreading'/>
      <p n='uses' v='org.springframework.asm,org.springframework.core.io,org.springframework.core.type,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.filter'/>
      <p n='uses' v='org.springframework.core.type,org.springframework.core.type.classreading'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util'/>
      <p n='uses' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.comparator'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.xml'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.sax,org.apache.commons.logging,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.events ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.util ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.xml)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.xml ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.bcel)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.bcel ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.runtime)(version&gt;=0.0.0)(common=split)(mandatory:&lt;*common))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.runtime ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.vfs)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.vfs ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.virtual)(version&gt;=2.1.0.GA)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.virtual ;version=[2.1.0.GA,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm.commons)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm.commons ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.core/3.1.1.RELEASE' presentationname='Spring Core' symbolicname='org.springframework.core' uri='org.springframework.core-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      449324
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Core'/>
      <p n='symbolicname' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core'/>
      <p n='uses' v='org.springframework.asm,org.springframework.asm.commons,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.annotation'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.converter'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.support'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.enums'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.env'/>
      <p n='uses' v='joptsimple,org.apache.commons.logging,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io'/>
      <p n='uses' v='org.springframework.core.env'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io.support'/>
      <p n='uses' v='org.springframework.core.env,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert.converter,org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.style'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task.support'/>
      <p n='uses' v='org.springframework.core.task'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.classreading'/>
      <p n='uses' v='org.springframework.asm,org.springframework.core.annotation,org.springframework.core.io,org.springframework.core.type,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.filter'/>
      <p n='uses' v='org.springframework.core.type,org.springframework.core.type.classreading'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util'/>
      <p n='uses' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.comparator'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.xml'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.sax,org.apache.commons.logging,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.events ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.util ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=joptsimple)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package joptsimple ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.xml)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.xml ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.6.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.6.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.6.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.6.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.bcel)(version&gt;=1.6.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.bcel ;version=[1.6.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.6.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.6.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.runtime)(version&gt;=0.0.0)(common=split)(mandatory:&lt;*common))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.runtime ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.vfs)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.vfs ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.virtual)(version&gt;=2.1.0.GA)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.virtual ;version=[2.1.0.GA,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm.commons)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm.commons ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.expression/3.0.6.RELEASE' presentationname='Spring Expression Language' symbolicname='org.springframework.expression' uri='spring-expression-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      169752
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Expression Language'/>
      <p n='symbolicname' v='org.springframework.expression'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.common'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.ast'/>
      <p n='uses' v='org.springframework.expression,org.springframework.expression.spel,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.generated'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.standard'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression,org.springframework.expression.common,org.springframework.expression.spel,org.springframework.expression.spel.ast'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.support'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression,org.springframework.expression.spel'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
  </resource>
  <resource id='org.springframework.expression/3.1.1.RELEASE' presentationname='Spring Expression Language' symbolicname='org.springframework.expression' uri='org.springframework.expression-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      176311
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Expression Language'/>
      <p n='symbolicname' v='org.springframework.expression'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.common'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.ast'/>
      <p n='uses' v='org.springframework.expression,org.springframework.expression.spel,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.generated'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.standard'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression,org.springframework.expression.common,org.springframework.expression.spel,org.springframework.expression.spel.ast'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.expression.spel.support'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.expression,org.springframework.expression.spel'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
  </resource>
  <resource id='org.springframework.jdbc/3.0.6.RELEASE' presentationname='Spring JDBC' symbolicname='org.springframework.jdbc' uri='org.springframework.jdbc-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      386033
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring JDBC'/>
      <p n='symbolicname' v='org.springframework.jdbc'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc'/>
      <p n='uses' v='org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core.io,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core'/>
      <p n='uses' v='javax.sql,javax.sql.rowset,org.apache.commons.logging,org.springframework.beans,org.springframework.dao,org.springframework.jdbc,org.springframework.jdbc.support,org.springframework.jdbc.support.nativejdbc,org.springframework.jdbc.support.rowset'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.metadata'/>
      <p n='uses' v='javax.sql,org.apache.commons.logging,org.springframework.jdbc.core,org.springframework.jdbc.core.namedparam,org.springframework.jdbc.support,org.springframework.jdbc.support.nativejdbc'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.namedparam'/>
      <p n='uses' v='javax.sql,org.springframework.dao,org.springframework.jdbc.core,org.springframework.jdbc.core.support,org.springframework.jdbc.support,org.springframework.jdbc.support.rowset'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.simple'/>
      <p n='uses' v='javax.sql,org.springframework.dao,org.springframework.jdbc.core,org.springframework.jdbc.core.namedparam,org.springframework.jdbc.core.support,org.springframework.jdbc.support,org.springframework.jdbc.support.nativejdbc'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.support'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory.support,org.springframework.dao,org.springframework.dao.support,org.springframework.jdbc,org.springframework.jdbc.core,org.springframework.jdbc.support,org.springframework.jdbc.support.lob'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource'/>
      <p n='uses' v='javax.sql,org.apache.commons.logging,org.springframework.beans.factory,org.springframework.jdbc,org.springframework.transaction,org.springframework.transaction.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource.embedded'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.core.io,org.springframework.jdbc.datasource,org.springframework.jdbc.datasource.init'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource.init'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.core.io,org.springframework.core.io.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource.lookup'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.dao,org.springframework.jdbc.datasource,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.object'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.dao,org.springframework.jdbc,org.springframework.jdbc.core,org.springframework.jdbc.core.namedparam,org.springframework.jdbc.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.core,org.springframework.core.io,org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.incrementer'/>
      <p n='uses' v='javax.sql,org.springframework.beans.factory,org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.lob'/>
      <p n='uses' v='javax.transaction,org.springframework.jdbc.support.nativejdbc,org.springframework.transaction.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.nativejdbc'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.rowset'/>
      <p n='uses' v='org.springframework.jdbc'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.xml'/>
      <p n='uses' v='javax.xml.transform,org.springframework.dao,org.springframework.jdbc.support,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.rsadapter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.rsadapter ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.ws.rsadapter.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.ws.rsadapter.jdbc ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.mchange.v2.c3p0)(version&gt;=0.9.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.mchange.v2.c3p0 ;version=[0.9.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.rowset)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.rowset ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql.rowset)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql.rowset ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=oracle.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.jdbc ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=oracle.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.derby.impl.io)(version&gt;=10.5.0)(!(version&gt;=11.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.derby.impl.io ;version=[10.5.0,11.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.derby.jdbc)(version&gt;=10.5.0)(!(version&gt;=11.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.derby.jdbc ;version=[10.5.0,11.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.h2)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.h2 ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hsqldb)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hsqldb ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.resource.adapter.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jboss.resource.adapter.jdbc ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.transaction ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.transaction.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=weblogic.jdbc.extensions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package weblogic.jdbc.extensions ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.security.core/3.1.0.RELEASE' presentationname='Spring Security Core' symbolicname='org.springframework.security.core' uri='org.springframework.security.core-3.1.0.RELEASE.jar' version='3.1.0.RELEASE'>
    <size>
      348567
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Security Core'/>
      <p n='symbolicname' v='org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access'/>
      <p n='uses' v='org.springframework.aop.framework,org.springframework.security.authentication,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.annotation'/>
      <p n='uses' v='org.springframework.security.access,org.springframework.security.access.method,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.event'/>
      <p n='uses' v='org.springframework.context,org.springframework.security.access,org.springframework.security.authentication,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.expression'/>
      <p n='uses' v='org.springframework.aop.framework,org.springframework.context,org.springframework.expression,org.springframework.expression.spel.support,org.springframework.security.access,org.springframework.security.access.hierarchicalroles,org.springframework.security.authentication,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.expression.method'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.core,org.springframework.expression,org.springframework.expression.spel.support,org.springframework.security.access,org.springframework.security.access.expression,org.springframework.security.access.prepost,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.hierarchicalroles'/>
      <p n='uses' v='org.springframework.security.core.authority.mapping,org.springframework.security.core.userdetails'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.intercept'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.security.access,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.context'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.intercept.aopalliance'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.support,org.springframework.beans,org.springframework.beans.factory,org.springframework.security.access,org.springframework.security.access.intercept,org.springframework.security.access.method'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.intercept.aspectj'/>
      <p n='uses' v='org.aopalliance.intercept,org.aspectj.lang,org.springframework.security.access.intercept.aopalliance'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.method'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.security.access'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.prepost'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.aop.framework,org.springframework.security.access,org.springframework.security.access.method,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.access.vote'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.security.access,org.springframework.security.access.hierarchicalroles,org.springframework.security.authentication,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.security.core,org.springframework.security.core.userdetails'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.dao'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.security.authentication,org.springframework.security.authentication.encoding,org.springframework.security.core,org.springframework.security.core.authority.mapping,org.springframework.security.core.userdetails,org.springframework.security.crypto.password'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.encoding'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.event'/>
      <p n='uses' v='org.springframework.context,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.jaas'/>
      <p n='uses' v='javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.session'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.jaas.event'/>
      <p n='uses' v='org.springframework.context,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.jaas.memory'/>
      <p n='uses' v='javax.security.auth.login'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.authentication.rcp'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.core,org.springframework.security.authentication,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core'/>
      <p n='uses' v='org.springframework.context.support'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.authority'/>
      <p n='uses' v='org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.authority.mapping'/>
      <p n='uses' v='org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.context'/>
      <p n='uses' v='org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.session'/>
      <p n='uses' v='org.springframework.context'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.token'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.userdetails'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.security.core'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.userdetails.cache'/>
      <p n='uses' v='net.sf.ehcache,org.springframework.beans.factory,org.springframework.security.core.userdetails'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.userdetails.jdbc'/>
      <p n='uses' v='org.springframework.context,org.springframework.jdbc.core,org.springframework.jdbc.core.support,org.springframework.security.core,org.springframework.security.core.userdetails'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.core.userdetails.memory'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.security.core,org.springframework.security.core.userdetails'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.bcrypt'/>
      <p n='uses' v='org.springframework.security.crypto.password'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.codec'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.encrypt'/>
      <p n='uses' v='javax.crypto,javax.crypto.spec,org.springframework.security.crypto.keygen'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.keygen'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.password'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.crypto.util'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.provisioning'/>
      <p n='uses' v='org.springframework.context,org.springframework.jdbc.core,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.userdetails,org.springframework.security.core.userdetails.jdbc'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.util'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.core.io'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation.security)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation.security ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto.spec ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.auth ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.auth.callback ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.auth.login ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.auth.spi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=1.4.1)(!(version&gt;=2.5.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache ;version=[1.4.1,2.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang)(version&gt;=1.6.0)(!(version&gt;=1.7.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang ;version=[1.6.0,1.7.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang.reflect)(version&gt;=1.6.0)(!(version&gt;=1.7.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang.reflect ;version=[1.6.0,1.7.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.expression)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.expression ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6.RELEASE,3.2.0)
    </require>
  </resource>
  <resource id='org.springframework.security.web/3.1.0.RELEASE' presentationname='Spring Security Web' symbolicname='org.springframework.security.web' uri='org.springframework.security.web-3.1.0.RELEASE.jar' version='3.1.0.RELEASE'>
    <size>
      255577
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Security Web'/>
      <p n='symbolicname' v='org.springframework.security.web'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.security.core,org.springframework.security.web.firewall,org.springframework.security.web.util,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.access'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.security.access,org.springframework.security.access.intercept,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.web,org.springframework.security.web.savedrequest,org.springframework.security.web.util,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.access.channel'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.security.access,org.springframework.security.web,org.springframework.security.web.access.intercept,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.access.expression'/>
      <p n='uses' v='org.springframework.expression,org.springframework.security.access,org.springframework.security.access.expression,org.springframework.security.core,org.springframework.security.web,org.springframework.security.web.access.intercept'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.access.intercept'/>
      <p n='uses' v='javax.servlet,org.springframework.security.access,org.springframework.security.access.intercept,org.springframework.security.web'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.context,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.userdetails.memory,org.springframework.security.web,org.springframework.security.web.authentication.session,org.springframework.security.web.savedrequest,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.logout'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.security.core,org.springframework.security.web.authentication,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.preauth'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.context,org.springframework.core,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.authority,org.springframework.security.core.userdetails,org.springframework.security.web.authentication,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.preauth.j2ee'/>
      <p n='uses' v='javax.servlet.http,org.springframework.beans.factory,org.springframework.context,org.springframework.core.io,org.springframework.security.authentication,org.springframework.security.core.authority.mapping,org.springframework.security.web.authentication.preauth,org.xml.sax'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.preauth.x509'/>
      <p n='uses' v='javax.servlet.http,org.springframework.context,org.springframework.security.web.authentication.preauth'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.rememberme'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.context,org.springframework.jdbc.core,org.springframework.jdbc.core.support,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.authority.mapping,org.springframework.security.core.userdetails,org.springframework.security.web.authentication,org.springframework.security.web.authentication.logout,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.session'/>
      <p n='uses' v='javax.servlet.http,org.springframework.context,org.springframework.security.core,org.springframework.security.core.session'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.switchuser'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.context,org.springframework.security.authentication,org.springframework.security.authentication.event,org.springframework.security.core,org.springframework.security.core.userdetails,org.springframework.security.web.authentication,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.ui'/>
      <p n='uses' v='javax.servlet,org.springframework.security.web.authentication,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.authentication.www'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.beans.factory,org.springframework.context,org.springframework.core,org.springframework.security.authentication,org.springframework.security.core,org.springframework.security.core.userdetails,org.springframework.security.web,org.springframework.security.web.authentication,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.context'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.security.authentication,org.springframework.security.core.context,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.firewall'/>
      <p n='uses' v='javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.jaasapi'/>
      <p n='uses' v='javax.security.auth,javax.servlet,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.savedrequest'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.security.web,org.springframework.security.web.util,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.servletapi'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.session'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.context,org.springframework.security.core.session,org.springframework.security.web,org.springframework.security.web.authentication,org.springframework.security.web.authentication.logout,org.springframework.security.web.authentication.session,org.springframework.security.web.context,org.springframework.web.filter'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.security.web.util'/>
      <p n='uses' v='javax.servlet.http,org.springframework.expression'/>
      <p n='version' t='version' v='3.1.0.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.access)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.access ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.access.expression)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.access.expression
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.access.intercept)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.access.intercept
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.authentication)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.authentication
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.authentication.event)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.authentication.event
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.authentication.jaas)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.authentication.jaas
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.authority)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.authority
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.authority.mapping)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.authority.mapping
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.context)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.context ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.session)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.session ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.userdetails)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.userdetails
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.userdetails.cache)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.userdetails.cache
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.core.userdetails.memory)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.core.userdetails.memory
       ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.security.crypto.codec)(version&gt;=3.1.0.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.security.crypto.codec ;version=[3.1.0.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.support ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.filter)(version&gt;=3.0.6.RELEASE)(!(version&gt;=3.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.filter ;version=[3.0.6.RELEASE,3.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.transaction/3.0.6.RELEASE' presentationname='Spring Transaction' symbolicname='org.springframework.transaction' uri='org.springframework.transaction-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      231913
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Transaction'/>
      <p n='symbolicname' v='org.springframework.transaction'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.dao.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao.support'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans,org.springframework.beans.factory,org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci'/>
      <p n='uses' v='javax.resource,org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.connection'/>
      <p n='uses' v='javax.naming,javax.resource,javax.resource.cci,org.springframework.beans.factory,org.springframework.jca.cci,org.springframework.transaction,org.springframework.transaction.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.core'/>
      <p n='uses' v='javax.resource,javax.resource.cci,org.springframework.dao'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.core.support'/>
      <p n='uses' v='javax.resource.cci,org.springframework.dao.support,org.springframework.jca.cci,org.springframework.jca.cci.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.object'/>
      <p n='uses' v='javax.resource,javax.resource.cci,org.springframework.beans.factory,org.springframework.dao,org.springframework.jca.cci.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.context'/>
      <p n='uses' v='javax.resource,javax.resource.spi,javax.resource.spi.endpoint,javax.resource.spi.work,javax.transaction.xa,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.context,org.springframework.context.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.endpoint'/>
      <p n='uses' v='javax.resource,javax.resource.spi,javax.resource.spi.endpoint,javax.transaction.xa,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.transaction.jta'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.support'/>
      <p n='uses' v='javax.resource,javax.resource.spi,javax.resource.spi.work,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.work'/>
      <p n='uses' v='javax.naming,javax.resource.spi,javax.resource.spi.work,org.springframework.beans.factory,org.springframework.core.task,org.springframework.jca.context,org.springframework.jndi,org.springframework.scheduling'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.work.glassfish'/>
      <p n='uses' v='javax.resource.spi.work,org.springframework.jca.work'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.work.jboss'/>
      <p n='uses' v='javax.resource.spi.work,org.springframework.jca.work'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.annotation'/>
      <p n='uses' v='javax.ejb,org.springframework.transaction.interceptor'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.interceptor'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.transaction,org.springframework.transaction.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.jta'/>
      <p n='uses' v='com.ibm.wsspi.uow,javax.transaction,javax.transaction.xa,org.apache.commons.logging,org.springframework.beans.factory,org.springframework.jndi,org.springframework.transaction,org.springframework.transaction.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.core,org.springframework.transaction'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.uow)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.uow ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.wsspi.uow)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.wsspi.uow ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ejb ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.cci)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.cci ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.endpoint)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.endpoint ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.work)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.work ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction.xa ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=oracle.j2ee.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.j2ee.transaction ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.resource.work)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jboss.resource.work ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.stereotype ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=weblogic.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package weblogic.transaction ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.web/3.0.6.RELEASE' presentationname='Spring Web' symbolicname='org.springframework.web' uri='spring-web-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      398149
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Web'/>
      <p n='symbolicname' v='org.springframework.web'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.client'/>
      <p n='uses' v='org.apache.commons.httpclient,org.springframework.beans.factory,org.springframework.http'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.client.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.http,org.springframework.http.client'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter'/>
      <p n='uses' v='javax.activation,javax.imageio,org.springframework.core,org.springframework.core.io,org.springframework.http,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.feed'/>
      <p n='uses' v='com.sun.syndication.feed,org.springframework.http,org.springframework.http.converter'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.json'/>
      <p n='uses' v='org.codehaus.jackson.map,org.codehaus.jackson.type,org.springframework.http,org.springframework.http.converter'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.xml'/>
      <p n='uses' v='javax.xml.bind,javax.xml.transform,org.springframework.http,org.springframework.http.converter,org.springframework.oxm'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.server'/>
      <p n='uses' v='javax.servlet.http,org.springframework.http'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.caucho'/>
      <p n='uses' v='com.caucho.burlap.client,com.caucho.hessian.client,com.caucho.hessian.io,com.caucho.hessian.server,com.sun.net.httpserver,javax.servlet,javax.servlet.http,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.remoting,org.springframework.remoting.support,org.springframework.web'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.httpinvoker'/>
      <p n='uses' v='com.sun.net.httpserver,javax.servlet,javax.servlet.http,org.aopalliance.intercept,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,org.springframework.beans.factory,org.springframework.remoting,org.springframework.remoting.rmi,org.springframework.remoting.support,org.springframework.web'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxrpc'/>
      <p n='uses' v='javax.servlet,javax.xml.namespace,javax.xml.rpc,javax.xml.rpc.server,javax.xml.rpc.soap,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.context.support,org.springframework.remoting,org.springframework.remoting.soap,org.springframework.web.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxws'/>
      <p n='uses' v='com.sun.net.httpserver,javax.jws,javax.xml.namespace,javax.xml.soap,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.soap,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.remoting.soap'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.http'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind'/>
      <p n='uses' v='javax.servlet,org.springframework.beans,org.springframework.validation,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.annotation'/>
      <p n='uses' v='org.springframework.http'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.annotation.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.http,org.springframework.http.converter,org.springframework.ui,org.springframework.util,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.support,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core,org.springframework.core.convert,org.springframework.validation,org.springframework.web.bind,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.client'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.core,org.springframework.http,org.springframework.http.client,org.springframework.http.client.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.client.support'/>
      <p n='uses' v='org.springframework.http.client,org.springframework.web.client'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context'/>
      <p n='uses' v='javax.servlet,org.springframework.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.request'/>
      <p n='uses' v='javax.faces.context,javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.ui'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.support'/>
      <p n='uses' v='javax.faces.context,javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.annotation,org.springframework.context.support,org.springframework.core.io,org.springframework.core.io.support,org.springframework.ui.context,org.springframework.web.context,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.filter'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.web.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf'/>
      <p n='uses' v='javax.faces.application,javax.faces.context,javax.faces.el,javax.faces.event,org.springframework.beans.factory,org.springframework.web.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory,org.springframework.beans.factory.access.el,org.springframework.web.context'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart'/>
      <p n='uses' v='javax.servlet.http,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.commons'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.fileupload,org.apache.commons.fileupload.disk,org.springframework.core.io,org.springframework.util,org.springframework.web.context,org.springframework.web.multipart,org.springframework.web.multipart.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.support'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.propertyeditors,org.springframework.util,org.springframework.web.filter,org.springframework.web.multipart'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.util'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp.el,javax.servlet.jsp.tagext'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.client)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.client ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.io)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.io ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.server)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.server ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.client)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.client ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.io)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.io ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.server)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.server ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.atom)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.atom ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.rss)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.rss ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.application)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.application ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.component)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.component ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.context)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.context ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.el)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.el ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.event)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.event ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.metadata ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.jws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.portlet)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.portlet ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.server ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.handler)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.handler ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.disk)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.disk ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.servlet)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.servlet ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map.type)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map.type ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.type)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.type ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.framework ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access.el)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access.el
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.access)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.access ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.i18n)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.i18n ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.oxm)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.oxm ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.rmi)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.rmi ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.soap)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.soap ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.web/3.1.1.RELEASE' presentationname='Spring Web' symbolicname='org.springframework.web' uri='org.springframework.web-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      544291
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Web'/>
      <p n='symbolicname' v='org.springframework.web'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.client'/>
      <p n='uses' v='org.apache.commons.httpclient,org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.apache.http.protocol,org.springframework.beans.factory,org.springframework.http'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.client.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.http,org.springframework.http.client'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter'/>
      <p n='uses' v='javax.activation,javax.imageio,org.springframework.core,org.springframework.core.io,org.springframework.http,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.feed'/>
      <p n='uses' v='com.sun.syndication.feed,org.springframework.http,org.springframework.http.converter'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.json'/>
      <p n='uses' v='org.codehaus.jackson,org.codehaus.jackson.map,org.codehaus.jackson.type,org.springframework.http,org.springframework.http.converter'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.converter.xml'/>
      <p n='uses' v='javax.xml.bind,javax.xml.transform,org.springframework.http,org.springframework.http.converter,org.springframework.oxm'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.http.server'/>
      <p n='uses' v='javax.servlet.http,org.springframework.http'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.caucho'/>
      <p n='uses' v='com.caucho.burlap.client,com.caucho.hessian.client,com.caucho.hessian.io,com.caucho.hessian.server,com.sun.net.httpserver,javax.servlet,javax.servlet.http,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.remoting,org.springframework.remoting.support,org.springframework.web'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.httpinvoker'/>
      <p n='uses' v='com.sun.net.httpserver,javax.servlet,javax.servlet.http,org.aopalliance.intercept,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.springframework.beans.factory,org.springframework.remoting,org.springframework.remoting.rmi,org.springframework.remoting.support,org.springframework.web'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxrpc'/>
      <p n='uses' v='javax.servlet,javax.xml.namespace,javax.xml.rpc,javax.xml.rpc.server,javax.xml.rpc.soap,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.context.support,org.springframework.remoting,org.springframework.remoting.soap,org.springframework.web.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxws'/>
      <p n='uses' v='com.sun.net.httpserver,javax.jws,javax.xml.namespace,javax.xml.soap,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.soap,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.remoting.soap'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web'/>
      <p n='uses' v='javax.servlet,javax.servlet.annotation,javax.servlet.http,org.springframework.http'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind'/>
      <p n='uses' v='javax.servlet,org.springframework.beans,org.springframework.core,org.springframework.validation,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.annotation'/>
      <p n='uses' v='org.springframework.http'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.annotation.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.http,org.springframework.http.converter,org.springframework.ui,org.springframework.util,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.support,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core,org.springframework.core.convert,org.springframework.validation,org.springframework.web.bind,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.client'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.core,org.springframework.http,org.springframework.http.client,org.springframework.http.client.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.client.support'/>
      <p n='uses' v='org.springframework.http.client,org.springframework.web.client'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context'/>
      <p n='uses' v='javax.servlet,org.springframework.beans.factory,org.springframework.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.request'/>
      <p n='uses' v='javax.faces.context,javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.ui'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.support'/>
      <p n='uses' v='javax.faces.context,javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.annotation,org.springframework.context.support,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.ui.context,org.springframework.web.context,org.springframework.web.context.request'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.filter'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.core.env,org.springframework.http.server,org.springframework.util,org.springframework.web.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf'/>
      <p n='uses' v='javax.faces.application,javax.faces.context,javax.faces.el,javax.faces.event,org.springframework.beans.factory,org.springframework.web.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory,org.springframework.beans.factory.access.el,org.springframework.web.context'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.method'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.method.annotation'/>
      <p n='uses' v='javax.servlet,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.core,org.springframework.util,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.support,org.springframework.web.context.request,org.springframework.web.method,org.springframework.web.method.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.method.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.ui,org.springframework.web.bind.support,org.springframework.web.context.request,org.springframework.web.method'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart'/>
      <p n='uses' v='javax.servlet.http,org.springframework.core,org.springframework.http,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.commons'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.fileupload,org.apache.commons.fileupload.disk,org.springframework.core.io,org.springframework.util,org.springframework.web.context,org.springframework.web.multipart,org.springframework.web.multipart.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.support'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.propertyeditors,org.springframework.http,org.springframework.http.server,org.springframework.util,org.springframework.web.filter,org.springframework.web.multipart'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.util'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp.el,javax.servlet.jsp.tagext,org.springframework.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.client)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.client ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.io)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.io ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.server)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.server ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.client)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.client ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.io)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.io ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.server)(version&gt;=3.2.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.server ;version=[3.2.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.atom)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.atom ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.rss)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.rss ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.application)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.application ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.component)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.component ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.context)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.context ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.el)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.el ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.event)(version&gt;=1.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.faces.event ;version=[1.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.metadata ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.jws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.portlet)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.portlet ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.bind.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.server ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.handler)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.handler ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.soap ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.disk)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.disk ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.servlet)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.servlet ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client.methods ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.scheme)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn.scheme ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.ssl)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn.ssl ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.entity ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.impl.client ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.conn.tsccm)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.impl.conn.tsccm ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.params)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.params ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.protocol ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.util ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map.type)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map.type ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.type)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.type ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.framework ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access.el)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access.el
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.access)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.access ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.i18n)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.i18n ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.oxm)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.oxm ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.rmi)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.rmi ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.soap)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.soap ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.web.servlet/3.0.6.RELEASE' presentationname='Spring Web Servlet' symbolicname='org.springframework.web.servlet' uri='spring-webmvc-3.0.6.RELEASE.jar' version='3.0.6.RELEASE'>
    <size>
      419488
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Web Servlet'/>
      <p n='symbolicname' v='org.springframework.web.servlet'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.context,org.springframework.context.event,org.springframework.context.i18n,org.springframework.ui,org.springframework.ui.context,org.springframework.util,org.springframework.web.context,org.springframework.web.multipart'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.handler'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.util,org.springframework.web.context,org.springframework.web.context.request,org.springframework.web.context.support,org.springframework.web.servlet,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.i18n'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.util,org.springframework.validation,org.springframework.web.bind,org.springframework.web.bind.support,org.springframework.web.servlet,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.annotation'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.http,org.springframework.http.converter,org.springframework.ui,org.springframework.util,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.annotation.support,org.springframework.web.bind.support,org.springframework.web.context.request,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.multiaction,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.multiaction'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.util,org.springframework.validation,org.springframework.web.bind,org.springframework.web.bind.support,org.springframework.web.servlet,org.springframework.web.servlet.mvc,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.support'/>
      <p n='uses' v='javax.servlet.http,org.springframework.beans,org.springframework.http.converter,org.springframework.web,org.springframework.web.bind,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.multiaction'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.resource'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.core.io,org.springframework.http,org.springframework.web,org.springframework.web.context,org.springframework.web.servlet.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.support'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp.jstl.fmt,org.springframework.context,org.springframework.ui.context,org.springframework.validation,org.springframework.web.context,org.springframework.web.context.support,org.springframework.web.servlet,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.tags'/>
      <p n='uses' v='javax.servlet,javax.servlet.jsp,javax.servlet.jsp.tagext,org.springframework.context,org.springframework.expression,org.springframework.validation,org.springframework.web.servlet.support'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.tags.form'/>
      <p n='uses' v='javax.servlet.jsp,javax.servlet.jsp.tagext,org.springframework.web.servlet.support,org.springframework.web.servlet.tags'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.theme'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view'/>
      <p n='uses' v='javax.activation,javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.http,org.springframework.web.context.support,org.springframework.web.servlet,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.document'/>
      <p n='uses' v='com.lowagie.text,com.lowagie.text.pdf,javax.servlet.http,jxl,jxl.write,org.apache.poi.hssf.usermodel,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.feed'/>
      <p n='uses' v='com.sun.syndication.feed,com.sun.syndication.feed.atom,com.sun.syndication.feed.rss,javax.servlet.http,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.freemarker'/>
      <p n='uses' v='freemarker.ext.jsp,freemarker.template,javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.ui.freemarker,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.jasperreports'/>
      <p n='uses' v='javax.servlet.http,javax.sql,net.sf.jasperreports.engine,org.springframework.context,org.springframework.core.io,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.json'/>
      <p n='uses' v='javax.servlet.http,org.codehaus.jackson,org.codehaus.jackson.map,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.tiles2'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.tiles,org.apache.tiles.context,org.apache.tiles.definition,org.apache.tiles.definition.dao,org.apache.tiles.factory,org.apache.tiles.impl,org.apache.tiles.locale,org.apache.tiles.locale.impl,org.apache.tiles.preparer,org.apache.tiles.servlet.context,org.apache.tiles.startup,org.springframework.beans.factory,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.velocity'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.velocity,org.apache.velocity.app,org.apache.velocity.context,org.apache.velocity.exception,org.apache.velocity.tools.generic,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.ui.velocity,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.xml'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.oxm,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.xslt'/>
      <p n='uses' v='javax.servlet.http,javax.xml.transform,org.springframework.beans,org.springframework.context,org.springframework.core.io,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.0.6.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.lowagie.text)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lowagie.text ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.lowagie.text.pdf)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lowagie.text.pdf ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.atom)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.atom ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.rss)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.rss ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.cache)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.cache ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.core)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.core ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.ext.jsp)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.ext.jsp ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.ext.servlet)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.ext.servlet ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.template)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.template ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.jstl.core)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.jstl.core ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.jstl.fmt)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.jstl.fmt ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=jxl)(version&gt;=2.6.6)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package jxl ;version=[2.6.6,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=jxl.write)(version&gt;=2.6.6)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package jxl.write ;version=[2.6.6,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.design)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.design ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.export)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.export ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.util)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.util ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.xml)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.xml ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.usermodel)(version&gt;=3.0.2.FINAL)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.usermodel ;version=[3.0.2.FINAL,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.poifs.filesystem)(version&gt;=3.0.2.FINAL)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.poifs.filesystem ;version=[3.0.2.FINAL,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.awareness)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.awareness ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition.dao)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition.dao ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition.digester)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition.digester ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator.el)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator.el ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.factory)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.factory ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.impl.mgmt)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.impl.mgmt ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.jsp.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.jsp.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.locale)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.locale ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.locale.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.locale.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.preparer)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.preparer ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.renderer)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.renderer ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.servlet.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.servlet.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.startup)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.startup ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.app)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.app ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.context)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.context ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.exception)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.exception ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource.loader
       ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.generic)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.generic ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view.context)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view.context ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view.servlet)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view.servlet ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.event)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.event ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.expression)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.expression ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.i18n)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.i18n ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.enums)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.enums ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.style)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.style ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression.spel.support
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.format.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.format.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.feed)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.feed ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.json)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.json ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.server)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.server ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.oxm)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.oxm ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.stereotype ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.freemarker)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.freemarker ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.jasperreports)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.jasperreports ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.velocity)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.velocity ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation.beanvalidation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation.beanvalidation
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.annotation ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.annotation.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.annotation.support
       ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.request)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context.request ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context.support ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.multipart ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.util)(version&gt;=3.0.6)(!(version&gt;=3.0.7)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.util ;version=[3.0.6,3.0.7)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.web.servlet/3.1.1.RELEASE' presentationname='Spring Web Servlet' symbolicname='org.springframework.web.servlet' uri='org.springframework.web.servlet-3.1.1.RELEASE.jar' version='3.1.1.RELEASE'>
    <size>
      573701
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Web Servlet'/>
      <p n='symbolicname' v='org.springframework.web.servlet'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.context,org.springframework.context.event,org.springframework.context.i18n,org.springframework.core.env,org.springframework.ui,org.springframework.ui.context,org.springframework.util,org.springframework.web.context,org.springframework.web.multipart'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.config.annotation'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory.annotation,org.springframework.context,org.springframework.context.annotation,org.springframework.core.io,org.springframework.format,org.springframework.format.support,org.springframework.validation,org.springframework.web.context,org.springframework.web.context.request,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc,org.springframework.web.servlet.mvc.method.annotation,org.springframework.web.servlet.resource'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.handler'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.util,org.springframework.web.context,org.springframework.web.context.request,org.springframework.web.context.support,org.springframework.web.method,org.springframework.web.servlet,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.i18n'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.util,org.springframework.validation,org.springframework.web.bind,org.springframework.web.bind.support,org.springframework.web.servlet,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.annotation'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.http,org.springframework.http.converter,org.springframework.ui,org.springframework.util,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.annotation.support,org.springframework.web.bind.support,org.springframework.web.context.request,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.multiaction,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.condition'/>
      <p n='uses' v='javax.servlet.http,org.springframework.http,org.springframework.util,org.springframework.web.bind.annotation,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.method'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.core,org.springframework.web.method,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.condition,org.springframework.web.servlet.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.method.annotation'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.http,org.springframework.http.server,org.springframework.util,org.springframework.web,org.springframework.web.bind,org.springframework.web.bind.annotation,org.springframework.web.bind.support,org.springframework.web.context.request,org.springframework.web.method,org.springframework.web.method.annotation,org.springframework.web.method.support,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.condition,org.springframework.web.servlet.mvc.method,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.multiaction'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans.factory,org.springframework.util,org.springframework.validation,org.springframework.web.bind,org.springframework.web.bind.support,org.springframework.web.servlet,org.springframework.web.servlet.mvc,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.mvc.support'/>
      <p n='uses' v='javax.servlet.http,org.springframework.beans,org.springframework.http.converter,org.springframework.ui,org.springframework.validation,org.springframework.web,org.springframework.web.bind,org.springframework.web.multipart.support,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.servlet.mvc.multiaction'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.resource'/>
      <p n='uses' v='javax.activation,javax.servlet,javax.servlet.http,org.springframework.core.io,org.springframework.http,org.springframework.web,org.springframework.web.context,org.springframework.web.servlet.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.support'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp.jstl.fmt,org.springframework.context,org.springframework.ui.context,org.springframework.validation,org.springframework.web.context,org.springframework.web.context.support,org.springframework.web.servlet,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.tags'/>
      <p n='uses' v='javax.servlet,javax.servlet.jsp,javax.servlet.jsp.tagext,org.springframework.context,org.springframework.expression,org.springframework.validation,org.springframework.web.servlet.support'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.tags.form'/>
      <p n='uses' v='javax.servlet.jsp,javax.servlet.jsp.tagext,org.springframework.web.servlet.support,org.springframework.web.servlet.tags'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.theme'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.web.servlet,org.springframework.web.servlet.handler,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view'/>
      <p n='uses' v='javax.activation,javax.servlet,javax.servlet.http,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.http,org.springframework.web.context.support,org.springframework.web.servlet,org.springframework.web.servlet.support,org.springframework.web.util'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.document'/>
      <p n='uses' v='com.lowagie.text,com.lowagie.text.pdf,javax.servlet.http,jxl,jxl.write,org.apache.poi.hssf.usermodel,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.feed'/>
      <p n='uses' v='com.sun.syndication.feed,com.sun.syndication.feed.atom,com.sun.syndication.feed.rss,javax.servlet.http,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.freemarker'/>
      <p n='uses' v='freemarker.ext.jsp,freemarker.template,javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.ui.freemarker,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.jasperreports'/>
      <p n='uses' v='javax.servlet.http,javax.sql,net.sf.jasperreports.engine,org.springframework.context,org.springframework.core.io,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.json'/>
      <p n='uses' v='javax.servlet.http,org.codehaus.jackson,org.codehaus.jackson.map,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.tiles2'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.tiles,org.apache.tiles.context,org.apache.tiles.definition,org.apache.tiles.definition.dao,org.apache.tiles.factory,org.apache.tiles.impl,org.apache.tiles.locale,org.apache.tiles.locale.impl,org.apache.tiles.preparer,org.apache.tiles.servlet.context,org.apache.tiles.startup,org.springframework.beans.factory,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.velocity'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.velocity,org.apache.velocity.app,org.apache.velocity.context,org.apache.velocity.exception,org.apache.velocity.tools.generic,org.springframework.beans,org.springframework.beans.factory,org.springframework.context,org.springframework.ui.velocity,org.springframework.web.context,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.xml'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.springframework.beans,org.springframework.oxm,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.servlet.view.xslt'/>
      <p n='uses' v='javax.servlet.http,javax.xml.transform,org.springframework.beans,org.springframework.context,org.springframework.core.io,org.springframework.web.servlet.view'/>
      <p n='version' t='version' v='3.1.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.lowagie.text)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lowagie.text ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.lowagie.text.pdf)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lowagie.text.pdf ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.atom)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.atom ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.rss)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.rss ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.cache)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.cache ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.core)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.core ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.ext.jsp)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.ext.jsp ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.ext.servlet)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.ext.servlet ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.template)(version&gt;=2.3.14)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package freemarker.template ;version=[2.3.14,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.jstl.core)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.jstl.core ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.jstl.fmt)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.jstl.fmt ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=jxl)(version&gt;=2.6.6)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package jxl ;version=[2.6.6,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=jxl.write)(version&gt;=2.6.6)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package jxl.write ;version=[2.6.6,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.design)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.design ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.export)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.export ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.util)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.util ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.xml)(version&gt;=2.0.5)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.xml ;version=[2.0.5,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.usermodel)(version&gt;=3.0.2.FINAL)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.usermodel ;version=[3.0.2.FINAL,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.poifs.filesystem)(version&gt;=3.0.2.FINAL)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.poifs.filesystem ;version=[3.0.2.FINAL,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.awareness)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.awareness ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition.dao)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition.dao ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.definition.digester)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.definition.digester ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator.el)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator.el ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.evaluator.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.evaluator.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.factory)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.factory ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.impl.mgmt)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.impl.mgmt ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.jsp.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.jsp.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.locale)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.locale ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.locale.impl)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.locale.impl ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.preparer)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.preparer ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.renderer)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.renderer ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.servlet.context)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.servlet.context ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tiles.startup)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tiles.startup ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.app)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.app ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.context)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.context ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.exception)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.exception ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource.loader
       ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.generic)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.generic ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view.context)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view.context ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.tools.view.servlet)(version&gt;=1.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.tools.view.servlet ;version=[1.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.event)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.event ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.expression)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.expression ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.i18n)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.i18n ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.enums)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.enums ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.style)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.style ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.expression.spel.support
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.format)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.format ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.format.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.format.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.feed)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.feed ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.json)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.json ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.converter.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.converter.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.http.server)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.http.server ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.oxm)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.oxm ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.stereotype ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.context.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.freemarker)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.freemarker ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.jasperreports)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.jasperreports ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.velocity)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.ui.velocity ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation.beanvalidation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation.beanvalidation
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.validation.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.annotation.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.annotation.support
       ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.bind.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.request)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context.request ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.context.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.method)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.method ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.method.annotation)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.method.annotation ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.method.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.method.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.multipart ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart.support)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.multipart.support ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.util)(version&gt;=3.1.1)(!(version&gt;=3.1.2)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.web.util ;version=[3.1.1,3.1.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.xerial.snappy.snappy-java/1.0.4.1' presentationname='org.xerial.snappy.snappy-java' symbolicname='org.xerial.snappy.snappy-java' uri='org.xerial.snappy.snappy-java-1.0.4.1.jar' version='1.0.4.1'>
    <description>
      snappy-java: A fast compression/decompression library
    </description>
    <size>
      995967
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.xerial.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.xerial.snappy.snappy-java'/>
      <p n='symbolicname' v='org.xerial.snappy.snappy-java'/>
      <p n='version' t='version' v='1.0.4.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xerial.snappy'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
  </resource>
  <resource id='paranamer/2.3.0' presentationname='paranamer' symbolicname='paranamer' uri='paranamer-2.3.0.jar' version='2.3.0'>
    <size>
      30167
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='paranamer'/>
      <p n='symbolicname' v='paranamer'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.paranamer'/>
      <p n='uses' v='javax.inject'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.inject
    </require>
  </resource>
  <resource id='slf4j.api/1.6.1' presentationname='slf4j-api' symbolicname='slf4j.api' uri='slf4j-api-1.6.1.jar' version='1.6.1'>
    <description>
      The slf4j API
    </description>
    <size>
      25496
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='slf4j-api'/>
      <p n='symbolicname' v='slf4j.api'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl ;version=1.6.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='solr-analysis-extras/3.5.0' presentationname='solr-analysis-extras' symbolicname='solr-analysis-extras' uri='solr-analysis-extras-3.5.0.jar' version='3.5.0'>
    <size>
      34497
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='solr-analysis-extras'/>
      <p n='symbolicname' v='solr-analysis-extras'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.analysis'/>
      <p n='uses' v='org.apache.lucene.collation,com.ibm.icu.util,org.apache.solr.util.plugin,org.apache.solr.common,com.ibm.icu.text,org.apache.commons.io,org.apache.lucene.analysis,org.apache.lucene.analysis.icu,org.apache.lucene.analysis.icu.segmentation,org.apache.lucene.analysis.cn.smart,org.egothor.stemmer,org.apache.lucene.analysis.stempel'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibm.icu.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.icu.text
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.icu.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.icu.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.cn.smart)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.cn.smart ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.icu)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.analysis.icu
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.icu.segmentation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.analysis.icu.segmentation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.stempel)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.stempel ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.collation)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.collation ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.util.plugin)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.util.plugin ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.egothor.stemmer)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.egothor.stemmer ;version=[3.5.0,4.0.0)
    </require>
  </resource>
  <resource id='solr-core/3.5.0' presentationname='solr-core' symbolicname='solr-core' uri='solr-core-3.5.0.jar' version='3.5.0'>
    <size>
      1519688
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='solr-core'/>
      <p n='symbolicname' v='solr-core'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.spelling'/>
      <p n='uses' v='org.apache.solr.common.params,org.slf4j,org.apache.lucene.index,org.apache.lucene.store,org.apache.solr.core,org.apache.solr.search,org.apache.solr.common.util,org.apache.lucene.search.spell,org.apache.lucene.analysis,org.apache.lucene.util,org.apache.solr.schema,org.apache.lucene.document,org.apache.solr.util.plugin,org.apache.solr.handler.component,org.apache.solr.response,org.apache.solr.request,org.apache.lucene.analysis.tokenattributes'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.function.distance'/>
      <p n='uses' v='org.apache.solr.search.function,org.apache.lucene.index,org.apache.lucene.spatial.geohash,org.apache.lucene.spatial,org.apache.lucene.search,org.apache.solr.search,org.apache.lucene.queryParser,org.apache.solr.request,org.apache.solr.schema,org.apache.lucene.spatial.tier,org.apache.solr.common,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.update'/>
      <p n='uses' v='org.apache.solr.common,org.apache.lucene.document,org.apache.lucene.index,org.apache.solr.schema,org.apache.solr.common.params,org.apache.solr.core,org.apache.solr.request,org.slf4j,org.apache.solr.search,org.apache.solr.util,org.apache.lucene.search,org.apache.solr.common.util,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.distributed.responseprocessor'/>
      <p n='uses' v='org.apache.solr.handler.component,org.apache.solr.client.solrj,org.apache.solr.request,org.apache.lucene.search.grouping,org.apache.solr.search.grouping.distributed,org.apache.solr.search,org.apache.solr.common,org.apache.solr.search.grouping.distributed.shardresultserializer,org.apache.lucene.search,org.apache.solr.common.util,org.apache.solr.search.grouping,org.apache.solr.schema,org.apache.solr.search.grouping.distributed.command'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.update.processor'/>
      <p n='uses' v='org.apache.solr.update,org.apache.solr.response,org.apache.solr.common.util,org.apache.solr.request,org.slf4j,org.apache.solr.schema,org.apache.solr.common.params,org.apache.solr.core,org.apache.solr.common,org.apache.lucene.document,org.apache.lucene.index,org.apache.solr.util.plugin'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.distributed'/>
      <p n='uses' v='org.apache.solr.handler.component'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.distributed.command'/>
      <p n='uses' v='org.apache.solr.search,org.apache.lucene.queryParser,org.apache.lucene.search,org.apache.solr.request,org.apache.solr.search.grouping,org.apache.solr.search.grouping.collector,org.apache.solr.schema,org.apache.lucene.search.grouping'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.analysis'/>
      <p n='uses' v='org.apache.lucene.analysis,org.apache.lucene.util,org.apache.lucene.analysis.ar,org.slf4j,org.apache.solr.core,org.apache.solr.common,org.apache.solr.common.util,org.apache.lucene.analysis.br,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.index,org.apache.lucene.analysis.bg,org.apache.lucene.analysis.cjk,org.apache.lucene.analysis.cn,org.apache.lucene.analysis.standard,org.apache.lucene.collation,org.apache.solr.util.plugin,org.apache.commons.io,org.apache.lucene.analysis.cz,org.apache.lucene.analysis.payloads,org.apache.lucene.analysis.compound,org.apache.commons.codec.language,org.apache.lucene.analysis.snowball,org.tartarus.snowball.ext,org.tartarus.snowball,org.apache.lucene.analysis.ngram,org.apache.lucene.analysis.fr,org.apache.lucene.analysis.en,org.apache.lucene.analysis.synonym,org.apache.lucene.util.fst,org.apache.lucene.analysis.fi,org.apache.lucene.analysis.gl,org.apache.lucene.analysis.de,org.apache.lucene.analysis.el,org.apache.lucene.analysis.hi,org.apache.lucene.analysis.hu,org.apache.lucene.analysis.hunspell,org.apache.lucene.analysis.compound.hyphenation,org.xml.sax,org.apache.lucene.analysis.in,org.apache.lucene.analysis.id,org.apache.lucene.analysis.it,org.apache.lucene.analysis.lv,org.apache.lucene.analysis.path,org.apache.lucene.analysis.fa,org.apache.commons.codec,org.apache.lucene.analysis.pt,org.apache.lucene.analysis.position,org.apache.lucene.analysis.reverse,org.apache.lucene.analysis.ru,org.apache.lucene.analysis.shingle,org.apache.lucene.analysis.es,org.apache.lucene.analysis.miscellaneous,org.apache.lucene.analysis.sv,org.apache.lucene.analysis.th,org.apache.solr.schema,org.apache.lucene.analysis.tr,org.apache.lucene.analysis.wikipedia'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.core'/>
      <p n='uses' v='org.apache.solr.search,org.apache.solr.common.util,org.apache.lucene.util,javax.xml.parsers,org.slf4j,org.w3c.dom,javax.xml.namespace,org.xml.sax,javax.xml.xpath,org.apache.solr.common,org.apache.commons.io,org.apache.solr.schema,org.apache.solr.handler.admin,org.apache.lucene.store,org.apache.solr.util.plugin,org.apache.lucene.index,javax.management,javax.management.remote,org.apache.solr.common.params,org.apache.solr.request,org.apache.lucene.document,org.apache.solr.response,org.apache.solr.handler.component,org.apache.solr.spelling,org.apache.solr.update,org.apache.solr.update.processor,org.apache.solr.highlight,org.apache.lucene.search,org.apache.solr.util,javax.naming,org.apache.solr.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.highlight'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.lucene.search.vectorhighlight,org.apache.solr.common,org.apache.lucene.search.highlight,org.apache.lucene.document,org.apache.solr.common.util,org.apache.lucene.search,org.apache.solr.request,org.apache.solr.util.plugin,org.slf4j,org.apache.lucene.index,org.apache.solr.schema,org.apache.solr.core,org.apache.solr.search,org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.solr.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.lucene.search,org.apache.solr.common.params,org.apache.lucene.queryParser,org.apache.solr.search.function,org.apache.solr.common.util,org.apache.solr.request,javax.xml.xpath,org.apache.solr.core,org.apache.solr.common,org.slf4j,org.w3c.dom,javax.xml.namespace,org.apache.lucene.index,org.apache.solr.schema,org.apache.solr.util,org.apache.solr.analysis,org.apache.lucene.analysis,org.apache.lucene.search.grouping,org.apache.commons.lang,org.apache.lucene.document,org.apache.solr.search.grouping.collector,org.apache.solr.util.plugin,org.apache.lucene.store,org.apache.lucene.spatial.geometry,org.apache.solr.search.function.distance,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.distributed.shardresultserializer'/>
      <p n='uses' v='org.apache.solr.search.grouping.distributed.command,org.apache.solr.search,org.apache.lucene.document,org.apache.lucene.search,org.apache.solr.common.util,org.apache.solr.search.grouping,org.apache.lucene.search.grouping,org.apache.solr.schema,org.apache.solr.handler.component,org.apache.solr.request'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping'/>
      <p n='uses' v='org.apache.lucene.search,org.apache.solr.search,org.apache.lucene.util,org.apache.solr.search.grouping.distributed.shardresultserializer,org.apache.solr.common.util,org.apache.lucene.search.grouping'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.handler.admin'/>
      <p n='uses' v='org.apache.solr.request,org.apache.solr.core,org.apache.solr.util.plugin,org.apache.solr.common,org.apache.solr.response,org.apache.solr.common.util,org.slf4j,org.apache.solr.common.params,org.apache.lucene.util,org.apache.solr.update,org.apache.solr.handler,org.apache.solr.update.processor,org.apache.lucene.index,org.apache.lucene.store,org.apache.solr.search,org.apache.solr.util,org.apache.solr.schema,org.apache.solr.analysis,org.apache.lucene.document,org.apache.lucene.search,org.apache.solr.common.luke,org.apache.lucene.analysis,org.apache.commons.io,org.apache.lucene'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.collector'/>
      <p n='uses' v='org.apache.solr.search,org.apache.lucene.search,org.apache.lucene.index'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.distributed.requestfactory'/>
      <p n='uses' v='org.apache.solr.search.grouping.distributed,org.apache.solr.handler.component,org.apache.solr.common.params,org.apache.solr.search,org.apache.solr.request,org.apache.solr.search.grouping,org.apache.solr.schema,org.apache.solr.search.grouping.distributed.command,org.apache.solr.common.util,org.apache.lucene.search,org.apache.lucene.search.grouping'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.handler.component'/>
      <p n='uses' v='org.apache.solr.common.util,org.apache.solr.schema,org.apache.solr.common.params,org.apache.solr.client.solrj,org.apache.solr.request,org.apache.solr.search,org.apache.solr.util,org.apache.solr.response,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.util,org.apache.solr.common,org.apache.lucene.queryParser,org.apache.solr.util.plugin,org.apache.solr.core,org.apache.solr.highlight,org.apache.solr.client.solrj.impl,org.apache.solr.client.solrj.request,org.apache.commons.httpclient,org.apache.commons.httpclient.params,org.apache.solr.handler,org.apache.lucene.document,org.apache.solr.search.grouping.endresulttransformer,org.apache.solr.search.grouping.distributed.responseprocessor,org.apache.solr.search.grouping.distributed,org.apache.solr.search.grouping.distributed.command,org.apache.solr.search.grouping.distributed.shardresultserializer,org.apache.solr.search.grouping,org.apache.solr.search.grouping.distributed.requestfactory,org.apache.lucene.search.grouping,org.apache.lucene.analysis.tokenattributes,org.w3c.dom,org.slf4j,javax.xml.namespace,org.xml.sax,javax.xml.xpath,org.apache.lucene.analysis,org.apache.solr.spelling,org.apache.solr.client.solrj.response,org.apache.lucene.search.spell'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.spelling.suggest.jaspell'/>
      <p n='uses' v='org.apache.solr.spelling.suggest,org.apache.solr.core,org.apache.lucene.search.suggest.jaspell,org.apache.lucene.search.suggest,org.apache.solr.common.util,org.slf4j'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.spelling.suggest'/>
      <p n='uses' v='org.apache.solr.core,org.apache.lucene.search.suggest,org.apache.solr.common.util,org.apache.solr.common.params,org.apache.solr.spelling,org.apache.solr.spelling.suggest.jaspell,org.apache.solr.spelling.suggest.tst,org.slf4j,org.apache.lucene.index,org.apache.solr.search,org.apache.solr.spelling.suggest.fst,org.apache.lucene.search.spell,org.apache.lucene.analysis'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.servlet'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.solr.core,org.apache.solr.common,org.apache.solr.common.util,org.apache.solr.response,org.apache.solr.request,org.xml.sax,org.apache.solr.schema,org.apache.commons.fileupload,javax.servlet,javax.servlet.http,org.apache.commons.fileupload.disk,org.apache.commons.fileupload.servlet,org.slf4j,org.apache.solr.servlet.cache,org.apache.solr.handler.admin,org.apache.solr.handler'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.util.plugin'/>
      <p n='uses' v='org.w3c.dom,org.apache.solr.core,org.apache.solr.common,org.apache.solr.common.util,org.slf4j'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.spelling.suggest.tst'/>
      <p n='uses' v='org.apache.solr.spelling.suggest,org.apache.solr.core,org.apache.lucene.search.suggest,org.apache.solr.common.util,org.apache.lucene.search.suggest.tst'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.handler'/>
      <p n='uses' v='org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.solr.common.util,org.apache.lucene.analysis,org.apache.solr.common.params,org.apache.solr.request,org.slf4j,org.apache.solr.schema,javax.xml.stream,org.apache.solr.common,org.apache.commons.io,org.apache.solr.response,org.apache.lucene.index,org.apache.commons.lang,org.apache.solr.analysis,org.apache.solr.update.processor,org.apache.solr.update,org.apache.solr.client.solrj.request,org.apache.commons.csv,org.apache.solr.core,org.apache.solr.util,org.apache.solr.search,org.apache.noggit,org.apache.lucene.search.similar,org.apache.lucene.document,org.apache.lucene.search,org.apache.solr.util.plugin,org.apache.lucene.store,org.apache.lucene.queryParser,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,org.apache.commons.httpclient.auth,org.apache.commons.httpclient.params,org.apache.lucene.search.spell,org.apache.solr.handler.component,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom,org.xml.sax,javax.xml.transform.sax,org.apache.solr.util.xslt'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.tst'/>
      <p n='uses' v='org.apache.solr.request,org.slf4j,org.apache.solr.schema,org.apache.solr.core,org.apache.solr.search,org.apache.lucene.document,org.apache.solr.common.util,org.apache.lucene.search,org.apache.solr.response,org.apache.lucene.util,org.apache.lucene.index,org.apache.solr.common'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.request'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.solr.response,org.slf4j,org.apache.solr.handler,org.apache.solr.core,org.apache.solr.common.util,org.apache.lucene.index,javax.servlet,org.apache.solr.schema,org.apache.solr.util,org.apache.solr.common,org.apache.solr.handler.component,org.apache.lucene.util,org.apache.lucene.search.grouping,org.apache.solr.search,org.apache.lucene.queryParser,org.apache.lucene.search,org.apache.solr.search.grouping'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.schema'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.solr.search,org.apache.solr.common,org.apache.lucene.search,org.apache.solr.util,org.apache.lucene.document,org.apache.solr.search.function,org.apache.solr.response,org.apache.solr.common.util,org.slf4j,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.solr.analysis,org.apache.lucene.analysis,org.apache.solr.request,org.apache.lucene.index,org.apache.solr.search.function.distance,org.apache.lucene.spatial,org.apache.lucene.spatial.tier,org.apache.lucene.spatial.geohash,javax.xml.xpath,org.apache.solr.util.plugin,org.w3c.dom,org.xml.sax,javax.xml.namespace,org.apache.solr.core,org.apache.lucene.queryParser'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.grouping.endresulttransformer'/>
      <p n='uses' v='org.apache.solr.common,org.apache.lucene.search,org.apache.solr.response,org.apache.solr.search.grouping,org.apache.lucene.search.grouping,org.apache.solr.schema,org.apache.solr.search.grouping.distributed.command,org.apache.solr.search,org.apache.lucene.document,org.apache.solr.common.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.util'/>
      <p n='uses' v='org.apache.lucene.util,org.apache.solr.common.params,org.apache.solr.common.util,org.slf4j,org.apache.solr.search,org.apache.lucene.search,org.apache.solr.request,org.apache.lucene.search.highlight,org.apache.solr.highlight,org.apache.lucene.queryParser,org.apache.solr.schema,org.apache.solr.update,org.apache.solr.core,org.apache.solr.common,org.apache.lucene.document,org.apache.solr.search.function,org.apache.solr.response'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.spelling.suggest.fst'/>
      <p n='uses' v='org.apache.lucene.search.suggest.fst,org.apache.solr.spelling.suggest,org.apache.solr.core,org.apache.lucene.search.suggest,org.apache.solr.common.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.servlet.cache'/>
      <p n='uses' v='org.apache.commons.codec.binary,org.apache.lucene.store,org.apache.solr.core,org.apache.solr.search,org.apache.solr.common,org.apache.solr.response,org.apache.solr.request,org.apache.lucene.index,javax.servlet.http'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.response'/>
      <p n='uses' v='org.apache.solr.search,org.apache.solr.schema,org.apache.solr.common,org.apache.solr.common.util,org.apache.solr.common.params,org.apache.lucene.document,org.apache.solr.request,org.slf4j,org.apache.commons.csv,org.apache.lucene.util,org.apache.solr.util.plugin,org.apache.solr.core,org.apache.commons.io,javax.xml.transform,javax.xml.transform.stream,org.apache.solr.util.xslt'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.search.function'/>
      <p n='uses' v='org.apache.solr.search,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.util,org.apache.solr.common.params,org.apache.solr.core,org.apache.solr.response,org.apache.solr.handler,org.apache.solr.request,org.apache.solr.update.processor,org.slf4j,org.apache.solr.util,org.apache.solr.schema,org.apache.solr.common'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.util.xslt'/>
      <p n='uses' v='org.apache.solr.core,javax.xml.transform,org.apache.solr.common,javax.xml.transform.stream,org.apache.commons.io,org.apache.solr.common.util,org.slf4j'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.embedded'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.solr.client.solrj,org.apache.solr.servlet,org.apache.solr.request,org.apache.solr.core,org.apache.solr.common,org.apache.solr.common.util,org.apache.solr.response,org.apache.solr.handler.admin,javax.servlet.http,org.mortbay.jetty,org.mortbay.jetty.servlet,org.mortbay.jetty.bio,org.mortbay.log'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.remote
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.language)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.language ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.csv)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.csv ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.disk)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.disk
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.servlet
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.auth
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.ar)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.ar ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.bg)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.bg ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.br)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.br ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.cjk)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.cjk ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.cn)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.cn ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.compound)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.compound ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.compound.hyphenation)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.compound.hyphenation
       ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.cz)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.cz ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.de)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.de ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.el)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.el ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.en)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.en ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.es)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.es ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.fa)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.fa ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.fi)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.fi ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.fr)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.fr ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.gl)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.gl ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.hi)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.hi ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.hu)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.hu ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.hunspell)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.hunspell ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.id)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.id ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.in)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.in ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.it)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.it ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.lv)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.lv ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.miscellaneous)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.miscellaneous ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.ngram)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.ngram ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.path)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.path ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.payloads)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.payloads ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.position)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.position ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.pt)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.pt ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.reverse)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.reverse ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.ru)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.ru ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.shingle)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.shingle ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.snowball)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.snowball ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.standard)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.standard ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.sv)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.sv ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.synonym)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.synonym ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.th)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.th ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tokenattributes)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tokenattributes ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.tr)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.tr ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.analysis.wikipedia)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.analysis.wikipedia ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.collation)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.collation ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.document)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.document ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.index)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.index ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.queryParser)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.queryParser ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.grouping)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search.grouping ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.highlight)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search.highlight ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.similar)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.similar
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.spell)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.spell
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.suggest)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.suggest
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.suggest.fst)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.suggest.fst
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.suggest.jaspell)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.suggest.jaspell
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.suggest.tst)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.lucene.search.suggest.tst
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.search.vectorhighlight)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.search.vectorhighlight ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.spatial)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.spatial ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.spatial.geohash)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.spatial.geohash ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.spatial.geometry)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.spatial.geometry ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.spatial.tier)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.spatial.tier ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.store)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.store ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.lucene.util.fst)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.lucene.util.fst ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.noggit)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.noggit
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.client.solrj)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.client.solrj ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.client.solrj.impl)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.client.solrj.impl ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.client.solrj.request)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.client.solrj.request ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.client.solrj.response)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.client.solrj.response ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common.luke)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common.luke ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common.params)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common.params ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.solr.common.util)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.solr.common.util ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.jetty)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.jetty
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.jetty.bio)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.jetty.bio
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.jetty.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.jetty.servlet
    </require>
    <require extend='false' filter='(&amp;(package=org.mortbay.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mortbay.log
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.tartarus.snowball)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.tartarus.snowball ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.tartarus.snowball.ext)(version&gt;=3.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.tartarus.snowball.ext ;version=[3.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='solr-solrj/3.5.0' presentationname='solr-solrj' symbolicname='solr-solrj' uri='solr-solrj-3.5.0.jar' version='3.5.0'>
    <size>
      275656
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='solr-solrj'/>
      <p n='symbolicname' v='solr-solrj'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.response'/>
      <p n='uses' v='org.apache.solr.common.util,org.apache.solr.client.solrj.util,org.apache.solr.common,org.apache.solr.common.luke,org.apache.solr.client.solrj.beans,org.apache.solr.client.solrj'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.beans'/>
      <p n='uses' v='org.apache.solr.common'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.impl'/>
      <p n='uses' v='org.apache.solr.client.solrj.request,org.apache.solr.common.util,org.apache.solr.client.solrj,org.apache.solr.common,org.apache.commons.httpclient.methods.multipart,org.apache.commons.httpclient.methods,org.apache.solr.client.solrj.response,org.apache.solr.client.solrj.beans,org.apache.solr.common.params,org.apache.solr.client.solrj.util,org.slf4j,org.apache.commons.httpclient,org.apache.commons.httpclient.params,javax.xml.stream'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.common.params'/>
      <p n='uses' v='org.apache.solr.common.util,org.apache.solr.common'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj'/>
      <p n='uses' v='org.apache.solr.common.util,org.apache.solr.common.params,org.apache.solr.client.solrj.response,org.apache.solr.client.solrj.beans,org.apache.solr.common,org.apache.solr.client.solrj.request'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.util'/>
      <p n='uses' v='org.apache.solr.common.params,org.apache.commons.httpclient.util,org.apache.solr.common,org.apache.solr.common.util'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.common'/>
      <p n='uses' v='org.slf4j'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.client.solrj.request'/>
      <p n='uses' v='org.apache.solr.client.solrj.response,org.apache.solr.common.params,org.apache.solr.client.solrj,org.apache.solr.common.util,org.apache.solr.client.solrj.util,org.apache.solr.common'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.common.util'/>
      <p n='uses' v='org.apache.solr.common,org.w3c.dom,javax.xml.transform,javax.xml.transform.sax,org.xml.sax,javax.xml.stream,org.xml.sax.ext,org.slf4j'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.solr.common.luke'/>
      <p n='version' t='version' v='3.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.auth
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods.multipart)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods.multipart
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.util
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
  </resource>
</repository>